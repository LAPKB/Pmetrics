% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotPMop.R
\name{plot.PM_op}
\alias{plot.PM_op}
\title{Plot PM_op objects}
\usage{
\method{plot}{PM_op}(
  x,
  include,
  exclude,
  icen = "median",
  pred.type = "post",
  outeq = 1,
  block = 1,
  line,
  marker = T,
  mult = 1,
  resid = F,
  legend,
  log = F,
  grid = T,
  xlab,
  ylab,
  xlim,
  ylim,
  ...
)
}
\arguments{
\item{x}{The name of an \link{PM_op} data object generated by \link{makeOP}
and loaded with \link{PM_load} as a \link{PM_result}, e.g. \code{PM_result$op}.}

\item{include}{A vector of subject IDs to include in the plot, e.g. c(1:3,5,15)}

\item{exclude}{A vector of subject IDs to exclude in the plot, e.g. c(4,6:14,16:20)}

\item{icen}{Can be either "median" for the predictions based on medians of \code{pred.type} parameter value distributions, or "mean".  Default is "median".}

\item{pred.type}{Either 'post' for a posterior object or 'pop' for a population object.  Default is 'post'.}

\item{outeq}{Which output equation to plot. Default is 1.}

\item{block}{Which block to plot, where blocks are defined by dose reset events (EVID = 4) in the data. Default is 1.}

\item{line}{Controls characteristics of lines. Unlike
some other Pmetrics plots, for plot.PM_op, \code{line} is a list of
three elements:
\itemize{
\item \code{lm}  If set to \code{TRUE} or a list of plotly line attributes,
will generate a linear regression of the form obs ~ pred.
Line attributes will control the appearance of the regression
line and the confidence interval around the line. If set to
\code{FALSE}, no linear regression will be generated. The default
values for the elements of the \code{lm} list, all of which can be
overriden are:
\itemize{
\item \code{ci} Confidence interval around the regression, default 0.95.
\item \code{color} Color of the regression line and the confidence area around
the line, but at opacity = 0.2. Default is "dodgerblue".
\item \code{width }Width of the regression line, default 1.
\item \code{dash} See \code{plotly::schema()}, traces > scatter > attributes >
line > dash > values. Default is "solid".
Example: \code{line = list(lm = list(color = "red", dash = "longdash", width = 2))}
}
\item \code{loess} If set to \code{TRUE} or a list of plotly line attributes,
will generate a loess regression of the form obs ~ pred.
The list elements and default values in the \code{loess} list are the
same as for \code{lm} except the default style is "dash".
Example: \code{line = list(lm = F, loess = T)}
\item \code{ref} If set to \code{TRUE} or a list of plotly line attributes,
will generate a reference line with slope = 1 and intercept = 0.
The default values for the elements of the \code{ref} list are:
\itemize{
\item \code{color} "grey".
\item \code{width} 1.
\item \code{dash} "dot".
Note that there is no \emph{ci} argument for the \emph{ref} list.
Example: \code{line = list(lm = F, loess = T, ref = list(color = "lightgrey"))}
If the \code{line} argument is missing, it will be set to
\code{line = list(lm = F, loess = T, ref = T)}, i.e. there will be a loess
regression with reference line, but no linear regression.
}
}}

\item{marker}{Controls the plotting symbol for observations.  This argument maps to the plotly marker object. It can be boolean or a list. \code{TRUE} will plot the marker with default characteristics. \code{FALSE} will suppress marker plotting. If a list, can control many marker characteristics, including overriding defaults. Use the plotly \code{plotly::schema()} command in the console and navigate to traces > scatter > attributes > marker to see all the ways the marker can be formatted. Most common will be: * color Marker color. * symbol Plotting character. See \code{plotly::schema()}, traces > scatter > attributes > marker > symbol > values. * size Character size in points. * opacity Ranging between 0 (fully transparent) to 1 (fully opaque). * line A list of  additional attributes governing the outline for filled shapes, most commonly color and width. Example: \code{marker = list(color = "red", symbol = "triangle", opacity = 0.8, line = list(color = "black", width = 2))} Default is
\code{marker = list(color = orange, shape = "circle", size = 10, opacity = 0.5, line = list(color = black, width = 1))}.}

\item{mult}{Multiplication factor for y axis, e.g. to convert mg/L to ng/mL}

\item{resid}{Boolean operator to generate a plot of weighted prediction error vs. time,
a plot of weighted prediction error vs. prediction. Prediction error is
pred - obs. By default a loess regression will indicate deviation from
zero prediction error.}

\item{log}{Boolean operator to plot the y axis in log base 10. This argument maps to the   the yaxis type value in the layout object in plotly.  Use the plotly \code{plotly::schema()} command in the console and navigate to layout > layoutAttributes > yaxis > type. Example: \code{log = T}}

\item{grid}{Controls grid display. This argument maps to the xaxis and yaxis layout objects in plotly.  Use the plotly \code{plotly::schema()} command in the console and navigate to layout > layoutAttributes > xaxis or yaxis > gridcolor or gridwidth. It is a Boolean operator. If \code{FALSE}, no grid is plotted.  If \code{TRUE}, the default color \emph{grey50} and width 1 will be plotted at  major tick marks. If a list, color and width can be customized. Examples:  * \code{grid = F} * \code{grid = list(gridcolor = "black", gridwidth = 2)}}

\item{xlab}{Value for x axis label. This argument maps to the the xaxis layout object in plotly.  Use the plotly \code{plotly::schema()} command in the console and navigate to layout > layoutAttributes > xaxis to see other ways to customize this axis using lists as additional arguments to the plot function. Example: \code{xaxis = list(title = list(text = "Time", font = list(color = "red", family = "Arial", size = 10)))}   If missing, will default to "Predicted" for
plots when \code{resid = F} and either "Time" or "Predicted" for residual plots.}

\item{ylab}{Value for y axis label. This argument maps to the yaxis layout object in plotly.  Use the plotly \code{plotly::schema()} command in the console and navigate to layout > layoutAttributes > yaxis to see other ways to customize this axis using lists as additional arguments to the plot function. Example: \code{yaxis = list(title = list(text = "Concentration", font = list(color = "blue", family = "Times New Roman", size = 12)))}   If missing, will default to "Observed" for
plots when \code{resid = F} and either "Individual weighted residuals" or
"Population weighted residuals" for residual plots, depending on the value of
\code{pred.type}.}

\item{xlim}{Limits of the x axis as a vector.   This argument maps to the   the xaxis range in the layout object in plotly.  Use the plotly \code{plotly::schema()} command in the console and navigate to layout > layoutAttributes > xaxis > range. Example: \code{xlim = c(0,1)}}

\item{ylim}{Limits of the y axis as a vector.   This argument maps to the   the yaxis range in the layout object in plotly.  Use the plotly \code{plotly::schema()} command in the console and navigate to layout > layoutAttributes > yaxis > range. Example: \code{ylim = c(0,100)}}

\item{\dots}{Other parameters which can be passed to the layout > xaxis or > yaxis attributes in a plotly plot to further control axis formatting.  Note that \code{legend}, \code{log}, \code{xlab}, \code{ylab}, \code{xlim}, and \code{ylim} are  all controlled by the layout object, but are provided throughout Pmetrics plotly function arguments as shortcuts that map to layout elements.  Therefore, the dots argument should be used to specify other aspects of the  xaxis or yaxis See \code{plotly::schema()} layout > layoutAttributes > xaxis/yaxis for options. Example: \verb{xaxis = list(tickcolor = "black", tickfont = list(family = "Arial", size = 14, color = "black")))} .}
}
\value{
Plots the object.
}
\description{
Plot Pmetrics Observed vs. Predicted Objects
}
\details{
Generates a plot of Observed vs. Predicted observations. The default
is to generate an observed vs. predicted plot of predictions based on the
median of the Bayesian posterior distributions for each subject.
}
\examples{
NPex$op$plot()
NPex$op$plot(pred.type = "pop")
NPex$op$plot(line = list(lm = T, ref = T, loess = F))
NPex$op$plot(line = list(loess = list(ci = 0.9, color = "green")))
NPex$op$plot(marker = list(color = "blue"))
NPex$op$plot(resid = T)
}
\seealso{
\link{PM_result}, \link{schema}

Other PMplots: 
\code{\link{plot.MMopt}()},
\code{\link{plot.PM_data}()},
\code{\link{plot.PM_final}()},
\code{\link{plot.PM_pta}()},
\code{\link{plot.PM_sim}()},
\code{\link{plot.PM_valid}()},
\code{\link{plot.PMcov}()},
\code{\link{plot.PMcycle}()},
\code{\link{plot.PMdopt}()}
}
\author{
Michael Neely
}
\concept{PMplots}
