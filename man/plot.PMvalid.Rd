% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotPMvalid.R
\name{plot.PMvalid}
\alias{plot.PMvalid}
\title{Plot PM_valid objects}
\usage{
\method{plot}{PMvalid}(
  x,
  type = "vpc",
  tad = F,
  outeq = 1,
  log = F,
  marker = T,
  lower = T,
  mid = T,
  upper = T,
  grid = T,
  legend = F,
  xlim,
  ylim,
  xlab = c("Time", "Time after dose"),
  ylab = "Output",
  ...
)
}
\arguments{
\item{x}{The name of an \emph{PMvalid} data object generated by the \link{make_valid}
fundtion, which is usually called by the \verb{$validate} method for \link{PM_result}
objects.}

\item{type}{Default is "vpc" for a visual predictive check, but could be
"pcvpc" for a prediction-corrected visual predictive check, or
"npde" for a normalized prediction distribution error analysis/plot.}

\item{tad}{Boolean operator to use time after dose rather than time after start.  Default is \code{FALSE}.}

\item{outeq}{Which output equation to plot. Default is 1.}

\item{log}{Boolean operator to plot the y axis in log base 10.
This argument maps to the
the yaxis type value in the layout object in plotly.
Use the plotly \code{plotly::schema()} command in the console and navigate
to layout > layoutAttributes > yaxis > type.
Example: \code{log = T}}

\item{marker}{Controls the plotting symbol for observations.
This argument maps to the plotly marker object.
It can be boolean or a list.
\code{TRUE} will plot the marker with default characteristics.
\code{FALSE} will suppress marker plotting.
If a list, can control many marker characteristics, including overriding defaults.
Use the plotly \code{plotly::schema()} command in the console and navigate
to traces > scatter > attributes > marker to see all the ways the marker
can be formatted. Most common will be:
\itemize{
\item color Marker color.
\item symbol Plotting character. See \code{plotly::schema()}, traces > scatter > attributes > marker > symbol > values.
\item size Character size in points.
\item opacity Ranging between 0 (fully transparent) to 1 (fully opaque).
\item line A list of  additional attributes governing the outline for filled shapes, most commonly
color and width.
Example: \code{marker = list(color = "red", symbol = "triangle", opacity = 0.8, line = list(color = "black", width = 2))}
}}

\item{lower, mid, upper}{Controls characteristics of quantiles.
These arguments map to several plotly attributes.
Each can be a boolean value or a list.
\code{TRUE} will plot default characteristics. \code{FALSE} will suppress quantile plots.
The elements of the list for each argument are as follows:
\itemize{
\item value The quantile value. Default for lower is 0.025, mid is 0.5,
and upper is 0.975.
\item color The color for both the 95\%CI region around simulated quantile vs. time,
and the color of the line for the observation quantile vs. time.
Default for lower and upper is "dodgerblue" and for mid it is "red".
\item dash The style of the obervation quantile line.
See \code{plotly::schema()}, traces > scatter > attributes > line > dash > values.
Default for lower and upper is "dash" and for mid it is "solid".
\item width Default is 1 for lower, mid, and upper.
\item opacity The opacity of the 95\%CI region around simulated quantile vs. time.
Default is 0.4 for lower, mid and upper,
but can range between 0 (fully transparent) to 1 (fully opaque).
Example: \code{upper = list(value = 0.9, color = "red", dash = "longdash", opacity = 0.5, width = 2)}
}}

\item{grid}{Controls grid display.
This argument maps to the xaxis and yaxis layout objects in plotly.
Use the plotly \code{plotly::schema()} command in the console and navigate
to layout > layoutAttributes > xaxis or yaxis > gridcolor or gridwidth.
It is a Boolean operator. If \code{FALSE}, no grid is plotted.
If \code{TRUE}, the default color \emph{grey50} and width 1 will be plotted at
major tick marks. If a list,
color and width can be customized.
Examples:
\itemize{
\item \code{grid = F}
\item \code{grid = list(gridcolor = "black", gridwidth = 2)}
}}

\item{legend}{Controls display of legend.
This argument maps to the plotly layout showlegend and legend arguments.
It is either a boolean operator (most common) or a list of parameters to be supplied to plotly.
See \code{plotly::schema()} > layout > layoutAttributes > legend and showlegend
for more details on the available options for formatting.
If legend is supplied as a list,  the plotly layout > layoutAttributes > showlegend value will
be set to \code{TRUE} automatically.
Examples:
\itemize{
\item \code{legend = T}
\item \code{legend = list(orientation = "h", font = list(color = "blue"))}
}}

\item{xlim}{Limits of the x axis as a vector.
This argument maps to the
the xaxis range in the layout object in plotly.
Use the plotly \code{plotly::schema()} command in the console and navigate
to layout > layoutAttributes > xaxis > range.
Example: \code{xlim = c(0,1)}}

\item{ylim}{Limits of the y axis as a vector.
This argument maps to the
the yaxis range in the layout object in plotly.
Use the plotly \code{plotly::schema()} command in the console and navigate
to layout > layoutAttributes > yaxis > range.
Example: \code{ylim = c(0,100)}}

\item{xlab}{Value for x axis label.
This argument maps to the the xaxis layout object in plotly.
Use the plotly \code{plotly::schema()} command in the console and navigate
to layout > layoutAttributes > xaxis to see other ways to customize
this axis using lists as additional arguments to the plot function.
Example: \code{xaxis = list(title = list(text = "Time", font = list(color = "red", family = "Arial", size = 10)))}}

\item{ylab}{Value for y axis label.
This argument maps to the yaxis layout object in plotly.
Use the plotly \code{plotly::schema()} command in the console and navigate
to layout > layoutAttributes > yaxis to see other ways to customize
this axis using lists as additional arguments to the plot function.
Example: \code{yaxis = list(title = list(text = "Concentration", font = list(color = "blue", family = "Times New Roman", size = 12)))}}

\item{\dots}{Other parameters which can be passed to control axis formatting. Specify as lists
named either xaxis or yaxis. See \code{plotly::schema()} layout > layoutAttributes > xaxis/yaxis for options.
Example: \code{xaxis = list(title = list(text = "Time (h)", font = list(family = "Arial", size = 14, color = "black")))}}
}
\value{
Plots and returns the plotly object
}
\description{
Plot Pmetrics Validation Objects
}
\details{
Generates a plot of outputs (typically concentrations) on the y axis and time
on the x axis. If \code{tad} was set to \code{TRUE}
when \link{make_valid} was called, then time may be either absolute (default) or time
after dose, controlled by the \code{tad} argument to this plot function.
The following items are included in the plot:
\itemize{
\item Observed outputs. These may be either as measured for \code{type = "vpc"} or
prediction corrected for \code{type = "pcvpc"}. Format of the observations is
controlled by the \code{marker} argument. The default is
\code{list(color = "black", symbol = "circle-open", size = 8)}.
\item Quantiles vs. time for observations. These are plotted by default as dashed
blue lines for the 2.5th and 97.5th percentiles and a solid red line for the
median. Formatting and the value for each quantile can be controlled
with the \code{upper}, \code{mid}, and \code{lower} arguments.
\item 95\% CI around the same quantiles of combined simulations from each subject.
The values and formatting for these quantile CIs are the same as for the observations,
and also controlled with the \code{upper}, \code{mid}, and \code{lower} arguments.
}

Good vpc/pcvpc plots are considered to be those where the quantile lines for
the oberservations lie within the 95\%CI quantile regions for simulations,
indicated that the model is "centered" on the data and faithfully captures the
variability in the data. For an npde plot, one expects to see approximately
normally distributed normalized prediction errors.
}
\seealso{
\link{makeValid}

Other PMplots: 
\code{\link{plot.MMopt}()},
\code{\link{plot.PM_data}()},
\code{\link{plot.PM_final}()},
\code{\link{plot.PM_op}()},
\code{\link{plot.PMcov}()},
\code{\link{plot.PMcycle}()},
\code{\link{plot.PMdopt}()},
\code{\link{plot.PMpta}()},
\code{\link{plot.PMsim}()}
}
\author{
Michael Neely
}
\concept{PMplots}
