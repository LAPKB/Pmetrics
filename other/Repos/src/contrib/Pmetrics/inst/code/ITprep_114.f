	BLOCK DATA
	IMPLICIT REAL*8(A-H,O-Z)
	COMMON/TOBLK/NUMBER
	CHARACTER NUMBER(999)*3
      DATA(NUMBER(I),I=1,170)/'001','002','003','004','005','006','007',
     X'008','009',
     1'010','011','012','013','014','015','016','017','018','019','020',
     2'021','022','023','024','025','026','027','028','029','030',
     3'031','032','033','034','035','036','037','038','039','040',
     4'041','042','043','044','045','046','047','048','049','050',
     5'051','052','053','054','055','056','057','058','059','060',
     6'061','062','063','064','065','066','067','068','069','070',
     7'071','072','073','074','075','076','077','078','079','080',
     8'081','082','083','084','085','086','087','088','089','090',
     9'091','092','093','094','095','096','097','098','099','100',
     X'101','102','103','104','105','106','107','108','109','110',
     1'111','112','113','114','115','116','117','118','119','120',
     2'121','122','123','124','125','126','127','128','129','130',
     3'131','132','133','134','135','136','137','138','139','140',
     4'141','142','143','144','145','146','147','148','149','150',
     5'151','152','153','154','155','156','157','158','159','160',
     6'161','162','163','164','165','166','167','168','169','170'/
	DATA(NUMBER(I),I=171,340)/'171','172','173','174','175','176',
     X'177','178','179','180',
     8'181','182','183','184','185','186','187','188','189','190',
     9'191','192','193','194','195','196','197','198','199','200',
     X'201','202','203','204','205','206','207','208','209','210',
     1'211','212','213','214','215','216','217','218','219','220',
     2'221','222','223','224','225','226','227','228','229','230',
     3'231','232','233','234','235','236','237','238','239','240',
     4'241','242','243','244','245','246','247','248','249','250',
     5'251','252','253','254','255','256','257','258','259','260',
     6'261','262','263','264','265','266','267','268','269','270',
     7'271','272','273','274','275','276','277','278','279','280',
     8'281','282','283','284','285','286','287','288','289','290',
     9'291','292','293','294','295','296','297','298','299','300',
     X'301','302','303','304','305','306','307','308','309','310',
     1'311','312','313','314','315','316','317','318','319','320',
     2'321','322','323','324','325','326','327','328','329','330',
     3'331','332','333','334','335','336','337','338','339','340'/
	DATA(NUMBER(I),I=341,510)/'341','342','343','344','345','346',
     X'347','348','349','350',
     5'351','352','353','354','355','356','357','358','359','360',
     6'361','362','363','364','365','366','367','368','369','370',
     7'371','372','373','374','375','376','377','378','379','380',
     8'381','382','383','384','385','386','387','388','389','390',
     9'391','392','393','394','395','396','397','398','399','400',
     X'401','402','403','404','405','406','407','408','409','410',
     1'411','412','413','414','415','416','417','418','419','420',
     2'421','422','423','424','425','426','427','428','429','430',
     3'431','432','433','434','435','436','437','438','439','440',
     4'441','442','443','444','445','446','447','448','449','450',
     5'451','452','453','454','455','456','457','458','459','460',
     6'461','462','463','464','465','466','467','468','469','470',
     7'471','472','473','474','475','476','477','478','479','480',
     8'481','482','483','484','485','486','487','488','489','490',
     9'491','492','493','494','495','496','497','498','499','500',
     X'501','502','503','504','505','506','507','508','509','510'/
	DATA(NUMBER(I),I=511,680)/'511','512','513','514','515','516',
     X'517','518','519','520',
     2'521','522','523','524','525','526','527','528','529','530',
     3'531','532','533','534','535','536','537','538','539','540',
     4'541','542','543','544','545','546','547','548','549','550',
     5'551','552','553','554','555','556','557','558','559','560',
     6'561','562','563','564','565','566','567','568','569','570',
     7'571','572','573','574','575','576','577','578','579','580',
     8'581','582','583','584','585','586','587','588','589','590',
     9'591','592','593','594','595','596','597','598','599','600',
     X'601','602','603','604','605','606','607','608','609','610',
     1'611','612','613','614','615','616','617','618','619','620',
     2'621','622','623','624','625','626','627','628','629','630',
     3'631','632','633','634','635','636','637','638','639','640',
     4'641','642','643','644','645','646','647','648','649','650',
     5'651','652','653','654','655','656','657','658','659','660',
     6'661','662','663','664','665','666','667','668','669','670',
     7'671','672','673','674','675','676','677','678','679','680'/
	DATA(NUMBER(I),I=681,850)/'681','682','683','684','685','686',
     X'687','688','689','690',
     9'691','692','693','694','695','696','697','698','699','700',
     X'701','702','703','704','705','706','707','708','709','710',
     1'711','712','713','714','715','716','717','718','719','720',
     2'721','722','723','724','725','726','727','728','729','730',
     3'731','732','733','734','735','736','737','738','739','740',
     4'741','742','743','744','745','746','747','748','749','750',
     5'751','752','753','754','755','756','757','758','759','760',
     6'761','762','763','764','765','766','767','768','769','770',
     7'771','772','773','774','775','776','777','778','779','780',
     8'781','782','783','784','785','786','787','788','789','790',
     9'791','792','793','794','795','796','797','798','799','800',
     X'801','802','803','804','805','806','807','808','809','810',
     1'811','812','813','814','815','816','817','818','819','820',
     2'821','822','823','824','825','826','827','828','829','830',
     3'831','832','833','834','835','836','837','838','839','840',
     4'841','842','843','844','845','846','847','848','849','850'/
	DATA(NUMBER(I),I=851,999)/'851','852','853','854','855','856',
     X'857','858','859','860',
     6'861','862','863','864','865','866','867','868','869','870',
     7'871','872','873','874','875','876','877','878','879','880',
     8'881','882','883','884','885','886','887','888','889','890',
     9'891','892','893','894','895','896','897','898','899','900',
     X'901','902','903','904','905','906','907','908','909','910',
     1'911','912','913','914','915','916','917','918','919','920',
     2'921','922','923','924','925','926','927','928','929','930',
     3'931','932','933','934','935','936','937','938','939','940',
     4'941','942','943','944','945','946','947','948','949','950',
     5'951','952','953','954','955','956','957','958','959','960',
     6'961','962','963','964','965','966','967','968','969','970',
     7'971','972','973','974','975','976','977','978','979','980',
     8'981','982','983','984','985','986','987','988','989','990',
     9'991','992','993','994','995','996','997','998','999'/
	END
      IMPLICIT REAL*8(A-H,O-Z)
	PARAMETER(MAXDIM=30, MAXSUB=800, MAXOBDIM=150, MAXNUMEQ=7)
      DIMENSION YO(MAXOBDIM,MAXNUMEQ),AB(30,2),VALFIX(20),IRAN(32),
     1 ATOL(20),PAREST(MAXSUB,30),SERNUM(MAXSUB),
     2 YPREDPOP(MAXSUB,MAXNUMEQ,MAXOBDIM,2),
     2 YPREDBAY(MAXSUB,MAXNUMEQ,MAXOBDIM,2),PARBAY(MAXSUB,2,30),
     3 IUNIQ(MAXNUMEQ),IGAMMA(MAXNUMEQ),IASS(MAXNUMEQ),C0P(MAXNUMEQ),
     4 C1P(MAXNUMEQ),C2P(MAXNUMEQ),C3P(MAXNUMEQ),IQVAL(MAXNUMEQ),
     5 NCSTORE(MAXNUMEQ),GENCOEF(MAXNUMEQ,5,4),IPATVEC(MAXSUB),AF(7),
     6 ICOVTYPE(26),RANFIXEST(20)
      CHARACTER NUMBER(999)*3,PATFIL*20,PREFIX*5,PAR(30)*11,
     1  FILNFO*20,EXT*3,SAVFIL*20,
     2  PARFIX(20)*11,READLINE*1000,CODE*14,FILASS*20,FORFILE*20,
     3  PATH*60,TMPFILE*13,PATHFILE*73,PATHFIL2*73,INSTFILE*12,
     4  INSTBAK*12,BLOCKPAT*20,CODEPAT*15,ALLINSTRUCT*20,COVNAME(26)*11,
     5  ERRFIL*20,PARRANFIX(20)*11
      CHARACTER(LEN=20) :: OSName
      CHARACTER(LEN=5) :: CopyFile
      CHARACTER(LEN=4) :: DeleteFile
      CHARACTER(LEN=6) :: ClearScreen
      CHARACTER(LEN=10) :: ListDir
	COMMON/TOBLK/NUMBER
      COMMON/TOWRITE/IALLIN,IVERIFY,NCOVA,ICOVTYPE,COVNAME
      COMMON/ERROR/ERRFIL
      ERRFIL = 'ERRORLOG'
	WRITE(*,3214) MAXSUB,MAXOBDIM,MAXDIM,MAXNUMEQ
 3214   FORMAT(//' IN THIS "PC" PROGRAM, BECAUSE OF SPACE LIMITATIONS,'/
     1' THE NUMBER OF SUBJECTS IS LIMITED TO ',I4,','//
     2' THE NUMBER OF OBSERVATION TIMES PER SUBJECT IS LIMITED TO ',I4,'
     3,'//
     2' THE NUMBER OF RANDOM PARAMETERS IS LIMITED TO ',I2,','//
     4' THE NUMBER OF OUTPUT EQUATIONS IS LIMITED TO ',I2,'.'//)
       CALL GET_COMMAND_ARGUMENT(1,OSName)
       IF ((INDEX(OSName,"MacOSX",.TRUE.).EQ.1)
     $ .OR.(INDEX(OSName,"Darwin",.TRUE.).EQ.1)
     $ .OR.(INDEX(OSName,"BSD",.TRUE.).EQ.1)) THEN
          PRINT *,"Requested OS is ", OSName
          OSName="UNIX"
          PRINT *,"Setting OS to ", OSName
          PRINT *,""
          CopyFile="cp "
          DeleteFile="rm "
          ClearScreen="clear "
          ListDir="ls -tp "
       ELSE IF ((INDEX(OSName,"DOS",.TRUE.).EQ.1)
     $ .OR.(INDEX(OSName,"WinXP",.TRUE.).EQ.1)
     $ .OR.(INDEX(OSName,"XP",.TRUE.).EQ.1)
     $ .OR.(INDEX(OSName,"WinXP",.TRUE.).EQ.1)
     $ .OR.(INDEX(OSName,"Vista",.TRUE.).EQ.1)
     $ .OR.(INDEX(OSName,"Win7",.TRUE.).EQ.1)) THEN
          PRINT *,"Requested OS is ", OSName
          OSName="DOS"
          PRINT *,"Setting OS to ", OSName
          CopyFile="COPY "
          DeleteFile="DEL "
          ClearScreen="CLS "
          ListDir="DIR /OD "
       ELSE
          PRINT *,"WARNING: Operating system not identified."
          PRINT *,"WARNING: Can not initialize system calls."
          PRINT *,""
          PRINT *,"Possible command line error, try:"
          PRINT *,"C:\> npbig.exe <DOS,Win,XP,Vista,or Win7>"
          PRINT *,"unix$ npbig <MacOSX,Darwin,BSD>"
          PRINT *,""
          PRINT *,"NPAG Exiting with status 2"
          PRINT *,""
          CALL EXIT(2)
       END IF
        INSTFILE = 'it2b102.inp'
        INSTBAK = INSTFILE(1:8)//'.bak'
      IVERIFY = 1
9880  WRITE(*,9876)
 9876 FORMAT(//' ENTER 1 IF YOU HAVE AN INSTRUCTION FILE IN THE '/
     1'         CURRENT DIRECTORY WHICH HAS ALL THE INSTRUCTIONS FOR'/
     2'         AN IT2B ANALYSIS (THIS FILE MUST HAVE "REM_FRN JUL_13"'/
     3'         OR A LATER DATE ON THE FIRST LINE). AND NOTE THAT IF'/
     4'         YOU USE THIS OPTION, AND THE ENTRY ON THE SECOND LINE'/
     5'         IS 0, THE PROGRAM WILL RUN WITH NO FURTHER USER INPUT.'/
     6'         BUT IF THE ENTRY ON THE 2ND LINE IS 1, YOU WILL HAVE'/
     7'         THE CHANCE TO EDIT YOUR INSTRUCTIONS BELOW.'//
     8' ENTER 0 OTHERWISE (THIS INCLUDES THE OPTION OF USING AN '/
     9'         OLDER INSTRUCTION FILE): ')
      READ(*,*,ERR=9880) IALLIN
      IF(IALLIN .NE. 1 .AND. IALLIN .NE. 0) GO TO 9880
	IF(IALLIN .EQ. 1) THEN
       PATH = ' '
       NOB = 0
       WRITE(*,*)
       WRITE(*,*)' ENTER THE NAME OF THE INSTRUCTION FILE; '
       WRITE(*,*)' ENTER -99 TO SEE ALL OR A PART OF YOUR DIRECTORY: '
       READ(*,2) ALLINSTRUCT
       IF(ALLINSTRUCT(1:3) .EQ. '-99')
     1  CALL SEEDIR(PATH,NOB,ALLINSTRUCT,OSName,ListDir)
     	 TMPFILE = ' '
       TMPFILE = ALLINSTRUCT
       CALL FULLNAME(PATH,TMPFILE,PATHFILE)
       OPEN(25,FILE=PATHFILE,ERR=9810,STATUS='OLD')
       GO TO 9820
 9810  WRITE(*,5316) PATHFILE
       GO TO 9880
 9820   CONTINUE
       READ(25,7123) CODE
	 ICODE1 = 0
       IF(CODE .EQ. 'REM_FRN JUL_13') ICODE1 = 1
       IF(CODE .EQ. 'REM_FRN MAR_16') ICODE1 = 2
       IF(ICODE1 .EQ. 0) THEN
        WRITE(*,9821)
 9821   FORMAT(//' YOUR INSTRUCTION FILE IS NOT FROM THE ALLOWABLE '/
     1' SET OF INSTRUCTION FILES.'//
     2' FOR THIS OPTION, YOU MUST USE A FILE WITH REM_FRN XXX_XX IN '/
     3' COLUMNS 1 THROUGH 14 ON LINE 1, WHERE  XXX_XX  IS JUL_13 OR'/
     4' A MORE RECENT DATE.'//)
        GO TO 9880
       ENDIF
      READ(25,*)
      READ(25,*) IVERIFY
      READ(25,*)
      READ(25,2) FORFILE
      READ(25,*)
      READ(25,*) NDIM
      READ(25,*)
      READ(25,*) NP
      READ(25,*)
      READ(25,*) (IRAN(I),I=1,NP)
      READ(25,*)
      READ(25,*) NVAR
      IF(NVAR .GT. MAXDIM) THEN
	 WRITE(*,111) NVAR,MAXDIM
  111    FORMAT(//' YOUR INSTRUCTION FILE, SHOWS ',I2,' PARAMETERS TO'/
     1' BE RANDOM VARIABLES. THE LIMIT IS CURRENTLY ',I2,'. PLEASE'/
     2' RERUN THIS PROGRAM AFTER EDITING YOUR INSTRUCTION FILE AND'/
     3' MAKING THE CORRECTION. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,111) NVAR,MAXDIM
        CLOSE(42)
       CALL PAUSE
       STOP
      ENDIF
      READ(25,*)
      DO I = 1,NVAR
       READ(25,1717) PAR(I)
      END DO
         READ(25,*)
      DO I=1,NVAR
       READ(25,*) (AB(I,J),J=1,2)
      END DO
      READ(25,*)
      READ(25,*) NOFIX
      IF(NOFIX .GT. 20) THEN
       WRITE(*,112) NOFIX
  112  FORMAT(//' YOUR INSTRUCTION FILE SHOWS ',I2,' PARAMETERS TO BE'/
     1' FIXED PARAMETERS. THE LIMIT IS CURRENTLY 20. PLEASE RERUN'/
     2' THIS PROGRAM AFTER EDITING YOUR INSTRUCTION FILE AND MAKING'/
     3' THE CORRECTION. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,112) NOFIX
        CLOSE(42)
       CALL PAUSE
       STOP
      ENDIF
      READ(25,*)
      IF(NOFIX .GT. 0) THEN
       DO I = 1,NOFIX
       READ(25,1717) PARFIX(I)
       END DO
      ENDIF
         READ(25,*)
         IF(NOFIX .GT. 0) READ(25,*) (VALFIX(I),I=1,NOFIX)
      IF(ICODE1 .EQ. 1) NRANFIX = 0
      IF(ICODE1 .EQ. 2) THEN
       READ(25,*)
       READ(25,*) NRANFIX
      IF(NRANFIX .GT. 20) THEN
        WRITE(*,3112) NRANFIX
 3112  FORMAT(//' YOUR INSTRUCTION FILE SHOWS ',I2,' PARAMETERS TO BE'/
     1' RANFIX PARAMETERS. THE LIMIT IS CURRENTLY 20. PLEASE RERUN'/
     2' THIS PROGRAM AFTER EDITING YOUR INSTRUCTION FILE AND MAKING'/
     3' THE CORRECTION. '//)
         OPEN(42,FILE=ERRFIL)
          WRITE(42,3112) NRANFIX
         CLOSE(42)
        CALL PAUSE
        STOP
       ENDIF
      READ(25,*)
      IF(NRANFIX .GT. 0) THEN
       DO I = 1,NRANFIX
        READ(25,1717) PARRANFIX(I)
       END DO
      ENDIF
       READ(25,*)
       IF(NRANFIX .GT. 0) READ(25,*) (RANFIXEST(I),I=1,NRANFIX)
      ENDIF
	IF(NVAR + NOFIX + NRANFIX .GT. 32) THEN
	 WRITE(*,113) NVAR + NOFIX + NRANFIX
  113    FORMAT(//' YOUR INSTRUCTION FILE SHOWS A TOTAL OF ',I2/
     1' PARAMETERS. THE LIMIT IS CURRENTLY 32. PLEASE RERUN THIS '/
     2' PROGRAM AFTER EDITING YOUR INSTRUCTION FILE (AND MODEL FILE IF'/
     3' NECESSARY) AND MAKING THE CORRECTION. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,113) NVAR+NOFIX+NRANFIX
        CLOSE(42)
       CALL PAUSE
       STOP
      ENDIF
      READ(25,*)
      READ(25,*) TOLER
      RTOL = TOLER
      DO I = 1,NDIM
       ATOL(I) = TOLER
      END DO
      MF = 22
         READ(25,*)
         READ(25,*) IFORMTT
         IF(IFORMTT .EQ. 1) IFORMT = 3
         IF(IFORMTT .EQ. 2) IFORMT = 1
         IF(IFORMT .EQ. 2) THEN
          WRITE(*,1231)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,1231)
        CLOSE(42)
          CALL PAUSE
          STOP
         ENDIF
         IF(IFORMT .EQ. 1) THEN
          READ(25,*)
          READ(25,2222) PREFIX
          READ(25,*)
          READ(25,222) EXT
         ENDIF
         IF(IFORMT .EQ. 3) THEN
          READ(25,*)
          READ(25,2) BLOCKPAT
          TMPFILE = ' '
          TMPFILE = BLOCKPAT
          CALL FULLNAME(PATH,TMPFILE,PATHFILE)
          OPEN(67,FILE=PATHFILE,STATUS='OLD')
          ICODE1PAT = 0
          READ(67,7126) CODEPAT
          IF(CODEPAT .EQ. '"POPDATA APR_11') ICODE1PAT = 1
          IF(CODEPAT(1:14) .EQ. 'POPDATA APR_11') ICODE1PAT = 1
          IF(CODEPAT .EQ. '"POPDATA DEC_11') ICODE1PAT = 1
          IF(CODEPAT(1:14) .EQ. 'POPDATA DEC_11') ICODE1PAT = 1
          IF(ICODE1PAT .EQ. 0) THEN
           WRITE(*,3131)
           WRITE(*,*)' THE PROGRAM STOPS.'
           CLOSE(67)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3131)
         WRITE(42,*)' THE PROGRAM STOPS.'
        CLOSE(42)
           CALL PAUSE
           STOP
          ENDIF
          CLOSE(67)
          READ(25,*)
          READ(25,*) NCOVA
      READ(25,*)
      IF(NCOVA .GT. 0) THEN
       DO I = 1,NCOVA
        READ(25,1717) COVNAME(I)
       END DO
      ENDIF
         READ(25,*)
         IF(NCOVA .GT. 0) READ(25,*) (ICOVTYPE(I),I=1,NCOVA)
         ENDIF
         READ(25,*)
         READ(25,*) NSUBTOT
         READ(25,*)
         READ(25,*) NSUB
         READ(25,*)
         CALL GETIPATF(25,NSUBTOT,NSUB,MAXSUB,IPATVEC,IERRR)
         IF(IERRR .EQ. -1) THEN
          WRITE(*,2127)
 2127     FORMAT(/' ... OR EDIT THE INSTRUCTION FILE USED IN THIS'/
     1'     RUN, AND MAKE THE INDICATED CORRECTION.'/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,2128)
 2128   FORMAT(//' THERE WAS AN ERROR IN THE READING OF PATIENT NOS.'/
     1' TO BE USED FOR THIS ANALYSIS. PLEASE ENTER DATA VIA THE '/
     2' KEYBOARD OR USING ANOTHER INSTRUCTION FILE.'/)
         WRITE(42,2127)
         CLOSE(42)
          CALL PAUSE
          STOP
         ENDIF
         READ(25,*)
         READ(25,*) XSIG
         READ(25,*)
         READ(25,*) NUMEQT
         READ(25,*)
         DO IEQ=1,NUMEQT
          READ(25,*) IGAMMA(IEQ)
          READ(25,*) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
          READ(25,*) IASS(IEQ)
          READ(25,*) IQVAL(IEQ)
         END DO
         READ(25,*)
         READ(25,*) NDRUG
         READ(25,*)
         READ(25,*) (AF(I),I=1,NDRUG)
         IAF = 1
         READ(25,*)
         READ(25,*) TOL
         READ(25,*)
         READ(25,*) MAXIT
         IF(MAXIT .GT. 40999) MAXIT = 40999
         READ(25,*)
         READ(25,*) XDEV
       CLOSE(25)
       GO TO 1230
      ENDIF
     	CALL GETPATH(PATH,NOB,OSName)
 6280    WRITE(*,6278)
 6278    FORMAT(//' ENTER 1 TO DO AN IT2B ANALYSIS; '/
     1/' ENTER 2 TO EXAMINE THE RESULTS FROM A PREVIOUS RUN: ')
	READ(*,*,ERR=6280) IANAL
	IF(IANAL .LT. 1 .OR. IANAL .GT. 2) GO TO 6280
	IF(IANAL .EQ. 2) THEN
     	 CALL EXTRAOPT(PATH,NOB,MAXSUB,PAREST,SERNUM,YPREDPOP,
     1   YPREDBAY,PARBAY,YO,MAXOBDIM,OSName,ListDir,DeleteFile,
     2   ClearScreen,MAXNUMEQ)
   	 STOP
	ENDIF
      DO IEQ = 1,MAXNUMEQ
       IQVAL(IEQ) = 0
      END DO
        WRITE(*,919)
  919   FORMAT(//' ***************** VERY IMPORTANT *****************'//
     1' YOUR FORTRAN MODEL FILE MUST BE AN EDITED VERSION OF TSTMULTL.FO
     2R.'//
     3' IF THIS IS NOT SO, PLEASE STOP THE PROGRAM NOW. THEN CREATE '/
     4' YOUR MODEL FILE BY EDITING TSTMULTM.FOR AND PLACING YOUR CODE'/
     5' AS INSTRUCTED BY THE COMMENTS IN THAT FILE. AT THAT POINT, YOU'/
     6' WILL BE READY TO RERUN THIS PROGRAM.'//
     7' ***************** VERY IMPORTANT *****************'//)
        CALL PAUSE
        WRITE(*,5001)
5001    FORMAT(/' ENTER THE NAME OF YOUR FORTRAN MODEL FILE: ')
        READ(*,2) FORFILE
 5010	TMPFILE = ' '
	TMPFILE = FORFILE
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
      OPEN(28,FILE=PATHFILE,ERR=50,STATUS='OLD',POSITION='APPEND')
	GO TO 30
   50   WRITE(*,4406) PATHFILE
4406    FORMAT(//' THE FOLLOWING FILE DOES NOT EXIST ... '/
     1'    ',A73/
     2' ENTER THE CORRECT FILENAME OR ... '/
     2' ENTER -99 TO SEE ALL OR A PART OF YOUR DIRECTORY: ')
	READ(*,2) FORFILE
	IF(FORFILE(1:3) .EQ. '-99') THEN
           CALL SEEDIR(PATH,NOB,FORFILE,OSName,ListDir)
	endif
        GO TO 5010
   30	CALL USERPREP(NDIM,NP,NVAR,MAXDIM,PAR,NOFIX,PARFIX,NRANFIX,
     1 PARRANFIX,IRAN)
  915   WRITE(*,913)
  913   FORMAT(/' ENTER 1 TO SET ALL TOLERANCES (FOR THE O.D.E. '/
     1'         SOLVER) TO THE DEFAULT VALUE ... 1.D-4.'/
     2' ENTER 0 TO SELECT A DIFFERENT VALUE FOR THE TOLERANCES: ')
	READ(*,*,ERR=915) ITOL
	IF(ITOL .NE. 0 .AND. ITOL .NE. 1) GO TO 915
	TOLER=1.D-4
	IF(ITOL .EQ. 0) THEN
  910	WRITE(*,914)
  914  FORMAT(/' ENTER A POSITIVE VALUE FOR THE TOLERANCE PARAMETERS: ')
	READ(*,*,ERR=910) TOLER
	IF(TOLER .LE. 0.D0) GO TO 910
	ENDIF
	RTOL = TOLER
	DO I=1,NDIM
	 ATOL(I) = TOLER
	END DO
	MF = 22
      IF(NRANFIX .GT. 0) THEN
       WRITE(*,9197)
 9197  FORMAT(//' BECAUSE YOU SELECTED SOME PARAMETERS TO BE RANFIX,'/
     1' YOU MUST NOW ENTER INSTRUCTIONS VIA THE KEYBOARD (SINCE '/
     2' PREVIOUS VERSIONS OF NON-ALL-INCLUSIVE INSTRUCTION FILES FOR'/
     3' THIS PROGRAM DID NOT ALLOW PARAMETERS WHICH ARE UNKNOWN BUT'/
     4' THE SAME FOR ALL SUBJECTS.'/)
       CALL PAUSE
       INOPT = 0
       GO TO 9700
      ENDIF
  138   FORMAT(/' PLEASE ENTER ONE OF THE REQUESTED VALUES: ')
  145	WRITE(*,38)
   38   FORMAT(//' ENTER 0 TO ENTER INSTRUCTIONS FROM THE KEYBOARD;'/
     1' ENTER 1 TO ENTER INSTRUCTIONS FROM A FILE CREATED BY A '/
     2'         PREVIOUS RUNNING OF THIS PROGRAM; THIS FILE MUST'/
     3'         HAVE A DATE ON LINE 1 WHICH IS BETWEEN JUL_10 AND'/
     4'         JUL_11: ')
	READ(*,*,ERR=145) INOPT
	IF (INOPT .NE. 0 .AND. INOPT .NE. 1) GO TO 145
	IF(INOPT .EQ. 1) THEN
	 WRITE(*,39)
   39  FORMAT(/' ENTER THE NAME OF THE INSTRUCTION FILE; ')
	 WRITE(*,*)' ENTER -99 TO SEE ALL OR A PART OF YOUR DIRECTORY: '
       READ(*,2) FILNFO
	 IF(FILNFO(1:3) .EQ. '-99') THEN
            CALL SEEDIR(PATH,NOB,FILNFO,OSName,ListDir)
         ENDIF
     	TMPFILE = ' '
	TMPFILE = FILNFO
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(25,FILE=PATHFILE,ERR=4705,STATUS='OLD')
	GO TO 4710
 4705	WRITE(*,5316) PATHFILE
 5316   FORMAT(//' THE FOLLOWING FILE DOES NOT EXIST ... '/
     1'    ',A73)
	GO TO 145
 4710	 READ(25,7123) CODE
 7123    FORMAT(A14)
	 ICODE = 0
	 IF(CODE .EQ. 'REM_FRN JUL_10') ICODE = 1007
	 IF(CODE .EQ. 'REM_FRN APR_11') ICODE = 1104
	 IF(CODE .EQ. 'REM_FRN JUL_11') ICODE = 1107
	 IF(ICODE .EQ. 0) THEN
	  WRITE(*,7321)
 7321   FORMAT(//' YOUR INSTRUCTION FILE IS NOT FROM THE ALLOWABLE '/
     1' SET OF INSTRUCTION FILES.'//
     2' EITHER ENTER INSTRUCTIONS FROM THE KEYBOARD, OR USE A FILE '/
     3' WITH   REM_FRN XXX_XX   IN COLUMNS 1 THROUGH 14 ON LINE 1,'/
     4' WHERE  XXX_XX  IS JUL_10 UP TO JUL_11.'//)
	  CALL PAUSE
	  GO TO 145
	 ENDIF
        IF(ICODE .GE. 1104) THEN
         READ(25,*)
	   READ(25,*) IFORMTT
         IF(IFORMTT .EQ. 1) IFORMT = 3
         IF(IFORMTT .EQ. 2) IFORMT = 1
         IF(IFORMT .EQ. 2) THEN
          WRITE(*,1231)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,1231)
        CLOSE(42)
          CALL PAUSE
          STOP
         ENDIF
         IF(IFORMT .EQ. 1) THEN
          READ(25,*)
          READ(25,2222) PREFIX
          READ(25,*)
          READ(25,222) EXT
         ENDIF
         IF(IFORMT .EQ. 3) THEN
          READ(25,*)
          READ(25,2) BLOCKPAT
          TMPFILE = ' '
          TMPFILE = BLOCKPAT
          CALL FULLNAME(PATH,TMPFILE,PATHFILE)
          OPEN(67,FILE=PATHFILE,STATUS='OLD')
          ICODEPAT = 0
          READ(67,7126) CODEPAT
          IF(CODEPAT .EQ. '"POPDATA APR_11') ICODEPAT = 1
          IF(CODEPAT(1:14) .EQ. 'POPDATA APR_11') ICODEPAT = 1
          IF(CODEPAT .EQ. '"POPDATA DEC_11') ICODEPAT = 1
          IF(CODEPAT(1:14) .EQ. 'POPDATA DEC_11') ICODEPAT = 1
          IF(ICODEPAT .EQ. 0) THEN
           WRITE(*,3131)
           WRITE(*,*)' THE PROGRAM STOPS.'
           CLOSE(67)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3131)
         WRITE(42,*)' THE PROGRAM STOPS.'
        CLOSE(42)
           CALL PAUSE
           STOP
          ENDIF
          CLOSE(67)
         ENDIF
         READ(25,*)
         READ(25,*) NSUBTOT
         READ(25,*)
         READ(25,*) NSUB
         READ(25,*)
         CALL GETIPATF(25,NSUBTOT,NSUB,MAXSUB,IPATVEC,IERRR)
         IF(IERRR .EQ. -1) GO TO 145
         READ(25,*)
         READ(25,*)
         READ(25,*)
         IF(NOFIX .GT. 0) READ(25,*) (VALFIX(I),I=1,NOFIX)
         READ(25,*)
         READ(25,*)
         READ(25,*)
         DO I=1,NVAR
          READ(25,*) (AB(I,J),J=1,2)
         END DO
         READ(25,*)
         READ(25,*) XSIG
         READ(25,*)
         READ(25,*) NUMEQT
         READ(25,*)
         DO IEQ=1,NUMEQT
          READ(25,*) IGAMMA(IEQ)
          READ(25,*) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
          READ(25,*) IASS(IEQ)
          READ(25,*) IQVAL(IEQ)
         END DO
        IF(ICODE .EQ. 1104) THEN
         READ(25,*)
         READ(25,*) AFSCALAR
         IAF = 0
        ENDIF
        IF(ICODE .GE. 1107) THEN
         READ(25,*)
         READ(25,*) NDRUG
         READ(25,*)
         READ(25,*) (AF(I),I=1,NDRUG)
         IAF = 1
        ENDIF
         READ(25,*)
         READ(25,*) TOL
         READ(25,*)
         READ(25,*) MAXIT
         IF(MAXIT .GT. 40999) MAXIT = 40999
         READ(25,*)
         READ(25,*) XDEV
         CLOSE(25)
         GO TO 35
        ENDIF
        IF(ICODE .EQ. 1007) THEN
	   READ(25,*) IFORMTT
         IFORMT = IFORMTT
	IF(IFORMT .EQ. 2) THEN
	 WRITE(*,1231)
 1231    FORMAT(/' YOUR INSTRUCTION FILE INDICATES THAT YOUR PATIENT'/
     1' DATA FILES ARE IN USC*PACK FORMAT, WHICH IS NO LONGER ALLOWED'/
     2' BY THIS PROGRAM. '//
     3' PLEASE RERUN THE PROGRAM AND ENTER PATIENT DATA INFO EITHER'/
     4' IN THE NEW-STYLE WORKING COPY FORMAT FOR MULTIPLE DRUGS'/
     5' (IFORMTT = 2), OR IN THE NEW MATRIX STYLE BLOCK FORMAT'/
     6' (IFORMTT = 1).'//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,1231)
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
        IF(IFORMT .EQ. 1) THEN
         READ(25,2222) PREFIX
         READ(25,222) EXT
        ENDIF
	IF(IFORMT .EQ. 3) THEN
      READ(25,2) BLOCKPAT
     	TMPFILE = ' '
	TMPFILE = BLOCKPAT
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(67,FILE=PATHFILE,STATUS='OLD')
	ICODEPAT = 0
 7126  FORMAT(A15)
	 READ(67,7126) CODEPAT
	 IF(CODEPAT .EQ. '"POPDATA APR_11') ICODEPAT = 1
	 IF(CODEPAT(1:14) .EQ. 'POPDATA APR_11') ICODEPAT = 1
       IF(CODEPAT .EQ. '"POPDATA DEC_11') ICODEPAT = 1
       IF(CODEPAT(1:14) .EQ. 'POPDATA DEC_11') ICODEPAT = 1
	IF(ICODEPAT .EQ. 0) THEN
	 WRITE(*,3131)
	 WRITE(*,*)' THE PROGRAM STOPS.'
	 CLOSE(67)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3131)
         WRITE(42,*)' THE PROGRAM STOPS.'
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	CLOSE(67)
	ENDIF
	 READ(25,*) NSUBTOT
	 READ(25,*) NSUB
	 CALL GETIPATF(25,NSUBTOT,NSUB,MAXSUB,IPATVEC,IERRR)
	 IF(IERRR .EQ. -1) GO TO 145
	IF(NOFIX .GT. 0) READ(25,*) (VALFIX(I),I=1,NOFIX)
	DO I=1,NVAR
	 READ(25,*) (AB(I,J),J=1,2)
	END DO
	 READ(25,*) XSIG
	 READ(25,*) NUMEQT
	 DO IEQ=1,NUMEQT
	  READ(25,*) IGAMMA(IEQ)
	  READ(25,*) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	  READ(25,*) IASS(IEQ)
	  READ(25,*) IQVAL(IEQ)
	 END DO
        READ(25,*) AFSCALAR
        IAF = 0
	 READ(25,*) TOL
	 READ(25,*) MAXIT
	 IF(MAXIT .GT. 40999) MAXIT = 40999
	 READ(25,*) XDEV
 	 CLOSE(25)
	 GO TO 35
        ENDIF
	ENDIF
 9700 CONTINUE
  444 FORMAT(A1000)
    2 FORMAT(A20)
  222 FORMAT(A3)
 2222 FORMAT(A5)
4005	WRITE(*,141)
  141   FORMAT(/' ENTER 1 IF THE PATIENT DATA INFO WILL BE SUPPLIED'/
     1'         IN A MATRIX BLOCK FORMAT; '/
     2' ENTER 2 IF THE PATIENT DATA INFO WILL BE INPUT USING A'/
     3'         WORKING COPY FORMAT: ')
	READ(*,*,ERR=4005) IFORMTT
	IF(IFORMTT .NE. 1 .AND. IFORMTT .NE. 2) GO TO 4005
         IF(IFORMTT .EQ. 1) IFORMT = 3
         IF(IFORMTT .EQ. 2) IFORMT = 1
	IF(IFORMT .EQ. 3) THEN
         WRITE(*,3111)
 3111    FORMAT(/' ENTER THE NAME OF THE FILE WHICH CONTAINS ALL THE'/
     1' PATIENT DATA INFO IN BLOCK FORMAT (ENTER -99 TO SEE ALL OR A '/
     2' PART OF YOUR DIRECTORY: ')
        READ(*,2) BLOCKPAT
	IF(BLOCKPAT(1:3) .EQ. '-99') THEN
           CALL SEEDIR(PATH,NOB,BLOCKPAT,OSName,ListDir)
        ENDIF
     	TMPFILE = ' '
	TMPFILE = BLOCKPAT
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(67,FILE=PATHFILE,ERR=3120,STATUS='OLD')
	GO TO 3130
 3120   WRITE(*,5316) PATHFILE
	GO TO 4005
 3130   CONTINUE
	 ICODEPAT = 0
	 READ(67,7126) CODEPAT
	 IF(CODEPAT .EQ. '"POPDATA APR_11') ICODEPAT = 1
	 IF(CODEPAT(1:14) .EQ. 'POPDATA APR_11') ICODEPAT = 1
       IF(CODEPAT .EQ. '"POPDATA DEC_11') ICODEPAT = 1
       IF(CODEPAT(1:14) .EQ. 'POPDATA DEC_11') ICODEPAT = 1
	IF(ICODEPAT .EQ. 0) THEN
	 WRITE(*,3131)
 3131    FORMAT(//' YOUR PATIENT DATA BLOCK FORMAT FILE IS NOT FROM '/
     1' THE ALLOWABLE SET OF SUCH FILES.'//
     2' A PATIENT DATA BLOCK FORMAT FILE MUST HAVE "POPDATA XXX_XX IN'/
     3' COLUMNS 1 THROUGH 15 ON LINE 1, WHERE  XXX_XX  IS APR_11 OR A '/
     4' MORE RECENT DATE.'//)
	  CLOSE(67)
	  GO TO 4005
	ENDIF
	CLOSE(67)
	ENDIF
	IF(IFORMT .EQ. 1) THEN
 7505	  WRITE(*,4041)
 4041     FORMAT(/' ENTER THE 5-CHAR PREFIX FOR PATIENT FILENAMES: ')
	  READ(*,2222) PREFIX
	  WRITE(*,4043)
 4043     FORMAT(/' IF THERE IS A 3-CHAR EXTENSION FOR THE PATIENT '/
     1' FILENAMES, ENTER IT NOW; OTHERWISE, HIT CARRIAGE RETURN: ')
	  READ(*,222) EXT
	  IF(PREFIX(1:1) .EQ. ' ' .OR. PREFIX(2:2) .EQ. ' ' .OR.
     1       PREFIX(3:3) .EQ. ' ' .OR. PREFIX(4:4) .EQ. ' ' .OR.
     2       PREFIX(5:5) .EQ. ' ') THEN
      PATFIL = PREFIX//'001.'//EXT
 7500   WRITE(*,7501) PATFIL(1:12)
 7501   FORMAT(/' ARE YOUR SUBJECT FILES REALLY CALLED ',A12,' ... ?'//
     1' ENTER 1 TO REENTER YOUR SUBJECT FILENAMES; '/
     2' ENTER 0 IF THESE NAMES ARE ACCURATE: ')
	READ(*,*,ERR=7500) IOK
	IF(IOK .NE. 0 .AND. IOK .NE. 1) GO TO 7500
	IF(IOK .EQ. 1) GO TO 7505
	   ENDIF
	ENDIF
	CALL GETIPAT(NSUBTOT,NSUB,ISUBALL,MAXSUB,IPATVEC)
	CALL GETNUMEQ(PATH,NOB,1,IFORMT,PREFIX,EXT,BLOCKPAT,NUMEQT,NDRUG,
     1   MAXSUB,MAXNUMEQ)
        WRITE(*,1117)
 1117   FORMAT(/' ENTER THE BOUNDS OF THE RANGE FOR EACH PARAMETER.'//
     1' CAUTION: IF ANY OF YOUR PARAMETERS CANNOT = 0, BE SURE TO MAKE'/
     2'		 ITS LOWER BOUNDARY A POSITIVE NUMBER, RATHER THAN 0.'/
     3' 	 (ONE SUCH EXAMPLE IS FOR VOL WHICH SHOWS UP IN THE'/
     4'		 DENOMINATOR OF THE OUTPUT EQUATION IN THE MODEL'/
     5'		 FILE.)'//)
	DO 6060 I=1,NVAR
	WRITE(*,34) PAR(I)
   34   FORMAT(/' ',A11,' : ')
 7110   READ(*,*,ERR=7115) (AB(I,J),J=1,2)
	GO TO 6060
 7115   WRITE(*,7116)
 7116   FORMAT(/' SEE ABOVE; PLEASE ENTER TWO REAL NUMBERS: ')
	GO TO 7110
 6060   CONTINUE
	IF(NOFIX .GT. 0) THEN
     	  WRITE(*,4836)
 4836     FORMAT(/' ENTER THE VALUE FOR EACH FIXED PARAMETER: ')
	 DO 4855 I=1,NOFIX
	  WRITE(*,34) PARFIX(I)
 4840     READ(*,*,ERR=4845) VALFIX(I)
	  GO TO 4855
 4845     WRITE(*,4841)
 4841     FORMAT(/' SEE ABOVE; ENTER A POSITIVE VALUE: ')
	  GO TO 4840
 4855    CONTINUE
	ENDIF
      IF(NRANFIX .GT. 0) THEN
     	  WRITE(*,5836)
 5836   FORMAT(/' ENTER THE INITIAL EST. FOR EACH RANFIX PARAMETER: ')
        DO 5855 I=1,NRANFIX
        WRITE(*,34) PARRANFIX(I)
 5840   READ(*,*,ERR=5845) RANFIXEST(I)
        GO TO 5855
 5845   WRITE(*,4841)
        GO TO 5840
 5855   CONTINUE
      ENDIF
 4990	WRITE(*,4991)
 4991   FORMAT(//' THE DEFAULT S.D. FOR EACH PARAMETER IS HALF ITS'/
     1' RANGE (.5 x RANGE).'//
     2' ENTER 1 IF THIS IS O.K.;'/
     3' ENTER 0 TO CHANGE THE VALUE FROM .5 TO SOMETHING ELSE: ')
	READ(*,*,ERR=4990) ICH
	IF(ICH .NE. 0 .AND. ICH .NE. 1) GO TO 4990
	IF(ICH .EQ. 1) XSIG = .5D0
	IF(ICH .EQ. 0) THEN
 4995	WRITE(*,*)' ENTER THE NEW VALUE (TYPICALLY BETWEEN .1 AND 10): '
	READ(*,*,ERR=4995) XSIG
	IF(XSIG .LE. 0.D0) THEN
	  WRITE(*,*) 'THIS NUMBER MUST BE POSITIVE.'
	  GO TO 4995
	ENDIF
	ENDIF
        WRITE(*,19) NUMEQT
   19 FORMAT(//' THE ASSAY ERROR FUNCTION FOR EACH OF THE ',I2,' OUTPUT'
     1/
     2' EQUATION(S) IS MODELED AS FOLLOWS:'//
     2' ASSAY S.D. = GAMMA*(C0 + C1*Y + C2*Y**2 + C3*Y**3).'//
     3' FOR EACH OF THE OUTPUT EQUATIONS, YOU MAY ENTER EITHER: '//
     6'     ONE SET TO BE USED FOR ALL PATIENTS, OR'//
     4'     A UNIQUE SET OF COEFFICIENTS, [C0,C1,C2,C3] FOR EACH PATIENT
     5.'//
     6' IN THE FORMER CASE, YOU MAY ALSO HAVE A PRELIMINARY'/
     7' PROGRAM FIND AN OPTIMUM SET OF COEFFICIENTS, BASED ON YOUR '/
     8' INITIAL ESTIMATES, THE PATIENT DATA FILES, AND YOUR INPUT'/
     9' INSTRUCTIONS.'//
     9' IN EITHER CASE, YOU MAY CHOOSE WHETHER OR NOT TO HAVE THE MAIN'/
     1' PROGRAM GIVE AN UPDATED ESTIMATE FOR GAMMA.'//
     3' MAKE YOUR SELECTIONS FOR EACH OUTPUT EQUATION, IN TURN: '/)
	CALL PAUSE
	DO 2120 IEQ = 1,NUMEQT
        WRITE(*,311) IEQ
  311   FORMAT(//' FOR OUTPUT EQUATION ',I1,': '//)
  310   WRITE(*,312)
  312 FORMAT(/' ENTER 1 TO USE ONE SET OF COEFFICIENTS FOR ALL PATIENTS;
     1'/
     4' ENTER 0 IF EACH PATIENT WILL HAVE A UNIQUE SET OF COEFFICIENTS:
     5 ')
	READ(*,*,ERR=310) IUNIQ(IEQ)
	IF(IUNIQ(IEQ) .NE. 0 .AND. IUNIQ(IEQ) .NE. 1) GO TO 310
	IF(IUNIQ(IEQ) .EQ. 1) THEN
 5015   WRITE(*,1124)
 1124   FORMAT(/' ENTER 1 IF THE ASSAY COEFFICIENTS ARE NOT TO BE ESTIMA
     1TED, AND'/
     1'         GAMMA IS TO REMAIN FIXED AT 1.0;'//
     6' ENTER 2 IF THE ASSAY COEFFICIENTS ARE NOT TO BE ESTIMATED, BUT'/
     7'		GAMMA IS TO BE ESTIMATED;'//
     2' ENTER 3 IF YOU HAVE NO IDEA ABOUT YOUR ASSAY ERROR AND WOULD'/
     3'         LIKE A PRELIMINARY PROGRAM FIRST TO FIND ESTIMATES FOR'/
     4'         [C0,C1,C2,C3], GIVEN YOUR INITIAL ESTIMATES, PATIENT DAT
     5A FILES, AND'/
     6'         INPUT INSTRUCTIONS: ')
	READ(*,*,ERR=5015) IGAM
	IF(IGAM .LT. 1 .OR. IGAM .GT. 3) GO TO 5015
	IF(IGAM .EQ. 1) IGAMMA(IEQ) = 1
	IF(IGAM .EQ. 3) IGAMMA(IEQ) = 2
	IF(IGAM .EQ. 2) THEN
	 IGAMMA(IEQ) = 0
	 IQVAL(IEQ) = 1
	ENDIF
	IASS(IEQ) = 2
	ENDIF
	IF(IUNIQ(IEQ) .EQ. 0) THEN
 7015   WRITE(*,1126)
 1126   FORMAT(/' ENTER 1 IF GAMMA IS TO REMAIN FIXED AT 1.0;'/
     6' ENTER 2 IF AN UPDATED ESTIMATE OF GAMMA IS TO BE FOUND: ')
	READ(*,*,ERR=7015) IGAM
	IF(IGAM .LT. 1 .OR. IGAM .GT. 2) GO TO 7015
	IF(IGAM .EQ. 1) IGAMMA(IEQ) = 1
	IF(IGAM .EQ. 2) THEN
	 IGAMMA(IEQ) = 0
	 IQVAL(IEQ) = 1
	ENDIF
 1120	WRITE(*,119)
  119 FORMAT(//' SELECT ONE OF THE FOLLOWING OPTIONS FOR THE ASSAY '/
     1'		COEFFICIENTS [C0,C1,C2,C3]: '//
     4' ENTER 1 FOR THE DEFAULT OPTION ...'/
     5'         FOR EACH PATIENT, IF THE DATA FILE ALREADY INCLUDES '/
     6'	    ASSAY COEFFICIENTS, THOSE COEFFICIENTS WILL BE USED. '/
     7'	    OTHERWISE THE COEFFICIENTS YOU ENTER BELOW WILL BE '/
     8'         USED;'/
     7' ENTER 0 IF YOU WOULD LIKE TO BE PROMPTED SO YOU MAY CHOOSE THE'/
     8'	    ASSAY COEFFICIENTS ON A PATIENT - BY - PATIENT BASIS.'/
     9'         YOU MAY CHOOSE GENERAL VALUES (WHICH YOU WILL ENTER '/
     1'	    BELOW), COEFFICIENTS ALREADY IN THE PATIENT DATA FILE,'/
     2'	    IF ANY, OR ANY OTHER INDIVIDUAL COEFFICIENTS: ')
	READ(*,*,ERR=1120) IASS(IEQ)
	IF(IASS(IEQ) .NE. 0 .AND. IASS(IEQ) .NE. 1) GO TO 1120
	ENDIF
 1140	WRITE(*,1119)
 1119   FORMAT(/' ENTER THE GENERAL VALUES FOR [C0,C1,C2,C3]. THESE ')
	IF(IASS(IEQ) .EQ. 1) WRITE(*,1121)
	IF(IASS(IEQ) .EQ. 2 .AND. IGAMMA(IEQ) .NE. 2) WRITE(*,1122)
	IF(IASS(IEQ) .EQ. 2 .AND. IGAMMA(IEQ) .EQ. 2) WRITE(*,1127)
	IF(IASS(IEQ) .EQ. 0) WRITE(*,1123)
 1121   FORMAT(' WILL BE USED FOR ALL PATIENTS WHOSE DATA FILES DO '/
     1' NOT ALREADY INCLUDE ASSAY COEFFICIENTS: ')
 1122   FORMAT(' WILL BE USED FOR ALL PATIENTS.'//
     1' NOTE: IF YOU WANT TO ENTER THESE VALUES VIA AN OUTPUT FILE FROM
     2A'/
     2' PREVIOUS RUNNING OF THE PROGRAM assbigxx.exe, '/
     3' ENTER THE WORD "FILE": ')
 1123   FORMAT(' WILL BE USED FOR THOSE PATIENTS YOU SELECT BELOW: ')
 1127   FORMAT(' WILL BE INITIAL ESTIMATES ONLY. AN OPTIMUM SET WILL '/
     1' BE CALCULATED BY A PRELIMINARY PROGRAM, '/
     2' assbigxx.exe, FROM THESE ESTIMATES. A TYPICAL INITIAL GUESS'/
     3' IS [.1,.1,.05,.001]:  ')
	IF(IASS(IEQ) .NE. 2 .OR. IGAMMA(IEQ) .EQ. 2) THEN
	 READ(*,*,ERR=1140) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	ENDIF
	IF(IASS(IEQ) .EQ. 2 .AND. IGAMMA(IEQ) .NE. 2) THEN
	 READ(*,*,ERR=1145) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	 GO TO 2120
 1145    WRITE(*,1131)
 1131    FORMAT(/' ENTER THE NAME OF THE OUTPUT FILE (FROM '/
     1' assbigxx.exe); IT WILL BE   ASSxxxx   WHERE xxxx IS THE'/
     2' 4-DIGIT NUMBER ASSIGNED TO THAT RUN;'/
     1'   ENTER -99 TO SEE ALL OR A PART OF YOUR DIRECTORY: ' )
          READ(*,2) FILASS
	  IF(FILASS(1:3) .EQ. '-99') THEN
             CALL SEEDIR(PATH,NOB,FILASS,OSName,ListDir)
          ENDIF
     	  TMPFILE = ' '
	  TMPFILE = FILASS
	  CALL FULLNAME(PATH,TMPFILE,PATHFILE)
     	  OPEN(26,FILE=PATHFILE,ERR=1155,STATUS='OLD',POSITION='APPEND')
	  GO TO 1150
 1155     WRITE(*,5316) PATHFILE
	  GO TO 1140
 1150	  BACKSPACE(26)
	  BACKSPACE(26)
	  READ(26,444) READLINE
	  IF(READLINE(2:18) .NE. 'ESTIMATES FOR [C0') GO TO 1150
	  IF(IEQ .EQ. 1) GO TO 2155
	  DO I=1,IEQ-1
	   READ(26,*)
	  END DO
 2155	  READ(26,*) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	  CLOSE(26)
	  IQVAL(IEQ) = 4
	ENDIF
 2120   CONTINUE
 2119 FORMAT(//' NOTE: DURING THIS PREPARATION PROGRAM, EACH SUBJECT'/
     1'       WILL HAVE HIS/HER ASSAY COEFFICIENTS WRITTEN TO THE END'/
     2'       OF HIS/HER WORKING COPY PATIENT FILE. IF COEFFICIENTS '/
     3'       ARE ALREADY THERE FROM A PREVIOUS RUN, THEY WILL BE '/
     4'       OVERWRITTEN.'//)
        CALL PAUSE
4150   WRITE(*,129)
  129   FORMAT(//' ENTER THE ACTIVE (SALT) FRACTION OF EACH DRUG. AS '/
     1' AN EXAMPLE, THE A.F. OF THEOPHYLLINE IS 1.0, WHILE THAT OF'/
     2' AMINOPHYLLINE IS TYPICALLY BETWEEN .79 AND .85, DEPENDING ON'/
     3' THE PREPARATION. '//
     4' EACH AF MUST BE A POSITIVE NUMBER LESS THAN OR EQUAL TO 1.0.'/)
        DO I = 1,NDRUG
         WRITE(*,1129) I
 1129    FORMAT(' AF FOR DRUG ',I1,': ')
         READ(*,*,ERR=4150) AF(I)
         IF(AF(I) .LE. 0.0 .OR. AF(I) .GT. 1.0) GO TO 4150
        END DO
        IAF = 1
	IRUNIT = 1
	DO IEQ=1,NUMEQT
	 IF(IGAMMA(IEQ) .EQ. 2) IRUNIT = 0
	END DO
	IF(IRUNIT .EQ. 1) THEN
        WRITE(*,26)
   26   FORMAT(/' ENTER THE CONVERGENCE CRITERION (USUALLY  .001).'/
     1' THE PROGRAM WILL STOP THE ITERATIONS WHEN THE AVERAGE'/
     2' LOG-LIKELIHOOD OF THE PARAMETER ESTIMATES, GIVEN THE DATA AND '/
     3' THE CURRENT ESTIMATES OF THE POPULATION MEAN VECTOR AND '/
     4' COVARIANCE MATRIX, DIFFERS BY LESS THAN THIS VALUE FROM THE'/
     5' PREVIOUS ITERATION: ')
 4185   READ(*,*,ERR=4190) TOL
        GO TO 4195
 4190   WRITE(*,*) ' SEE ABOVE; PLEASE ENTER A REAL NUMBER: '
        GO TO 4185
 4195   MMAXIT = 40999
        WRITE(*,123) MMAXIT+1
  123   FORMAT(/' ENTER THE MAX NO. OF ITERATIONS DESIRED (LESS THAN ',I
     15,'): ')
        READ(*,*,ERR=4195) MAXIT
        IF(MAXIT .LE. 0 .OR. MAXIT .GT. 40999) GO TO 4195
 4215   WRITE(*,4986)
 4986   FORMAT(//' THE RANGES, OF THE PARAMETERS TO BE SUPPLIED '/
     1' TO THE 2ND PART (NPEM2) OF THIS PROGRAM, WILL BE SOME NUMBER'/
     2' OF S.D. (5 IS A TYPICAL CHOICE)  ABOVE AND BELOW EACH '/
     3' POPULATION MEAN (BUT THE LOWER RANGE VALUE MAY NOT BE LESS'/
     4' THAN .00000001). HOW MANY S.D. ABOVE AND BELOW THE MEANS DO '/
     5' YOU WANT THE PARAMETER RANGES TO BE ?'/
     5' ENTER THE NUMBER: ')
	READ(*,*,ERR=4215) XDEV
	IF(XDEV .LE. 0.D0) THEN
	  WRITE(*,*)' THIS NUMBER MUST BE POSITIVE.'
	  GO TO 4215
	ENDIF
	ENDIF
	IF(IRUNIT .EQ. 0) THEN
	 TOL = 1.D-3
	 MAXIT = 10
	 XDEV = 5.D0
	ENDIF
   35   CONTINUE
        IF(IAF .EQ. 0) THEN
         CALL GETNUMEQ(PATH,NOB,1,IFORMT,PREFIX,EXT,BLOCKPAT,NUMEQT,
     1    NDRUG,MAXSUB,MAXNUMEQ)
          DO I = 1,NDRUG
           AF(I) = AFSCALAR
          END DO
         ENDIF
 1230   CONTINUE
      IF(IVERIFY .EQ. 1)
     1 CALL VERIF1(PREFIX,EXT,IFORMT,NSUB,NSUBTOT,
     1  PAR,NVAR,AB,C0P,C1P,C2P,C3P,IASS,AF,NOFIX,VALFIX,PARFIX,
     2  TOL,MAXIT,XDEV,XSIG,IGAMMA,IQVAL,NUMEQT,IUNIQ,PATH,NOB,BLOCKPAT,
     3  ISUBALL,MAXSUB,IPATVEC,NDRUG,TOLER,NDIM,RTOL,ATOL,
     4  OSName,ListDir,IRAN,MAXNUMEQ,NRANFIX,PARRANFIX,
     6  RANFIXEST)
	IF(IFORMT .EQ. 3) THEN
      DO ISUB = 1,NSUBTOT
       PATFIL="XQZPJ"//NUMBER(ISUB)//'.ZMQ'
       TMPFILE = ' '
       TMPFILE = PATFIL
       CALL FULLNAME(PATH,TMPFILE,PATHFILE)
       OPEN(81,FILE=PATHFILE,ERR=7770,STATUS='OLD')
       CLOSE(81)
      END DO
      IF(IALLIN .EQ. 1 .AND. IVERIFY .EQ. 0) GO TO 7770
 7780 WRITE(*,7771) NSUBTOT,BLOCKPAT,BLOCKPAT,BLOCKPAT,BLOCKPAT
 7771 FORMAT(//' THERE ARE ALREADY ',I6,' WORKING COPY FILES BY THE '/
     1' NAMES OF XQZPJ001.ZMQ,... IN THE CURRENT WORKING DIRECTORY.'//
     2' IF THESE WERE THE ONES CREATED BY THE PROGRAM FROM A PREVIOUS'/
     3' RUN WITH YOUR .csv FILE, ',A20,' YOU CAN SIMPLY USE THEM '/
     4' AGAIN, RATHER THAN RECREATE THEM FROM ',A20//
     5' THIS COULD SAVE A LOT OF TIME IF YOU HAVE A LARGE PATIENT '/
     6' POPULATION. OF COURSE IF THESE WORKING COPY FILES DID NOT COME'/
     7' FROM ',A20,' ENTER 1 BELOW.'//
     8' ENTER 1 TO CREATE ANOTHER SET OF WORKING COPY FILES FROM YOUR'/
     9'         .csv FILE, ',A20/
     1' ENTER 0 TO SAVE TIME BY USING THE XQZPJ001.ZMQ,... FILES WHICH'/
     2'         ALREADY EXIST IN YOUR WORKING DIRECTORY: ')
      READ(*,*,ERR=7780) ILONG
      IF(ILONG .NE. 1 .AND. ILONG .NE. 0) GO TO 7780
      IF(ILONG .EQ. 0) GO TO 7790
 7770  CONTINUE
        TMPFILE = ' '
        TMPFILE = BLOCKPAT
        CALL FULLNAME(PATH,TMPFILE,PATHFILE)
        OPEN(87,FILE=PATHFILE,STATUS='OLD')
        CALL CONVERTCSV
        OPEN(67)
        CALL NEWCSV
        CALL CSVCHANGE
        REWIND(66)
        CALL READBLOCK(1,NSUBR,MAXSUB,NOUT,NDRUG,PATH,C0P,C1P,C2P,C3P,
     1   MAXNUMEQ)
        CLOSE(66)
        IF(NSUBTOT .NE. NSUBR) THEN
         WRITE(*,1011) NSUBTOT,BLOCKPAT,NSUBR
 1011    FORMAT(/' THE NO. OF TOTAL SUBJECTS IN YOUR PATIENT DATA'/
     1' SET WAS READ IN AS ',I4,' BUT THE NO. OF SUBJECTS IN YOUR'/
     2' BLOCK PATIENT DATA FILE, ',A20,' IS ',I4,'. THESE NUMBERS'/
     3' MUST BE THE SAME. PLEASE CHECK YOUR PATIENT DATA AND RERUN'/
     4' THIS PROGRAM.'/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,1011) NSUBTOT,BLOCKPAT,NSUBR
        CLOSE(42)
         CALL PAUSE
         STOP
        ENDIF
	ENDIF
 7790 CONTINUE
	WRITE(*,2401)
 2401   FORMAT(//' EXAMINING ALL WORKING COPY PATIENT DATA FILES TO'/
     1' MAKE SURE THEY ALL HAVE THE APPROPRIATE ASSAY COEFFICIENTS '/
     2' WRITTEN TO THEIR FILES ... '/)
	DO I=1,NUMEQT
	 NCSTORE(IEQ) = 0
	END DO
	DO ISUB=1,NSUBTOT
       WRITE(*,8889) ISUB
 8889  FORMAT(' SUBJECT NO. ',I6)
        IF(IFORMT .EQ. 1) PATFIL=PREFIX//NUMBER(ISUB)//'.'//EXT
        IF(IFORMT .EQ. 3) PATFIL="XQZPJ"//NUMBER(ISUB)//'.ZMQ'
      TMPFILE = ' '
	TMPFILE = PATFIL
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
      CALL PUTASS(PATHFILE,IASS,C0P,C1P,C2P,C3P,NUMEQT,GENCOEF,
     1  NCSTORE,MAXNUMEQ)
	END DO
      IF(IVERIFY .EQ. 1) THEN
	  WRITE(*,4601)
 4601   FORMAT(//' ENTER 1 TO SAVE THE INSTRUCTIONS FOR THIS RUN INTO'/
     1'		A FILE;'/
     1' ENTER 0 OTHERWISE: ')
 4605   READ(*,*,ERR=4610) ISAVFL
	  GO TO 4615
 4610   WRITE(*,4035)
 4035   FORMAT(/' SEE ABOVE; PLEASE ENTER 0 OR 1: ')
	  GO TO 4605
 4615	  IF (ISAVFL .NE. 0 .AND. ISAVFL .NE. 1) THEN
	   WRITE(*,138)
	   GO TO 4605
	  ENDIF
        IF(ISAVFL .EQ. 1) THEN
 1960	  WRITE(*,4616)
 4616	  FORMAT(/' ENTER THE DESIRED FILENAME: ')
	  READ(*,2) SAVFIL
     	  TMPFILE = ' '
	  TMPFILE = SAVFIL
	  CALL FULLNAME(PATH,TMPFILE,PATHFILE)
        OPEN(24,FILE=PATHFILE,ERR=1970,STATUS='NEW')
	  GO TO 1975
 1970   WRITE(*,9826) PATHFILE
 9826   FORMAT(/' THE FOLLOWING FILE ALREADY EXISTS ....'/
     1'    ',A73/
     1' ENTER 0 TO ENTER A NEW FILENAME;'/
     2' ENTER 1 TO OVERWRITE THIS FILE: ')
	READ(*,*,ERR=1970) IFILE
	IF(IFILE .NE. 0 .AND. IFILE .NE. 1) GO TO 1970
	IF(IFILE .EQ. 0) GO TO 1960
	IF(IFILE .EQ. 1) OPEN(24,FILE=PATHFILE)
 1975   CONTINUE
        WRITE(24,7123) 'REM_FRN MAR_16'
        IVERIFY = 1
        WRITE(24,9111)
 9111   FORMAT(' IVERIFY: 1 --> YES; 0 --> NO')
        WRITE(24,*) IVERIFY
        WRITE(24,9112)
 9112   FORMAT(' FORTRAN MODEL FILE')
        WRITE(24,2) FORFILE
        WRITE(24,9113)
 9113   FORMAT(' NDIM')
        WRITE(24,*) NDIM
        WRITE(24,9114)
 9114   FORMAT(' NP')
        WRITE(24,*) NP
        WRITE(24,9116)
 9116   FORMAT(' IRAN INDICES')
        WRITE(24,*) (IRAN(I),I=1,NP)
        WRITE(24,9117)
 9117   FORMAT(' NVAR')
        WRITE(24,*) NVAR
        WRITE(24,9118)
 9118   FORMAT(' PAR(I),I=1,NVAR')
        DO I = 1,NVAR
         WRITE(24,1717) PAR(I)
        END DO
 1717   FORMAT(A11)
        WRITE(24,9119)
 9119   FORMAT(' AB ARRAY')
        DO I = 1,NVAR
         WRITE(24,*) (AB(I,J),J=1,2)
        END DO
        WRITE(24,9121)
 9121   FORMAT(' NOFIX')
        WRITE(24,*) NOFIX
        WRITE(24,9122)
 9122   FORMAT(' PARFIX(I),I=1,NOFIX, IF NOFIX > 0')
        IF(NOFIX .GT. 0) THEN
         DO I = 1,NOFIX
          WRITE(24,1717) PARFIX(I)
         END DO
        ENDIF
        WRITE(24,9123)
 9123   FORMAT(' VALFIX ARRAY IF NOFIX > 0')
        IF(NOFIX .GT. 0) WRITE(24,*) (VALFIX(I),I=1,NOFIX)
        WRITE(24,9137)
 9137   FORMAT(' NRANFIX')
        WRITE(24,*) NRANFIX
        WRITE(24,9138)
 9138   FORMAT(' PARRANFIX(I),I=1,NRANFIX, IF NRANFIX > 0')
        IF(NRANFIX .GT. 0) THEN
         DO I = 1,NRANFIX
          WRITE(24,1717) PARRANFIX(I)
         END DO
        ENDIF
        WRITE(24,9139)
 9139   FORMAT(' RANFIXEST ARRAY IF NRANFIX > 0')
        IF(NRANFIX .GT. 0) WRITE(24,*) (RANFIXEST(I),I=1,NRANFIX)
        WRITE(24,9124)
 9124   FORMAT(' O.D.E. TOLERANCE')
        WRITE(24,*) TOLER
        WRITE(24,8111)
 8111   FORMAT(' IFORMT ')
        IF(IFORMT .EQ. 3) IFORMTT = 1
        IF(IFORMT .EQ. 1) IFORMTT = 2
        WRITE(24,*) IFORMTT
        IF(IFORMT .EQ. 1) THEN
         WRITE(24,8112)
 8112    FORMAT(' PREFIX')
         WRITE(24,2222) PREFIX
         WRITE(24,8113)
 8113    FORMAT(' EXT')
         WRITE(24,222) EXT
        ENDIF
        IF(IFORMT .EQ. 3) THEN
         WRITE(24,8114)
 8114    FORMAT(' BLOCKPAT')
         WRITE(24,2) BLOCKPAT
         WRITE(24,9141)
 9141    FORMAT(' NCOVA')
         WRITE(24,*) NCOVA
         WRITE(24,9142)
 9142    FORMAT(' COVNAME(I),I=1,NCOVA, IF NCOVA > 0')
         IF(NCOVA .GT. 0) THEN
         DO I = 1,NCOVA
          WRITE(24,1717) COVNAME(I)
         END DO
        ENDIF
        WRITE(24,9143)
 9143   FORMAT(' ICOVTYPE ARRAY IF NCOVA > 0')
        IF(NCOVA .GT. 0) WRITE(24,*) (ICOVTYPE(I),I=1,NCOVA)
        ENDIF
        WRITE(24,8116)
 8116   FORMAT(' NSUBTOT')
        WRITE(24,*) NSUBTOT
        WRITE(24,8117)
 8117   FORMAT(' NSUB')
        WRITE(24,*) NSUB
        WRITE(24,8118)
 8118   FORMAT(' ACTIVE PATIENT NUMBERS, FOLLOWED BY A LINE WITH 0')
        CALL WRITEPT2(24,NSUB,MAXSUB,IPATVEC)
        WRITE(24,*) '    0'
        WRITE(24,8147)
 8147   FORMAT(' XSIG')
        WRITE(24,*) XSIG
        WRITE(24,8124)
 8124   FORMAT(' NUMEQT')
        WRITE(24,*) NUMEQT
        WRITE(24,8126)
 8126   FORMAT(' NUMEQT SETS OF IGAMMA,Cs,IASS,IQVAL')
        DO IEQ=1,NUMEQT
         WRITE(24,*) IGAMMA(IEQ)
         WRITE(24,161) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
         WRITE(24,*) IASS(IEQ)
         WRITE(24,*) IQVAL(IEQ)
        END DO
  161   FORMAT(4(G16.10,2X))
        WRITE(24,8136)
 8136   FORMAT(' NDRUG')
        WRITE(24,*) NDRUG
        WRITE(24,8131)
 8131   FORMAT(' AF(I),I=1,NDRUG')
        WRITE(24,*) (AF(I),I=1,NDRUG)
        WRITE(24,8134)
 8134   FORMAT(' TOL')
        WRITE(24,*) TOL
        WRITE(24,8133)
 8133   FORMAT(' MAXIT')
        WRITE(24,*) MAXIT
        WRITE(24,8138)
 8138   FORMAT(' XDEV')
        WRITE(24,*) XDEV
        CLOSE(24)
	ENDIF
      ENDIF
	IRUNIT = 1
	DO IEQ=1,NUMEQT
	 IF(IGAMMA(IEQ) .EQ. 2) IRUNIT = 0
	END DO
	IF(IRUNIT .EQ. 0) THEN
 7070	WRITE(*,9027)
 9027 FORMAT(//' THE PROGRAM, assbigxx.exe, WILL FIND THE'/
     1' "OPTIMUM" ASSAY NOISE COEFFICIENTS FOR THE FOLLOWING:'//
     2' OUTPUT EQUATION STARTING GUESS FOR [C0,C1,C2,C3]'/)
	DO IEQ=1,NUMEQT
	 IF(IGAMMA(IEQ) .EQ. 2)
     1  WRITE(*,2403) IEQ,C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
 2403   FORMAT('   ',I1,3X,4(G16.10,2X))
	END DO
      IF(IVERIFY .EQ. 0) THEN
       TOLCS = 1.D-2
       GO TO 2410
      ENDIF
  	WRITE(*,2408)
 2408   FORMAT(/' THIS WILL BE DONE USING AN ITERATIVE SEARCH.'//
     2' ENTER 1 TO DO A MEDIUM LEVEL SEARCH (TOL = .00001); '/
     1' ENTER 0 TO DO A QUICK, CURSORY, SEARCH (TOL = .01);'/
     2' ENTER 2 TO DO A MORE EXTENSIVE SEARCH (TOL = .0000000001): ')
	READ(*,*,ERR=7070) ITOLCS
	IF(ITOLCS .LT. 0 .OR. ITOLCS .GT. 2) GO TO 7070
	IF(ITOLCS .EQ. 0) TOLCS = 1.D-2
	IF(ITOLCS .EQ. 1) TOLCS = 1.D-5
	IF(ITOLCS .EQ. 2) TOLCS = 1.D-10
 2410	 TOL = 1.D-3
	 MAXIT = 1
	 XDEV = 1.D0
	 INDPTS = 1
	 ILOG = 1
	 WRITE(*,*)
	ENDIF
	IF(IRUNIT .EQ. 1) THEN
	 TOLCS = .1D0
	 ILOG = 0
	 NGRID = 99999
        INDPTS = 0
	ENDIF
        CALL MAKEDRIV(PATH,NOB,IRUNIT,FORFILE,NSUB,NVAR,NGRID,NUMEQT,
     1   MAXOBDIM,OSName,CopyFile,DeleteFile,IVERIFY)
        TMPFILE = ' '
        TMPFILE = INSTFILE
        CALL FULLNAME(PATH,TMPFILE,PATHFILE)
        OPEN(27,FILE=PATHFILE,ERR=5375,STATUS='NEW')
        GO TO 5380
 5375   WRITE(*,5381) INSTFILE,INSTFILE,INSTBAK,INSTFILE
 5381   FORMAT(/' FILE ',A12,' WHICH WILL STORE THE INSTRUCTIONS AND'/
     1' THE PATIENT DATA FILES TO BE USED BY THE "ENGINE"'/
     2' ALREADY EXISTS. ',A12,' WILL BE COPIED TO ',A12,'. THEN THE '/
     3' VALUES FOR THIS RUN WILL BE WRITTEN INTO ',A12)
	IF(IVERIFY .EQ. 1) CALL PAUSE
        CALL SYSTEM(CopyFile//PATH(1:NOB)//INSTFILE//' '//PATH(1:NOB)//I
     1NSTBAK)
	OPEN(27,FILE=PATHFILE)
 5380   CONTINUE
		WRITE(27,*) NDIM
		WRITE(27,*) MF
		WRITE(27,*) RTOL
		WRITE(27,*) (ATOL(I),I=1,NDIM)
        IF(IFORMT .EQ. 3) THEN
         WRITE(27,2222) "XQZPJ"
         WRITE(27,222) "ZMQ"
         WRITE(27,2) BLOCKPAT
        ENDIF
        IF(IFORMT .EQ. 1) THEN
         WRITE(27,2222) PREFIX
         WRITE(27,222) EXT
         WRITE(*,2717) NSUB,PREFIX,EXT
 2717    FORMAT(/' THE INFORMATION FROM YOUR ',I5,' WORKING COPY FILES'/
     1' WITH PREFIX ',A5,' AND EXTENSION ',A3,' ARE ABOUT TO BE'/
     2' CONVERTED TO CSV FORMAT AND WRITTEN TO THE FILE QMZJPZQX.CSV.'//
     3' IF YOU ALREADY HAVE A FILE BY THIS NAME IN YOUR DIRECTORY, '/
     4' AND WANT TO SAVE THE INFO IN THIS FILE, YOU MUST COPY THE FILE'/
     5' TO ANOTHER FILE BEFORE CONTINUING.'//)
        IF(IVERIFY .EQ. 1) CALL PAUSE
        CALL WORKTOCSV(NSUBTOT,PATH,PREFIX,EXT,'QMZJPZQX.CSV',
     1 MAXNUMEQ)
        WRITE(27,2112) 'QMZJPZQX.CSV'
 2112   FORMAT(A12)
        ENDIF
		WRITE(27,*) NVAR
		WRITE(27,1717) (PAR(I),I=1,NVAR)
		WRITE(27,*) NOFIX
		WRITE(27,1717) (PARFIX(I),I=1,NOFIX)
            WRITE(27,*) NRANFIX
            WRITE(27,1717) (PARRANFIX(I),I=1,NRANFIX)
		WRITE(27,*) (IRAN(I),I=1,NP)
            WRITE(27,*) NSUBTOT
		WRITE(27,*) NSUB
		CALL WRITEPT2(27,NSUB,MAXSUB,IPATVEC)
		WRITE(27,*) '    0'
		IF(NOFIX .GT. 0) WRITE(27,*) (VALFIX(I),I=1,NOFIX)
            IF(NRANFIX .GT. 0) WRITE(27,*) (RANFIXEST(I),I=1,NRANFIX)
	      DO I=1,NVAR
	       WRITE(27,*) (AB(I,J),J=1,2)
	      END DO
		WRITE(27,*) NUMEQT
		DO I=1,NUMEQT
	 	 WRITE(27,162) IGAMMA(I),C0P(I),C1P(I),C2P(I),C3P(I)
		END DO
  162    	FORMAT(I1,2X,4(G16.10,1X))
		WRITE(27,*) XSIG
		QVAL = 0.D0
		DO I=1,NUMEQT
		 QVAL = QVAL + IQVAL(I)
		END DO
		WRITE(27,*) QVAL
            WRITE(27,*) NDRUG
		WRITE(27,*) (AF(I),I=1,NDRUG)
		WRITE(27,*) TOL
		WRITE(27,*) MAXIT
		WRITE(27,*) XDEV
		WRITE(27,*) TOLCS
		WRITE(27,*) INDPTS
		WRITE(27,*) ILOG
	DO 400 ISUB=1,NSUBTOT
      WRITE(*,401) ISUB,INSTFILE
  401 FORMAT(' WRITING SUBJECT ',I6,' TO ',A12)
	IF(IFORMT .EQ. 1) PATFIL=PREFIX//NUMBER(ISUB)//'.'//EXT
	IF(IFORMT .EQ. 3) PATFIL="XQZPJ"//NUMBER(ISUB)//'.ZMQ'
	CALL STACK(PATH,MAXOBDIM,MAXNUMEQ,PATFIL,AF)
  400   CONTINUE
	   CLOSE(27)
     	TMPFILE = ' '
	TMPFILE = 'it2b102.inp'
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(21,FILE=PATHFILE)
     	TMPFILE = ' '
	TMPFILE = 'it2b102.bk'
	CALL FULLNAME(PATH,TMPFILE,PATHFIL2)
	OPEN(22,FILE=PATHFIL2)
 3010 READ(21,444,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) GO TO 3100
	WRITE(22,444) READLINE
	GO TO 3010
 3100 CLOSE(21)
	CLOSE(22)
      CALL SYSTEM(CopyFile//PATH(1:NOB)//'it2b102.bk '//
     1PATH(1:NOB)//'it2b102.inp')
     	TMPFILE = ' '
      IF(IRUNIT .EQ. 1) TMPFILE = 'it2bdriv.f'
      IF(IRUNIT .EQ. 0) TMPFILE = 'assdriv.f'
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(21,FILE=PATHFILE)
     	TMPFILE = ' '
	TMPFILE = 'itasdriv.bak'
	CALL FULLNAME(PATH,TMPFILE,PATHFIL2)
	OPEN(22,FILE=PATHFIL2)
 4010 READ(21,444,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) GO TO 4100
	WRITE(22,444) READLINE
	GO TO 4010
 4100 CLOSE(21)
      CLOSE(22)
      IF(IRUNIT .EQ. 1)
     1 CALL SYSTEM(CopyFile//PATH(1:NOB)//'itasdriv.bak '//
     2 PATH(1:NOB)//'it2bdriv.f')
      IF(IRUNIT .EQ. 2)
     1 CALL SYSTEM(CopyFile//PATH(1:NOB)//'itasdriv.bak '//
     2 PATH(1:NOB)//'assdriv.f')
       IF(IRUNIT .EQ. 0) THEN
        WRITE(*,1113) INSTFILE
1113    FORMAT(//' YOU HAVE COMPLETED THE PREPARATION PHASE FOR THIS'/
     1' PROGRAM. PLEASE DO THE FOLLOWING:'//
     2' 1. PLACE THE FOLLOWING TWO FILES INTO THE "WORKING" DIRECTORY'/
     3'    (WHICH MUST CONTAIN THE PERMANENT MODULES FOR THE ASSDRIV'/
     4'    "ENGINE") OF THE COMPUTER WHICH WILL DO THE ANALYSIS:'/
     5'    ',A12,'  <-- INPUT INSTRUCTIONS + PATIENT DATA;'/
     6'    assdriv.f <-- DRIVER MODULE + MODEL CODE;'//
     7' 2. COMPILE AND LINK THE PROGRAM IN THE WORKING DIRECTORY ... '/
     9' 3. EXECUTE THE PROGRAM ... '//
     2' 5. AFTER THE RUN HAS FINISHED, YOUR OUTPUT FILE WILL BE'/
     3'     ASSxxxx, WHERE xxxx IS THE 4-DIGIT JOB NUMBER ASSIGNED TO'/
     4'     YOUR RUN.'/)
        IF(IVERIFY .EQ. 1) CALL PAUSE
       ENDIF
       IF(IRUNIT .EQ. 1) THEN
        WRITE(*,1111) INSTFILE
1111    FORMAT(//' YOU HAVE COMPLETED THE PREPARATION PHASE FOR THIS'/
     1' PROGRAM. PLEASE DO THE FOLLOWING:'//
     2' 1. PLACE THE FOLLOWING TWO FILES INTO THE "WORKING" DIRECTORY'/
     3'    (WHICH MUST CONTAIN THE PERMANENT MODULES FOR THE BIG IT2B'/
     4'    "ENGINE") OF THE COMPUTER WHICH WILL DO THE ANALYSIS:'/
     5'    ',A12,'  <-- INPUT INSTRUCTIONS + PATIENT DATA;'/
     6'    it2bdriv.f <-- DRIVER MODULE + MODEL CODE;'//
     7' 2. COMPILE AND LINK THE PROGRAM IN THE WORKING DIRECTORY ... '/
     2' 3. EXECUTE THE PROGRAM ... '/
     2' 4. AFTER THE RUN HAS FINISHED, YOUR OUTPUT FILES WILL BE'/
     3'     OUTFxxxx and RFILExxxx.IT, AND YOU WILL SEE A FILE WHICH'/
     4'     CAN BE USED AS AN INSTRUCTION FILE FOR THE BIG NPAG'/
     5'     PROGRAM, FROMxxxx, WHERE xxxx IS THE 4-DIGIT JOB NUMBER'/
     6'     ASSIGNED TO YOUR RUN.'/)
        IF(IVERIFY .EQ. 1) CALL PAUSE
       ENDIF
	STOP
	END
      SUBROUTINE FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
        IMPLICIT REAL*8(A-H,O-Z)
        DIMENSION SIG(5000),RS(5000,34),YO(MAXOBDIM,MAXNUMEQ),
     1  BS(5000,7),C0(MAXNUMEQ),C1(MAXNUMEQ),C2(MAXNUMEQ),C3(MAXNUMEQ)
        CHARACTER ERRFIL*20
      COMMON/ERROR/ERRFIL
	CHARACTER SEX*1,READLINE*1000
	DO I=1,7
	 READ(27,*)
	END DO
	READ(27,*) AGE
	READ(27,2) SEX
    2 FORMAT(A1)
	ISEX=1
	IF(SEX .EQ. 'F') ISEX=2
	READ(27,*) HEIGHT
	READ(27,*) IETHFLG
    1   FORMAT(A1000)
   10	READ(27,1) READLINE
	IF(READLINE(12:23) .NE. 'NO. OF DRUGS') GO TO 10
	BACKSPACE(27)
    3   FORMAT(T2,I5)
        READ(27,3) NDRUG
	IF(NDRUG .GT. 7) THEN
	 WRITE(*,124)
  124    FORMAT(' YOUR PATIENT DATA FILES CANNOT HAVE MORE THAN 7'/
     1' DRUGS. THE PROGRAM IS NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,124)
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
        READ(27,3) NADD
	NI = 2*NDRUG + NADD
	IF(NI .GT. 34) THEN
  	 WRITE(*,123)
  123    FORMAT(/' YOUR PATIENT DATA FILES HAVE TOO MANY COLUMNS IN '/
     1' THE DOSAGE REGIMEN BLOCK. THE NO. OF ADDITIONAL COVARIATES '/
     2' PLUS TWICE THE NO. OF DRUGS CANNOT EXCEED 34. THE PROGRAM IS'/
     3' NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,123)
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
        READ(27,3) ND
	IF(ND .GT. 5000) THEN
	 WRITE(*,125)
  125    FORMAT(' YOUR PATIENT DATA FILES CANNOT HAVE MORE THAN 5000'/
     1' DOSE EVENTS. THE PROGRAM IS NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,125)
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	READ(27,*)
	READ(27,*)
        IF(ND.EQ.0) GO TO 40
	DO I = 1,ND
         READ(27,*) SIG(I),(RS(I,J),J=1,NI)
	END DO
        DO I=1,ND
         DO J=1,NDRUG
          BS(I,J)=RS(I,2*J)
	 END DO
	END DO
   40	READ(27,1) READLINE
	IF(READLINE(12:23) .NE. 'NO. OF TOTAL') GO TO 40
	BACKSPACE(27)
        READ(27,3) NUMEQT
        READ(27,3) M
	IF(M .GT. MAXOBDIM) THEN
  	 WRITE(*,126) MAXOBDIM
  126    FORMAT(/' AT LEAST ONE OF YOUR PATIENT DATA FILES HAS TOO'/
     1' MANY OBSERVED VALUE TIMES. THIS NO. CANNOT EXCEED ',I5,'.'/
     2' THE PROGRAM IS NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,126) MAXOBDIM
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	IF(NUMEQT .GT. MAXNUMEQ) THEN
        WRITE(*,127) MAXNUMEQ
  127    FORMAT(/' AT LEAST ONE OF YOUR PATIENT DATA FILES HAS TOO'/
     1' MANY OUTPUT EQUATION COLUMNS. THIS NO. CANNOT EXCEED ',I2,'.'/
     2' THE PROGRAM IS NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,127) MAXNUMEQ
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	DO I=1,M
         READ(27,*) T,(YO(I,J),J=1,NUMEQT)
	END DO
	NOBSER = M
   50	READ(27,1) READLINE
	IF(READLINE(1:25) .NE. 'ASSAY COEFFICIENTS FOLLOW') GO TO 50
	DO IEQ = 1,NUMEQT
	 READ(27,*) C0(IEQ),C1(IEQ),C2(IEQ),C3(IEQ)
	END DO
	RETURN
	END
	SUBROUTINE STACK(PATH,MAXOBDIM,MAXNUMEQ,PATFIL,AF)
        IMPLICIT REAL*8(A-H,O-Z)
        DIMENSION SIG(5000),RS(5000,34),AF(7)
        CHARACTER PATFIL*20,READLINE*1000,PATH*60,TMPFILE*13,PATHFILE*73
        CHARACTER ERRFIL*20
      COMMON/ERROR/ERRFIL
    1   FORMAT(A1000)
     	TMPFILE = ' '
	TMPFILE = PATFIL
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
        OPEN(21,FILE=PATHFILE)
   10	READ(21,1,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) THEN
       WRITE(*,128) PATFIL
128    FORMAT(/' PATIENT DATA FILE ',A20,' HAS AN OLD-STYLE WORKING'/
     1' COPY FORMAT.'//
     2' FOR THIS PROGRAM, A PATIENT DATA FILE MUST HAVE "NO OF DRUGS"'/
     3' IN ENTRIES 12 THROUGH 23 ON OR NEAR LINE 18.'//
     5' THE PROGRAM STOPS. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,128) PATFIL
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	WRITE(27,1) READLINE
	IF(READLINE(12:23) .NE. 'NO. OF DRUGS') GO TO 10
	BACKSPACE(21)
    3   FORMAT(T2,I5)
	READ(21,3) NDRUG
	IF(NDRUG .GT. 7) THEN
	 WRITE(*,124) PATFIL
  124    FORMAT(' PATIENT DATA FILE ',A20,' HAS TOO MANY DRUGS'/
     1' (I.E, MORE THAN 7). THE PROGRAM IS NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,124) PATFIL
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
        READ(21,3) NADD
	NI = 2*NDRUG + NADD
	IF(NI .GT. 34) THEN
  	 WRITE(*,123) PATFIL
  123    FORMAT(/' YOUR PATIENT DATA FILES HAVE TOO MANY COLUMNS IN '/
     1' THE DOSAGE REGIMEN BLOCK. THE NO. OF ADDITIONAL COVARIATES '/
     2' PLUS TWICE THE NO. OF DRUGS CANNOT EXCEED 34. THE PROGRAM IS'/
     3' NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,123) PATFIL
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
        READ(21,3) ND
	IF(ND .GT. 5000) THEN
	 WRITE(*,125) PATFIL
  125    FORMAT(' PATIENT DATA FILE ',A20,' HAS TOO MANY DOSE EVENTS'/
     1' (I.E., MORE THAN 5000). THE PROGRAM IS NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,125) PATFIL
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	BACKSPACE(21)
	BACKSPACE(21)
	DO I=1,4
	 READ(21,1) READLINE
	 WRITE(27,1) READLINE
	END DO
        IF(ND.EQ.0) GO TO 40
        DO I = 1,ND
         READ(21,*) SIG(I),(RS(I,J),J=1,NI)
         DO J = 1,2*NDRUG
          IDRUG = (J+1)/2
          RS(I,J) = RS(I,J)*AF(IDRUG)
         END DO
         WRITE(27,*) SIG(I),(RS(I,J),J=1,NI)
        END DO
   40	READ(21,1) READLINE
	WRITE(27,1) READLINE
	IF(READLINE(12:23) .NE. 'NO. OF TOTAL') GO TO 40
	BACKSPACE(21)
        READ(21,3) NUMEQT
        READ(21,3) M
	IF(M .GT. MAXOBDIM) THEN
	 WRITE(*,126) PATFIL,M,MAXOBDIM,MAXOBDIM
  126    FORMAT(/' PATIENT ',A20,' HAS ',I3,' OBSERVATION TIMES. THIS '/
     1' IS MORE THAN THE ALLOWABLE MAXIMUM OF ',I3,'. PLEASE RERUN THE'/
     2' PROGRAM AFTER ENSURING THAT ALL YOUR PATIENTS HAVE NO MORE '/
     3' THAN ',I3,' OBSERVATION TIMES. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,126) PATFIL,M,MAXOBDIM,MAXOBDIM
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	IF(NUMEQT .GT. MAXNUMEQ) THEN
	 WRITE(*,127) PATFIL,NUMEQT,MAXNUMEQ,MAXNUMEQ
  127    FORMAT(/' PATIENT ',A20,' HAS ',I3,' OUTPUT EQUATION COLUMNS,'/
     1' WHICH IS MORE THAN THE MAXIMUM ALLOWABLE NO. OF ',I2,'.'/
     2' PLEASE RERUN THE PROGRAM AFTER ENSURING THAT ALL YOUR PATIENTS'/
     3' HAVE NO MORE THAN ',I2,' OUTPUT EQUATION COLUMNS. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,127) PATFIL,NUMEQT,MAXNUMEQ,MAXNUMEQ
       CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	BACKSPACE(21)
   20	READ(21,1,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) GO TO 100
	WRITE(27,1) READLINE
	GO TO 20
  100	CLOSE(21)
	RETURN
	END
        SUBROUTINE VERIF1(PREFIX,EXT,IFORMT,NSUB,NSUBTOT,
     1  PAR,NVAR,AB,C0P,C1P,C2P,C3P,IASS,AF,NOFIX,VALFIX,PARFIX,
     2  TOL,MAXIT,XDEV,XSIG,IGAMMA,IQVAL,NUMEQT,IUNIQ,PATH,NOB,BLOCKPAT,
     3  ISUBALL,MAXSUB,IPATVEC,NDRUG,TOLER,NDIM,RTOL,ATOL,
     4  OSName,ListDir,IRAN,MAXNUMEQ,NRANFIX,PARRANFIX,
     6  RANFIXEST)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION AB(30,2),VALFIX(20),IGAMMA(MAXNUMEQ),IASS(MAXNUMEQ),
     1 C0P(MAXNUMEQ),C1P(MAXNUMEQ),C2P(MAXNUMEQ),C3P(MAXNUMEQ),
     2 IUNIQ(MAXNUMEQ),IQVAL(MAXNUMEQ),IPATVEC(MAXSUB),AF(7),
     3 ATOL(20),IRAN(32),RANFIXEST(20)
      COMMON/ERROR/ERRFIL
	CHARACTER PREFIX*5,EXT*3,PAR(30)*11,OSName*20,LISTDIR*10,
     1  PARFIX(20)*11,PATFIL*20,FILASS*20,READLINE*1000,PATH*60,
     2  TMPFILE*13,PATHFILE*73,BLOCKPAT*20,CODEPAT*15,ANS*3,ERRFIL*20,
     3  PARRANFIX(20)*11
  102   FORMAT(A20)
  103   FORMAT(A3)
  104   FORMAT(A5)
 5020   WRITE(*,1)
    1   FORMAT(///' THE FOLLOWING INFO WAS READ IN; IF ANY OF IT IS '/
     1' INCORRECT, MAKE THE DESIRED CHANGES.')
      WRITE(*,919) TOLER
 919  FORMAT(/' THE TOLERANCES FOR THE O.D.E. SOLVER ARE ALL ',G16.8)
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
 915   WRITE(*,913)
 913   FORMAT(/' ENTER 1 TO SET ALL TOLERANCES (FOR THE O.D.E. '/
     1'         SOLVER) TO THE DEFAULT VALUE ... 1.D-4.'/
     2' ENTER 0 TO SELECT A DIFFERENT VALUE FOR THE TOLERANCES: ')
       READ(*,*,ERR=915) ITOL
       IF(ITOL .NE. 0 .AND. ITOL .NE. 1) GO TO 915
       TOLER=1.D-4
      IF(ITOL .EQ. 0) THEN
  910	 WRITE(*,914)
  914  FORMAT(/' ENTER A POSITIVE VALUE FOR THE TOLERANCE PARAMETERS: ')
       READ(*,*,ERR=910) TOLER
       IF(TOLER .LE. 0.D0) GO TO 910
      ENDIF
      RTOL = TOLER
      DO I=1,NDIM
       ATOL(I) = TOLER
      END DO
      ENDIF
	IF(IFORMT .EQ. 1) THEN
	 WRITE (*,2) PREFIX,EXT
    2    FORMAT(/' THE PATIENT DATA FILES ARE CALLED: ',A5,'001.',A3,' .
     1..')
	 WRITE(*,3)
    3    FORMAT(/' THESE FILES ARE IN WORKING COPY FORMAT.')
	ENDIF
	IF(IFORMT .EQ. 3) WRITE(*,22) BLOCKPAT
   22   FORMAT(/' THE PATIENT DATA INFORMATION WILL BE INPUT IN '/
     1' BLOCK FORMAT FROM FILE ',A20)
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
4005	WRITE(*,141)
  141   FORMAT(/' ENTER 1 IF THE PATIENT DATA INFO WILL BE SUPPLIED'/
     1'         IN A MATRIX BLOCK FORMAT; '/
     2' ENTER 2 IF THE PATIENT DATA INFO WILL BE INPUT USING A'/
     3'         WORKING COPY FORMAT: ')
	READ(*,*,ERR=4005) IFORMTT
	IF(IFORMTT .NE. 1 .AND. IFORMTT .NE. 2) GO TO 4005
         IF(IFORMTT .EQ. 1) IFORMT = 3
         IF(IFORMTT .EQ. 2) IFORMT = 1
	IF(IFORMT .EQ. 3) THEN
         WRITE(*,3111)
 3111    FORMAT(/' ENTER THE NAME OF THE FILE WHICH CONTAINS ALL THE'/
     1' PATIENT DATA INFO IN BLOCK FORMAT (ENTER -99 TO SEE ALL OR A '/
     2' PART OF YOUR DIRECTORY: ')
        READ(*,102) BLOCKPAT
	IF(BLOCKPAT(1:3) .EQ. '-99') THEN
           CALL SEEDIR(PATH,NOB,BLOCKPAT,OSName,ListDir)
        ENDIF
     	TMPFILE = ' '
	TMPFILE = BLOCKPAT
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(67,FILE=PATHFILE,ERR=3120,STATUS='OLD')
	GO TO 3130
 3120   WRITE(*,5316) PATHFILE
 5316   FORMAT(//' THE FOLLOWING FILE DOES NOT EXIST ... '/
     1'    ',A73)
	GO TO 4005
 3130   CONTINUE
	 ICODEPAT = 0
	 READ(67,7126) CODEPAT
 7126    FORMAT(A15)
	 IF(CODEPAT .EQ. '"POPDATA APR_11') ICODEPAT = 1
	 IF(CODEPAT(1:14) .EQ. 'POPDATA APR_11') ICODEPAT = 1
       IF(CODEPAT .EQ. '"POPDATA DEC_11') ICODEPAT = 1
       IF(CODEPAT(1:14) .EQ. 'POPDATA DEC_11') ICODEPAT = 1
	IF(ICODEPAT .EQ. 0) THEN
	 WRITE(*,3131)
 3131    FORMAT(//' YOUR PATIENT DATA BLOCK FORMAT FILE IS NOT FROM '/
     1' THE ALLOWABLE SET OF SUCH FILES.'//
     2' A PATIENT DATA BLOCK FORMAT FILE MUST HAVE "POPDATA XXX_XX IN'/
     3' COLUMNS 1 THROUGH 15 ON LINE 1, WHERE  XXX_XX  IS APR_11 OR A '/
     4' MORE RECENT DATE.'//)
	  CLOSE(67)
	  GO TO 4005
	ENDIF
	CLOSE(67)
	ENDIF
	IF(IFORMT .EQ. 1) THEN
 7505	  WRITE(*,4041)
 4041     FORMAT(/' ENTER THE 5-CHAR PREFIX FOR PATIENT FILENAMES: ')
	  READ(*,104) PREFIX
	  WRITE(*,4043)
 4043     FORMAT(/' IF THERE IS A 3-CHAR EXTENSION FOR THE PATIENT '/
     1' FILENAMES, ENTER IT NOW; OTHERWISE, HIT CARRIAGE RETURN: ')
	  READ(*,103) EXT
	  IF(PREFIX(1:1) .EQ. ' ' .OR. PREFIX(2:2) .EQ. ' ' .OR.
     1       PREFIX(3:3) .EQ. ' ' .OR. PREFIX(4:4) .EQ. ' ' .OR.
     2       PREFIX(5:5) .EQ. ' ') THEN
     	PATFIL = PREFIX//'001.'//EXT
 7500   WRITE(*,7501) PATFIL(1:12)
 7501   FORMAT(/' ARE YOUR SUBJECT FILES REALLY CALLED ',A12,' ... ?'//
     1' ENTER 1 TO REENTER YOUR SUBJECT FILENAMES; '/
     2' ENTER 0 IF THESE NAMES ARE ACCURATE: ')
	READ(*,*,ERR=7500) IOK
	IF(IOK .NE. 0 .AND. IOK .NE. 1) GO TO 7500
	IF(IOK .EQ. 1) GO TO 7505
	   ENDIF
	ENDIF
        CALL GETNUMEQ(PATH,NOB,0,IFORMT,PREFIX,EXT,BLOCKPAT,NUMEQT2,
     1   NDRUG2,MAXSUB,MAXNUMEQ)
      IF(NUMEQT .GT. MAXNUMEQ) THEN
       WRITE(*,8317) NUMEQT,MAXNUMEQ
 8317  FORMAT(/' YOUR PATIENT FILES HAVE ',I3,' OUTPUT EQUATIONS. '/
     1' THIS IS MORE THAN THE MAXIMUM ALLOWED NO. OF ',I2,'.'//
     2' PLEASE CORRECT YOUR PATIENT FILES AND THEN RERUN THE PROGRAM.'/)
       OPEN(42,FILE=ERRFIL)
        WRITE(42,8317) NUMEQT,MAXNUMEQ
       CLOSE(42)
       CALL PAUSE
       STOP
      ENDIF
	IF(NUMEQT .NE. NUMEQT2) THEN
	 WRITE(*,7512) NUMEQT2,NUMEQT
 7512    FORMAT(//' YOUR NEW PATIENT DATA FILES HAVE ',I4,' OUTPUT'/
     1' EQUATION(S), RATHER THAN THE ',I4,' OUTPUT EQUATION(S) THAT '/
     2' YOUR ORIGINAL PATIENT FILES HAD. BE SURE TO CHANGE THE ASSAY'/
     3' COEFFICIENT INFORMATION BELOW, IF NEEDED.')
	 IF(NUMEQT .LT. NUMEQT2) THEN
	  DO IEQ = NUMEQT+1,NUMEQT2
	   IASS(IEQ) = 1
	   C0P(IEQ) = 1
	   C1P(IEQ) = 1
	   C2P(IEQ) = 1
	   C3P(IEQ) = 1
	  END DO
	 ENDIF
	NUMEQT = NUMEQT2
	ENDIF
	IF(NDRUG .NE. NDRUG2) THEN
	 WRITE(*,7513) NDRUG2,NDRUG
 7513    FORMAT(//' YOUR NEW PATIENT DATA FILES HAVE ',I4,' DRUGS,'/
     1' RATHER THAN THE ',I4,' DRUGS THAT YOUR ORIGINAL PATIENT FILES'/
     2' HAD. BE SURE TO CHANGE THE AF VALUES BELOW, IF NEEDED.')
	 IF(NDRUG .LT. NDRUG2) THEN
	  DO ID = NDRUG+1,NDRUG2
         AF(ID) = 1.D0
	  END DO
	 ENDIF
	NDRUG = NDRUG2
	ENDIF
	ENDIF
      IF(NSUB .EQ. NSUBTOT) WRITE(*,6) NSUBTOT,NSUB
    6   FORMAT(/' YOU HAVE ',I5,' SUBJECTS IN YOUR ENTIRE DATA SET. '/
     1' OF THESE, ALL ',I5,' WILL BE USED IN THIS ANALYSIS. ')
      IF(NSUB .LT. NSUBTOT) THEN
	 WRITE(*,16) NSUBTOT,NSUB
   16    FORMAT(/' YOU HAVE ',I5,' SUBJECTS IN YOUR ENTIRE DATA SET. '/
     1' OF THESE, ',I5,' WILL BE USED IN THIS ANALYSIS. THE INDICES'/
     2' OF THE PATIENTS TO BE USED ARE AS FOLLOWS: ')
	 CALL WRITEPAT(NSUB,MAXSUB,IPATVEC)
	ENDIF
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
	CALL GETIPAT(NSUBTOT,NSUB,ISUBALL,MAXSUB,IPATVEC)
        ENDIF
	WRITE(*,7) (PAR(I),I=1,NVAR)
    7   FORMAT(/' THE PARAMETERS TO BE ESTIMATED ARE: '/
     1' ',30A11)
      WRITE(*,9)
    9 FORMAT(//' THEIR RANGES, AND WHETHER THEIR ESTIMATES MUST BE'/
     1' GREATER THAN OR EQUAL TO 0 ARE: ')
      NORAN = 0
      NP = NVAR + NOFIX + NRANFIX
      DO I = 1,NP
       IF(IRAN(I) .EQ. 0 .OR. IRAN(I) .EQ. 2) GO TO 100
       NORAN = NORAN + 1
       IF(IRAN(I) .EQ. 1) ANS = 'YES'
       IF(IRAN(I) .EQ. -1) ANS = 'NO '
       WRITE(*,11) PAR(NORAN),AB(NORAN,1),AB(NORAN,2),ANS
  100  CONTINUE
      END DO
   11  FORMAT(/' ',A11,': ',G17.10,'  TO  ',G17.10,5X,3A)
	WRITE(*,201)
  201   FORMAT(/' THE USER-ENTERED FIXED PARAMETER VALUE(S) IS (ARE):')
	IF(NOFIX .EQ. 0) WRITE(*,*)' ... NONE SELECTED.'
      IF(NOFIX .GT. 0) THEN
       DO 210 I=1,NOFIX
  210   WRITE(*,211) PARFIX(I),VALFIX(I)
      ENDIF
  211   FORMAT(/' ',A11,': ',G17.10)
      WRITE(*,1201)
 1201 FORMAT(/' THE USER-ENTERED RANFIX PARAMETER VALUE(S) IS (ARE):')
      IF(NRANFIX .EQ. 0) WRITE(*,*)' ... NONE SELECTED.'
      IF(NRANFIX .GT. 0) THEN
       DO I=1,NRANFIX
        WRITE(*,211) PARRANFIX(I),RANFIXEST(I)
       END DO
	ENDIF
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
	IPB=1
	GO TO 4970
 4970 WRITE(*,5971)
 5971 FORMAT(/' ENTER 0 TO CHANGE THE RANGES OF THE RANDOM VARIABLES;'/
     1' ENTER 1 TO LEAVE THE RANGES UNCHANGED: ')
      READ(*,*,ERR=4970) IRANGE
      IF(IRANGE .NE. 1 .AND. IRANGE .NE. 0) GO TO 4970
      IF(IRANGE .EQ. 1) GO TO 5975
      WRITE(*,1117)
 1117   FORMAT(/' ENTER THE BOUNDS OF THE RANGE FOR EACH PARAMETER.'//
     1' CAUTION: IF ANY OF YOUR PARAMETERS CANNOT = 0, BE SURE TO MAKE'/
     2'          ITS LOWER BOUNDARY A POSITIVE NUMBER, RATHER THAN 0.'/
     3'          (ONE SUCH EXAMPLE IS FOR VOL WHICH SHOWS UP IN THE'/
     4'          DENOMINATOR OF THE OUTPUT EQUATION IN THE MODEL'/
     5'          FILE.)'//)
	DO 6060 I=1,NVAR
	WRITE(*,34) PAR(I)
   34   FORMAT(/' ',A11,' : ')
 7110   READ(*,*,ERR=7115) (AB(I,J),J=1,2)
	GO TO 6060
 7115   WRITE(*,7116)
 7116   FORMAT(/' SEE ABOVE; PLEASE ENTER TWO REAL NUMBERS: ')
	GO TO 7110
 6060 CONTINUE
 5975 WRITE(*,5976)
 5976 FORMAT(/' ENTER 0 TO CHANGE WHETHER OR NOT ONE OR MORE RANDOM'/
     1'         VARIABLES MUST HAVE AN ESTIMATE WHICH IS .GE. 0; '/
     2' ENTER 1 TO LEAVE THESE SPECIFICATIONS UNCHANGED: ')
      READ(*,*,ERR=5975) ISPEC
      IF(ISPEC .NE. 1 .AND. ISPEC .NE. 0) GO TO 5975
      IF(ISPEC .EQ. 1) GO TO 5980
      WRITE(*,5972)
 5972 FORMAT(/' FOR EACH RANDOM VARIABLE BELOW,'/
     1' ENTER 1 IF ITS ESTIMATE MUST BE .GE. 0;'/
     2' ENTER -1 IF ITS ESTIMATE MAY BE NEGATIVE.'/)
      NORAN = 0
      DO I = 1,NP
       IF(IRAN(I) .EQ. 0 .OR. IRAN(I) .EQ. 2) GO TO 110
       NORAN = NORAN + 1
  115  WRITE(*,111) PAR(NORAN)
  111  FORMAT(/' ',A11,': ')
       READ(*,*,ERR=115) IRAN(I)
       IF(IRAN(I) .NE. 1 .AND. IRAN(I) .NE. -1) GO TO 115
  110  CONTINUE
      END DO
 5980	IF(NOFIX .GT. 0) THEN
     	  WRITE(*,4836)
 4836     FORMAT(/' ENTER THE VALUE FOR EACH FIXED PARAMETER: ')
      DO 4855 I=1,NOFIX
       WRITE(*,34) PARFIX(I)
 4840  READ(*,*,ERR=4845) VALFIX(I)
       GO TO 4855
 4845  WRITE(*,4841)
 4841  FORMAT(/' SEE ABOVE; ENTER A POSITIVE VALUE: ')
       GO TO 4840
 4855  CONTINUE
	ENDIF
      IF(NRANFIX .GT. 0) THEN
     	  WRITE(*,5836)
 5836   FORMAT(/' ENTER THE INITIAL EST. FOR EACH RANFIX PARAMETER: ')
        DO 5855 I=1,NRANFIX
        WRITE(*,34) PARRANFIX(I)
 5840   READ(*,*,ERR=5845) RANFIXEST(I)
        GO TO 5855
 5845   WRITE(*,4841)
        GO TO 5840
 5855   CONTINUE
      ENDIF
	IF(IPB .EQ. 1) GO TO 7220
 7210   CONTINUE
 7220   CONTINUE
	ENDIF
 4990	WRITE(*,4991) XSIG
 4991   FORMAT(//' THE INITIAL POPULATION STD. DEV. FOR EACH PARAMETER'/
     1' WILL BE    ',F10.4,'    TIMES THE RANGE OF THAT PARAMETER.')
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
 4995	WRITE(*,*)' ENTER THE CORRECT MULTIPLE OF THE RANGE: '
	READ(*,*,ERR=4995) XSIG
	IF(XSIG .LE. 0.D0) THEN
	  WRITE(*,*) 'THE NUMBER MUST BE POSITIVE.'
	  GO TO 4995
	ENDIF
	ENDIF
	WRITE(*,12) NUMEQT
   12   FORMAT(/' THE ASSAY S.D. FOR EACH OF THE ',I2,' OUTPUT '/
     1' EQUATION(S) IS MODELLED AS A CUBIC FUNCTION OF THE OBSERVED'/
     2' LEVELS. THAT IS, EACH ASSAY S.D. IS '/
     3' SD = GAMMA*(C0+C1*Y+C2*Y**2+C3*Y**3).')
	DO IEQ = 1,NUMEQT
        WRITE(*,311) IEQ
	IF(IASS(IEQ) .EQ. 1) WRITE(*,419)
	IF(IASS(IEQ) .EQ. 2) WRITE(*,519)
	IF(IASS(IEQ) .EQ. 0) WRITE(*,619)
  419   FORMAT(/' EACH PATIENT WILL BE ASSIGNED THE ASSAY COEFFICIENTS'/
     1' IN HIS/HER DATA FILE; IF THERE ARE NO COEFFICIENTS IN THE DATA'/
     2' FILE, THE PATIENT WILL BE ASSIGNED THE GENERAL VALUES SHOWN '/
     3' BELOW.')
  519   FORMAT(/' EVERY PATIENT WILL BE ASSIGNED THE SAME GENERAL '/
     1' ASSAY COEFFICIENTS. THIS MEANS THAT ANY WORKING COPY PATIENT'/
     2' DATA FILE WHICH ALREADY HAS INDIVIDUAL ASSAY COEFFICIENTS WILL'/
     3' BE OVERWRITTEN BY THE VALUES SHOWN BELOW.')
  619   FORMAT(/' YOU WILL BE PROMPTED TO ENTER ASSAY COEFFICIENTS '/
     1' ON A PATIENT - BY - PATIENT BASIS. YOU MAY CHOOSE THE GENERAL'/
     2' VALUES SHOWN BELOW, COEFFICIENTS ALREADY IN THE PATIENT DATA'/
     3' FILE, IF ANY, OR ANY OTHER INDIVIDUAL COEFFICIENTS. ')
	IF(IGAMMA(IEQ) .EQ. 0 .AND. IASS(IEQ) .NE. 2) WRITE(*,212)
	IF(IGAMMA(IEQ) .EQ. 1 .AND. IASS(IEQ) .NE. 2) WRITE(*,213)
	IF(IGAMMA(IEQ) .EQ. 0 .AND. IASS(IEQ) .EQ. 2) WRITE(*,218)
	IF(IGAMMA(IEQ) .EQ. 1 .AND. IASS(IEQ) .EQ. 2) WRITE(*,219)
	IF(IGAMMA(IEQ) .EQ. 2) WRITE(*,217)
  212   FORMAT(/' GAMMA WILL BE ESTIMATED.')
  213   FORMAT(/' GAMMA WILL BE FIXED = 1.0. ')
  218   FORMAT(/' THE ASSAY COEFFICIENTS SHOWN BELOW WILL REMAIN FIXED.'
     1//
     2' GAMMA WILL BE ESTIMATED. '/)
  219   FORMAT(/' BOTH THE ASSAY COEFFICIENTS SHOWN BELOW AND GAMMA'/
     1' (EQUAL TO 1.0) WILL REMAIN FIXED. ')
  217   FORMAT(/' THE ASSAY COEFFICIENTS SHOWN BELOW WILL BE INITIAL'/
     1' ESTIMATES ONLY. A PRELIMINARY PROGRAM WILL CALCULATE'/
     2' AN OPTIMUM SET OF COEFFICIENTS TO BE USED FOR ALL PATIENTS. '/
     3' THIS PREPARATION PROGRAM CAN THEN BE RERUN WITH THIS OPTIMUM '/
     4' SET ENTERED AND USED FOR THE ANALYSIS PROGRAM.')
	WRITE(*,221)
  221   FORMAT(/' THE GENERAL VALUES FOR [C0,C1,C2,C3] WILL BE: ')
	WRITE(*,161) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
  161   FORMAT(4(G16.10,2X))
	CALL PAUSE
	END DO
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
      DO IEQ = 1,NUMEQT
       IQVAL(IEQ) = 0
      END DO
        WRITE(*,19) NUMEQT
   19 FORMAT(//' THE ASSAY ERROR FUNCTION FOR EACH OF THE ',I2,' OUTPUT'
     1/
     2' EQUATION(S) IS MODELED AS FOLLOWS:'//
     2' ASSAY S.D. = GAMMA*(C0+C1*Y+C2*Y**2+C3*Y**3).'//
     3' FOR EACH OF THE OUTPUT EQUATIONS, YOU MAY ENTER EITHER: '//
     6'     ONE SET TO BE USED FOR ALL PATIENTS, OR'//
     4'     A UNIQUE SET OF COEFFICIENTS, [C0,C1,C2,C3] FOR EACH PATIENT
     5.'//
     6' IN THE FORMER CASE, YOU MAY ALSO HAVE A PRELIMINARY'/
     7' PROGRAM FIND AN OPTIMUM SET OF COEFFICIENTS, BASED ON YOUR '/
     8' INITIAL ESTIMATES, THE PATIENT DATA FILES, AND YOUR INPUT'/
     9' INSTRUCTIONS.'//
     9' IN EITHER CASE, YOU MAY CHOOSE WHETHER OR NOT TO HAVE THE MAIN'/
     1' PROGRAM GIVE AN UPDATED ESTIMATE FOR GAMMA. '//
     3' MAKE YOUR SELECTIONS FOR EACH OUTPUT EQUATION, IN TURN: '/)
	CALL PAUSE
	DO 2120 IEQ = 1,NUMEQT
        WRITE(*,311) IEQ
  311   FORMAT(//' FOR OUTPUT EQUATION ',I1,': '//)
  310   WRITE(*,312)
  312 FORMAT(/' ENTER 1 TO USE ONE SET OF COEFFICIENTS FOR ALL PATIENTS;
     1'/
     4' ENTER 0 IF EACH PATIENT WILL HAVE A UNIQUE SET OF COEFFICIENTS:
     5 ')
	READ(*,*,ERR=310) IUNIQ(IEQ)
	IF(IUNIQ(IEQ) .NE. 0 .AND. IUNIQ(IEQ) .NE. 1) GO TO 310
	IF(IUNIQ(IEQ) .EQ. 1) THEN
 5015   WRITE(*,1124)
 1124   FORMAT(/' ENTER 1 IF THE ASSAY COEFFICIENTS ARE NOT TO BE ESTIMA
     1TED, AND'/
     1'         GAMMA IS TO REMAIN FIXED AT 1.0;'//
     6' ENTER 2 IF THE ASSAY COEFFICIENTS ARE NOT TO BE ESTIMATED, BUT'/
     7'		GAMMA IS TO BE ESTIMATED;'//
     2' ENTER 3 IF YOU HAVE NO IDEA ABOUT YOUR ASSAY ERROR AND WOULD'/
     3'         LIKE A PRELIMINARY PROGRAM FIRST TO FIND ESTIMATES FOR'/
     4'         [C0,C1,C2,C3], GIVEN YOUR INITIAL ESTIMATES, PATIENT DAT
     5A FILES, AND'/
     6'         INPUT INSTRUCTIONS: ')
	READ(*,*,ERR=5015) IGAM
	IF(IGAM .LT. 1 .OR. IGAM .GT. 3) GO TO 5015
	IF(IGAM .EQ. 1) IGAMMA(IEQ) = 1
	IF(IGAM .EQ. 3) IGAMMA(IEQ) = 2
	IF(IGAM .EQ. 2) THEN
	 IGAMMA(IEQ) = 0
	 IQVAL(IEQ) = 1
	ENDIF
	IASS(IEQ) = 2
	ENDIF
	IF(IUNIQ(IEQ) .EQ. 0) THEN
 7015   WRITE(*,1126)
 1126   FORMAT(/' ENTER 1 IF GAMMA IS TO REMAIN FIXED AT 1.0;'/
     6' ENTER 2 IF AN UPDATED ESTIMATE OF GAMMA IS TO BE FOUND: ')
	READ(*,*,ERR=7015) IGAM
	IF(IGAM .LT. 1 .OR. IGAM .GT. 2) GO TO 7015
	IF(IGAM .EQ. 1) IGAMMA(IEQ) = 1
	IF(IGAM .EQ. 2) THEN
	 IGAMMA(IEQ) = 0
	 IQVAL(IEQ) = 1
	ENDIF
 1120	WRITE(*,119)
  119 FORMAT(//' SELECT ONE OF THE FOLLOWING OPTIONS FOR THE ASSAY '/
     1'		COEFFICIENTS [C0,C1,C2,C3]: '//
     4' ENTER 1 FOR THE DEFAULT OPTION ...'/
     5'         FOR EACH PATIENT, IF THE DATA FILE ALREADY INCLUDES '/
     6'		ASSAY COEFFICIENTS, THOSE COEFFICIENTS WILL BE USED. '/
     7'		OTHERWISE THE COEFFICIENTS YOU ENTER BELOW WILL BE '/
     8'		USED;'/
     7' ENTER 0 IF YOU WOULD LIKE TO BE PROMPTED SO YOU MAY CHOOSE THE'/
     8'		ASSAY COEFFICIENTS ON A PATIENT - BY - PATIENT BASIS.'/
     9'         YOU MAY CHOOSE GENERAL VALUES (WHICH YOU WILL ENTER '/
     1'		BELOW), COEFFICIENTS ALREADY IN THE PATIENT DATA FILE,'/
     2'		IF ANY, OR ANY OTHER INDIVIDUAL COEFFICIENTS: ')
	READ(*,*,ERR=1120) IASS(IEQ)
	IF(IASS(IEQ) .NE. 0 .AND. IASS(IEQ) .NE. 1) GO TO 1120
	ENDIF
 2140   WRITE(*,2141) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
 2141   FORMAT(/' ENTER 1 TO LEAVE THE GENERAL VALUES FOR [C0,C1,C2,C3]
     1UNCHANGED; '/
     2' THEY ARE CURRENTLY: ',4(G12.6,1X)//
     2' ENTER 0 TO CHANGE THESE GENERAL VALUES: ')
	READ(*,*,ERR=2140) ICHCS
	IF(ICHCS .NE. 0 .AND. ICHCS .NE. 1) GO TO 2140
	IF(ICHCS .EQ. 1) GO TO 2120
 1140	WRITE(*,1119)
 1119   FORMAT(/' ENTER THE GENERAL VALUES FOR [C0,C1,C2,C3]. THESE ')
	IF(IASS(IEQ) .EQ. 1) WRITE(*,1121)
	IF(IASS(IEQ) .EQ. 2 .AND. IGAMMA(IEQ) .NE. 2) WRITE(*,1122)
	IF(IASS(IEQ) .EQ. 2 .AND. IGAMMA(IEQ) .EQ. 2) WRITE(*,1127)
	IF(IASS(IEQ) .EQ. 0) WRITE(*,1123)
 1121   FORMAT(' WILL BE USED FOR ALL PATIENTS WHOSE DATA FILES DO '/
     1' NOT ALREADY INCLUDE ASSAY COEFFICIENTS: ')
 1122   FORMAT(' WILL BE USED FOR ALL PATIENTS.'//
     1' NOTE: IF YOU WANT TO ENTER THESE VALUES VIA AN OUTPUT FILE FROM
     2A'/
     2' PREVIOUS RUNNING OF THE PROGRAM assbigxx.exe, '/
     3' ENTER THE WORD "FILE": ')
 1123   FORMAT(' WILL BE USED FOR THOSE PATIENTS YOU SELECT BELOW: ')
 1127   FORMAT(' WILL BE INITIAL ESTIMATES ONLY. AN OPTIMUM SET WILL '/
     1' BE CALCULATED BY A PRELIMINARY PROGRAM, '/
     2' assbigxx.exe, FROM THESE ESTIMATES. A TYPICAL INITIAL GUESS'/
     3' IS [.1,.1,.05,.001]:  ')
	IF(IASS(IEQ) .NE. 2 .OR. IGAMMA(IEQ) .EQ. 2) THEN
	 READ(*,*,ERR=1140) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	ENDIF
	IF(IASS(IEQ) .EQ. 2 .AND. IGAMMA(IEQ) .NE. 2) THEN
	 READ(*,*,ERR=1145) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	 GO TO 2120
 1145    WRITE(*,1131)
 1131    FORMAT(/' ENTER THE NAME OF THE OUTPUT FILE (FROM '/
     1' assbigxx.exe); IT WILL BE   ASSxxxx   WHERE xxxx IS THE '/
     2' 4-DIGIT NUMBER ASSIGNED TO THAT RUN;'/
     1'   ENTER -99 TO SEE ALL OR A PART OF YOUR DIRECTORY: ' )
          READ(*,102) FILASS
	  IF(FILASS(1:3) .EQ. '-99') THEN
             CALL SEEDIR(PATH,NOB,FILASS,OSName,ListDir)
          ENDIF
	  TMPFILE = ' '
	  TMPFILE = FILASS
	  CALL FULLNAME(PATH,TMPFILE,PATHFILE)
     	  OPEN(26,FILE=PATHFILE,ERR=1155,STATUS='OLD',POSITION='APPEND')
	  GO TO 1150
 1155     WRITE(*,5316) PATHFILE
	  GO TO 1140
 1150	  BACKSPACE(26)
	  BACKSPACE(26)
	  READ(26,444) READLINE
  444     FORMAT(A1000)
	  IF(READLINE(2:18) .NE. 'ESTIMATES FOR [C0') GO TO 1150
	  IF(IEQ .EQ. 1) GO TO 2155
	  DO I=1,IEQ-1
	   READ(26,*)
	  END DO
 2155	  READ(26,*) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	  CLOSE(26)
	  IQVAL(IEQ) = 4
	ENDIF
 2120   CONTINUE
 1160	WRITE(*,2119)
 2119   FORMAT(//' NOTE: DURING THIS PREPARATION PROGRAM, EACH SUBJECT'/
     1'       WILL HAVE HIS/HER ASSAY COEFFICIENTS WRITTEN TO THE END'/
     2'       OF HIS/HER WORKING COPY PATIENT FILE. IF COEFFICIENTS '/
     3'       ARE ALREADY THERE FROM A PREVIOUS RUN, THEY WILL BE '/
     4'       OVERWRITTEN.'//)
	CALL PAUSE
	ENDIF
        WRITE(*,112) NDRUG
  112   FORMAT(/' THE ACTIVE (SALT) FRACTION OF EACH OF THE ',I1,' DRUG(
     1S) FOLLOWS.')
        DO I = 1,NDRUG
         WRITE(*,113) I,AF(I)
  113    FORMAT(' AF FOR DRUG ',I1,' IS ',G12.6)
        END DO
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
 5150   WRITE(*,129)
  129   FORMAT(//' ENTER THE ACTIVE (SALT) FRACTION OF EACH DRUG. AS '/
     1' AN EXAMPLE, THE A.F. OF THEOPHYLLINE IS 1.0, WHILE THAT OF'/
     2' AMINOPHYLLINE IS TYPICALLY BETWEEN .79 AND .85, DEPENDING ON'/
     3' THE PREPARATION. '//
     4' EACH AF MUST BE A POSITIVE NUMBER LESS THAN OR EQUAL TO 1.0.'/)
        DO I = 1,NDRUG
         WRITE(*,1129) I
 1129    FORMAT(' AF FOR DRUG ',I1,': ')
         READ(*,*,ERR=5150) AF(I)
         IF(AF(I) .LE. 0.0 .OR. AF(I) .GT. 1.0) GO TO 5150
        END DO
	ENDIF
	IRUNIT = 1
	DO IEQ=1,NUMEQT
	 IF(IGAMMA(IEQ) .EQ. 2) IRUNIT = 0
	END DO
	IF(IRUNIT .EQ. 1) THEN
	IF(TOL .GE. 1.D-7) WRITE(*,6101) TOL,MAXIT
	IF(TOL .LT. 1.D-7) WRITE(*,6102) TOL,MAXIT
 6101   FORMAT(/' THE STOPPING TOLERANCE FOR THE ITERATIONS IS ',G13.7,/
     1' THE MAXIMUM NO. OF ITERATIONS IS ',I9,/)
 6102   FORMAT(/' THE STOPPING TOLERANCE FOR THE ITERATIONS IS ',G13.7,/
     1' THE MAXIMUM NO. OF ITERATIONS IS ',I9,/)
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
	WRITE(*,*)' ENTER THE STOPPING TOLERANCE FOR THE ITERATIONS: '
 6100   READ(*,*,ERR=6105) TOL
	GO TO 4195
 6105   WRITE(*,*)' SEE ABOVE; PLEASE ENTER A REAL NUMBER: '
	GO TO 6100
 4195   MMAXIT = 40999
      	WRITE(*,123) MMAXIT+1
  123   FORMAT(/' ENTER THE MAX NO. OF ITERATIONS DESIRED (LESS THAN ',I
     15,'): ')
        READ(*,*,ERR=4195) MAXIT
	IF(MAXIT .LE. 0 .OR. MAXIT .GT. 40999) GO TO 4195
	ENDIF
        WRITE(*,4986) XDEV
 4986   FORMAT(//' THE PARAMETER RANGES WHICH WILL BE SUPPLIED '/
     1' TO THE 2ND PART (NPEM) OF THIS TWO-PART PROGRAM WILL '/
     2' BE    ',F10.3,'    STANDARD DEVIATIONS BELOW AND ABOVE EACH'/
     3' POPULATION PARAMETER MEAN. ')
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
 4215	WRITE(*,4988)
 4988   FORMAT(//' THE RANGES, OF THE PARAMETERS TO BE SUPPLIED '/
     1' TO THE 2ND PART (NPEM) OF THIS PROGRAM, WILL BE SOME NUMBER'/
     2' OF S.D. (5 IS A TYPICAL CHOICE) ABOVE AND BELOW EACH '/
     3' POPULATION MEAN (BUT NOT BELOW .00000001). HOW MANY S.D. ABOVE'/
     4' AND BELOW THE MEANS DO YOU WANT THE PARAMETER RANGES TO BE ?'/
     5' ENTER THE NUMBER: ')
	READ(*,*,ERR=4215) XDEV
	IF(XDEV .LE. 0.D0) THEN
	  WRITE(*,*)' THIS NUMBER MUST BE POSITIVE.'
	  GO TO 4215
	ENDIF
	ENDIF
	ENDIF
	IF(IRUNIT .EQ. 0) THEN
	 TOL = 1.D-3
	 MAXIT = 10
	 XDEV = 5.D0
	ENDIF
 5005	WRITE(*,5001)
 5001   FORMAT(///' ENTER 1 IF ALL INSTRUCTIONS ARE NOW CORRECT;'/
     2' ENTER 0 OTHERWISE: ')
        READ(*,*,ERR=5005) ICHANG
	IF(ICHANG .NE. 0 .AND. ICHANG .NE. 1) GO TO 5005
        IF(ICHANG .EQ. 0) GO TO 5020
	RETURN
	END
	SUBROUTINE CHANGE(ICHANG)
   10 	WRITE(*,1)
    1   FORMAT(//' ENTER 1 IF THE ABOVE INFORMATION IS CORRECT;'/
     1' ENTER 0 IF IT SHOULD BE CHANGED: ')
        READ(*,*,ERR=10) ICHANG
	IF(ICHANG .NE. 0 .AND. ICHANG .NE. 1) GO TO 10
        RETURN
	END
	SUBROUTINE EXTRAOPT(PATH,NOB,MAXSUB,PAREST,SERNUM,
     1  YPREDPOP,YPREDBAY,PARBAY,YO,MAXOBDIM,OSName,ListDir,
     2  DeleteFile,ClearScreen,MAXNUMEQ)
	IMPLICIT REAL*8(A-H,O-Z)
     	DIMENSION YO(MAXOBDIM,MAXNUMEQ),PAREST(MAXSUB,30),
     1 SERNUM(MAXSUB),COEFF(999,5),VALFIX(20),
     2 YPREDPOP(MAXSUB,MAXNUMEQ,MAXOBDIM,2),
     3 YPREDBAY(MAXSUB,MAXNUMEQ,MAXOBDIM,2),
     3 PARBAY(MAXSUB,2,30),C0(MAXNUMEQ),C1(MAXNUMEQ),
     4 C2(MAXNUMEQ),C3(MAXNUMEQ),GAMMA(MAXNUMEQ),
     4 COVAL(999,26),IPATVEC(MAXSUB),AF(7),RANFIXEST(20)
	REAL YYPRED(150000),YYJ(150000),AMIN,AMAX,XCOV(999),YCOV(999)
	CHARACTER READLINE*1000,OUTFIL*20,NUMBER(999)*3,PATFIL*20,EXT*3,
     1  PREFIX*5,PAR(30)*11,OUTSINGL*20,
     2  OPT6FIL*20,MNAME*7,PARFIX(20)*11,PATH*60,TMPFILE*13,PATHFILE*73,
     3  XLABEL*20,YLABEL*20,XLABEL2*10,YLABEL2*10,OUTOPT7*20,
     4  DESCR(26)*20,READLIN1*1000,OSName*20,ListDir*10,DeleteFile*3,
     5  CSVFILE*20,ClearScreen*6,PARRANFIX(20)*11
        CHARACTER*10 DATDAY,TIMDAY,ZONEDAY,ERRFIL*20
	  INTEGER IDTDAY(10)
	COMMON/TOBLK/NUMBER
	COMMON/TOSCAT/MAXSER,MINSER,SERMEN,SERSD,COEFF
      COMMON/ERROR/ERRFIL
    1   FORMAT(A20)
    2   FORMAT(A1000)
 5320	WRITE(*,5321)
 5321   FORMAT(//' ENTER THE NAME OF THE OUTPUT FILE FROM A PREVIOUS'/
     1' RUN.'//
     4' IT WILL BE OF THE FORM OUTFxxxx, WHERE xxxx IS THE JOB NUMBER'/
     5' ASSIGNED TO THE RUN.'//)
	WRITE(*,*)' ENTER -99 TO SEE ALL OR A PART OF YOUR DIRECTORY: '
        READ(*,1) OUTFIL
	IF(OUTFIL(1:3) .EQ. '-99') THEN
           CALL SEEDIR(PATH,NOB,OUTFIL,OSName,ListDir)
        ENDIF
      TMPFILE = ' '
	TMPFILE = OUTFIL
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
      OPEN(45,FILE=PATHFILE,ERR=5335,STATUS='OLD')
	GO TO 5340
5335  WRITE(*,5316) PATHFILE
5316   FORMAT(//' THE FOLLOWING FILE DOES NOT EXIST ... '/
     1'    ',A73)
	GO TO 5320
 5340 CONTINUE
	IICODE = -1
	READ(45,*)
	READ(45,*)
      READ(45,2) READLIN1
      IF(READLIN1(1:16) .EQ. '  REM_FRN JUL_10') IICODE = 2
      IF(READLIN1(1:16) .EQ. '  REM_FRN JUL_11') IICODE = 3
      IF(READLIN1(1:16) .EQ. '  REM_FRN MAR_16') IICODE = 4
	IF(IICODE .EQ. -1) THEN
        WRITE(*,5313) OUTFIL
 5313   FORMAT(//' FILE ',A20,' IS NOT AN OUTPUT FILE'/
     1' FROM A RECENT VERSION OF THE PROGRAM. IT MUST HAVE --'/
     2' REM_FRN JUL_10, OR A LATER DATE, ON LINE 3, STARTING AT COLUMN 3
     3.'/)
        GO TO 5320
	ENDIF
  110	WRITE(*,*)
	WRITE(*,*)
      WRITE(*,*)' THE FOLLOWING INFO SUMMARIZES THE INPUT INSTRUCTIONS'
	WRITE(*,*)' FOR THE RUN WHOSE OUTPUT FILE YOU JUST ENTERED: '
	WRITE(*,*)
	ILINES=3
  150	READ(45,2) READLINE
      ILINES=ILINES+1
      WRITE(*,11) READLINE(1:72)
   11 FORMAT(' ',A72)
	IF(ILINES .EQ. 20) THEN
	  CALL PAUSE
	  ILINES=0
	ENDIF
	IF(READLINE(2:12) .NE. 'THE FOLLOWI') GO TO 150
  160	WRITE(*,12)
   12 FORMAT(//' ENTER 1 IF THE OUTPUT FILE DESCRIBED ABOVE IS THE'/
     1'         ONE FROM THE RUN YOU WISH TO EXAMINE IN DETAIL;'/
     2' ENTER 0 IF YOU WISH TO ENTER ANOTHER OUTPUT FILE: ')
	READ(*,*,ERR=160) IANOT
	IF(IANOT .NE. 0 .AND. IANOT .NE. 1) GO TO 160
	IF(IANOT .EQ. 0) THEN
	  CLOSE(45)
	  GO TO 5320
	ENDIF
	REWIND(45)
	 CALL SEPARATE
	 CALL GETNUM(NUMEQT)
   50    READ(25,2) READLINE
         IF(READLINE(2:15) .NE. 'THE SUBJ. FILE') GO TO 50
         READ(25,2) READLINE
	   PREFIX = READLINE(9:13)
	   EXT    = READLINE(24:26)
        IF(IICODE .GE. 3) THEN
   55    READ(25,2) READLINE
         IF(READLINE(2:29) .NE. 'THE SUBJECT INFORMATION IS S') GO TO 55
         READ(25,1) CSVFILE
        ENDIF
	   CALL GETNSUB2(NSUBTOT)
	   CALL GETNSUB(NSUB)
	   CALL GETIPATFF(25,NSUBTOT,NSUB,MAXSUB,IPATVEC,IERRR)
	   IF(IERRR .EQ. -1) STOP
        IF(IICODE .EQ. 2) THEN
  210    READ(25,2) READLINE
         IF(READLINE(2:10) .EQ. 'ACTIVE (S') THEN
          BACKSPACE(25)
          READ(25,164) AFSCALAR
  164     FORMAT(T27,G12.6)
          GO TO 165
         ENDIF
         GO TO 210
        ENDIF
        IF(IICODE .GE. 3) THEN
 1210   READ(25,2) READLINE
        IF(READLINE(2:17) .EQ. 'THE NO. OF DRUGS') THEN
         READ(25,*) NDRUG
         READ(25,*)
         READ(25,*)
         READ(25,*)
         READ(25,*) (AF(I),I=1,NDRUG)
         GO TO 165
        ENDIF
        GO TO 1210
        ENDIF
  165	CLOSE(25)
   90	BACKSPACE(28)
	BACKSPACE(28)
	READ(28,2) READLINE
	IF(READLINE(2:13) .NE. 'SUMMARY INFO') GO TO 90
	READ(28,*)
	READ(28,*)
	READ(28,5301) NSUB
 5301 FORMAT(T28,I3)
	READ(28,*)
	READ(28,5302) NVAR
 5302 FORMAT(T30,I2)
	READ(28,*)
	READ(28,*)
	READ(28,5303) (PAR(I),I=1,NVAR)
 5303 FORMAT(30(A11,1X))
  190	READ(28,2) READLINE
	IF(READLINE(2:22) .NE. 'THE NUMBER OF FIXED V') GO TO 190
	BACKSPACE(28)
	READ(28,191) NOFIX
  191 FORMAT(T41,I2)
	IF(NOFIX .GT. 0) THEN
	 READ(28,*)
	 READ(28,*)
	 DO I=1,NOFIX
	  READ(28,192) PARFIX(I),VALFIX(I)
	 END DO
  192  FORMAT(T2,A11,3X,G17.10)
	ENDIF
      NRANFIX = 0
      IF(IICODE .GE. 4) THEN
  195	READ(28,2) READLINE
	IF(READLINE(2:22) .NE. 'THE NUMBER OF RANFIX ') GO TO 195
	BACKSPACE(28)
	READ(28,193) NRANFIX
  193 FORMAT(T37,I2)
	IF(NRANFIX .GT. 0) THEN
	 READ(28,*)
	 READ(28,*)
       READ(28,*)
	 DO I=1,NRANFIX
	  READ(28,192) PARRANFIX(I),RANFIXEST(I)
	 END DO
	ENDIF
      ENDIF
	REWIND(28)
	DO 40 ISUB=1,NSUB
   30   READ(28,2) READLINE
	IF(READLINE(2:11) .NE. 'SUBJECT NO') GO TO 30
	  READ(28,*)
	  READ(28,*)
	  READ(28,*)
	  READ(28,*)
	  READ(28,*) (PAREST(ISUB,J),J=1,NVAR)
   40     CONTINUE
  505   READ(28,2) READLINE
        IF(READLINE(2:15) .NE. 'A UNIQUE GAMMA') GO TO 505
        READ(28,*)
        READ(28,*)
        DO I=1,NUMEQT
         READ(28,*) GAMMA(I)
        END DO
	REWIND(27)
  510  READ(28,2) READLINE
	 IF(READLINE(2:25) .NE. 'CYCLE POPULATION MEDIANS') GO TO 510
	 READ(28,*)
	 DO JSUB=1,NSUB
	  CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	  DO IEQ=1,NUMEQT
	   DO IOBS=1,NOBSER
	    READ(28,*) (YPREDPOP(JSUB,IEQ,IOBS,ICEN),ICEN=1,2)
	   END DO
	  END DO
	 END DO
	REWIND(27)
  515    READ(28,2) READLINE
	 IF(READLINE(2:17) .NE. 'MEDIANS), FOLLOW') GO TO 515
	 READ(28,*)
	 DO JSUB=1,NSUB
	  CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	  DO IEQ=1,NUMEQT
	   DO IOBS=1,NOBSER
	    READ(28,*) (YPREDBAY(JSUB,IEQ,IOBS,ICEN),ICEN=1,2)
	   END DO
	  END DO
	 END DO
  520    READ(28,2) READLINE
	 IF(READLINE(2:28) .NE. 'AND THEN ON THE FINAL CYCLE') GO TO 520
	 READ(28,*)
	 DO JSUB=1,NSUB
	  DO J=1,NVAR
	   READ(28,*) (PARBAY(JSUB,ICEN,J),ICEN=1,2)
	  END DO
	 END DO
	CLOSE(28)
	ICOVHAVE = 0
 7185   WRITE(*,7186)
 7186   FORMAT(/' ENTER 1 TO SEE THE LAST CYCLE VALUES AGAIN;'/
     6' ENTER 5 TO USE THE FINAL CYCLE POPULATION ESTIMATES TO PREDICT'/
     7'         CONCENTRATION VALUES FOR EACH SUBJECT;'/
     1' ENTER 6 TO GET FINAL MAP BAYESIAN POSTERIOR PARAMETER ESTIMATES'
     1/
     2'         FITTED FOR EACH SUBJECT, USING THE POPULATION ESTIMATES'
     3/
     4'         FROM THE FINAL CYCLE;'/
     8' ENTER 7 TO SEE REGRESSION STATISTICS OF ANY DESCRIPTOR OR'/
     9'         RANDOM VARIABLE VS. ANY OTHER DESCRIPTOR OR RANDOM'/
     1'         VARIABLE (ACROSS ALL SUBJECTS);'/
     7' ENTER 8 TO END THIS PROGRAM AND (IF DESIRED) CONTINUE WITH THE'/
     8'         NPAG PROGRAM: ')
	READ(*,*,ERR=7185) IOPT
	IF(IOPT .NE. 1 .AND. IOPT .NE. 5 .AND. IOPT .NE. 6 .AND. IOPT
     1   .NE. 7 .AND. IOPT .NE. 8) GO TO 7185
	IF(IOPT .EQ. 8) THEN
	 IF(IICODE .GE. 2) THEN
	  CLOSE(28)
	  CLOSE(27)
	  CLOSE(47)
	  CALL SYSTEM(DeleteFile//' JUNKTRASH0001')
	  CALL SYSTEM(DeleteFile//' JUNKTRASH0002')
	  CALL SYSTEM(DeleteFile//' JUNKTRASH0003')
	  CALL SYSTEM(DeleteFile//' JUNKTRASH0004')
	 ENDIF
 	 RETURN
	ENDIF
	IF(IOPT .EQ. 1) THEN
	 IF(IICODE .EQ. 1) THEN
     	  TMPFILE = ' '
	  TMPFILE = OUTFIL
	  CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	  OPEN(25,FILE=PATHFILE,STATUS='OLD',POSITION='APPEND')
	 ENDIF
	 IF(IICODE .GE. 2) THEN
	  OPEN(25,FILE='JUNKTRASH0001',STATUS='OLD',POSITION='APPEND')
	 ENDIF
    	 CALL PRNLAST
	 CLOSE(25)
	 GO TO 7185
	ENDIF
	IF(IOPT .EQ. 5) THEN
 6550	WRITE(*,6546)
 6546   FORMAT(/' ENTER 0 IF YOU WOULD LIKE TO WRITE ALL THE NUMERICAL'/
     1'         RESULTS FROM THIS OPTION TO A FILE; '/
     2' ENTER 1 IF YOU DO NOT WANT TO WRITE THE RESULTS TO A FILE: ')
	READ(*,*,ERR=6550) ISAVFIL
	IF(ISAVFIL .NE. 0 .AND. ISAVFIL .NE. 1) GO TO 6550
	IF(ISAVFIL .EQ. 1) IPUT = 0
	IF(ISAVFIL .EQ. 0) THEN
	IPUT = 1
 5980   WRITE(*,5981)
 5981   FORMAT(/' ENTER THE NAME OF THE OUTPUT FILE TO SAVE ALL THE'/
     1' SCATTERPLOT AND RELATED RESULTS: ')
	READ(*,1) OUTSINGL
     	TMPFILE = ' '
	TMPFILE = OUTSINGL
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(31,FILE=PATHFILE,ERR=5970,STATUS='NEW')
	GO TO 5975
 5970   WRITE(*,9826) PATHFILE
 9826   FORMAT(/' THE FOLLOWING FILE ALREADY EXISTS ....'/
     1'    ',A73/
     1' ENTER 0 TO ENTER A NEW FILENAME;'/
     2' ENTER 1 TO OVERWRITE THIS FILE: ')
	READ(*,*,ERR=5970) IFILE
	IF(IFILE .NE. 0 .AND. IFILE .NE. 1) GO TO 5970
	IF(IFILE .EQ. 0) GO TO 5980
	IF(IFILE .EQ. 1) OPEN(31,FILE=PATHFILE)
 5975   CONTINUE
 	CALL DATE_AND_TIME(DATDAY,TIMDAY,ZONEDAY,IDTDAY)
	WRITE(31,*)
	WRITE(31,*)' TODAY IS ',DATDAY,'; THE TIME IS ',TIMDAY
	WRITE(31,*)
	WRITE(31,*)
	ENDIF
 9500   WRITE(*,9501) NUMEQT
 9501   FORMAT(//' YOUR PATIENT DATA FILES HAVE ',I2,' OUTPUT '/
     1' EQUATION(S). FOR EACH OUTPUT EQUATION, YOU MAY PREDICT LEVELS '/
     2' FOR EACH SUBJECT ASSUMING THAT SUBJECT HAS PARAMETER VALUES '/
     3' EQUAL TO EITHER THE POPULATION MEANS OR THE POPULATION MEDIANS'/
     4' FROM THE FINAL CYCLE. '//
     5' ENTER THE NO. OF THE OUTPUT EQUATION WHOSE LEVELS ARE TO BE'/
     6' PREDICTED: ')
	READ(*,*,ERR=9500) IOUTEQ
	IF(IOUTEQ .LT. 1 .OR. IOUTEQ .GT. NUMEQT) GO TO 9500
 9510   WRITE(*,9502)
 9502   FORMAT(/' ENTER 1 TO USE THE POPULATION MEANS; '/
     1' ENTER 2 TO USE THE POPULATION MEDIANS: ')
	READ(*,*,ERR=9510) ICENTER
	IF(ICENTER .NE. 1 .AND. ICENTER .NE. 2) GO TO 9510
 9505   CONTINUE
        WRITE(*,9503)
 9503   FORMAT(//' ENTER 1 TO CALCULATE THE PREDICTED CONCENTRATION '/
     1'         LEVELS FOR THE ENTIRE POPULATION OF SUBJECTS AS A WHOLE;
     2'/
     2' ENTER 2 TO CALCULATE THE PREDICTED LEVELS FOR A SELECTED'/
     3'         SUBSET OF SUBJECTS;'/
     4' ENTER 3 TO CALCULATE THE PREDICTED LEVELS FOR EACH SUBJECT, IN'/
     5'         TURN;'/
     6' ENTER 0 TO RETURN TO THE PREVIOUS MENU:  ')
	READ(*,*,ERR=9505) ISCT
	IF(ISCT .LT. 0 .OR. ISCT .GT. 3) GO TO 9505
	IF(ISCT .EQ. 0) THEN
	 IF(ISAVFIL .EQ. 0) CLOSE(31)
	 GO TO 7185
	ENDIF
	IF(ISCT .EQ. 1) ISCAT = 3
	IF(ISCT .EQ. 3) ISCAT = 1
	IF(ISCT .EQ. 2) ISCAT = 2
	REWIND(27)
	IF(ISCAT .EQ. 1) THEN
	DO 6000 JSUB=1,NSUB
	CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	NACTUAL = 0
	DO I=1,NOBSER
	 IF(YO(I,IOUTEQ) .NE. -99.) THEN
	  NACTUAL = NACTUAL + 1
	  YYPRED(NACTUAL) = YPREDPOP(JSUB,IOUTEQ,I,ICENTER)
	  YYJ(NACTUAL) = YO(I,IOUTEQ)
	 ENDIF
	END DO
	C0I = C0(IOUTEQ)
	C1I = C1(IOUTEQ)
	C2I = C2(IOUTEQ)
	C3I = C3(IOUTEQ)
	IF(IPUT .EQ. 1) WRITE(31,8518) IOUTEQ
 8518 	FORMAT(//' ... FOR OUTPUT EQUATION ',I2,' ...'/)
	G=GAMMA(IOUTEQ)
 	CALL SCATPLOT(1,ICENTER,IIOUT,IQUAL,JSUB,IPUT,NACTUAL,YYPRED,YYJ,
     1  G*C0I,G*C1I,G*C2I,G*C3I,AMIN,AMAX,0,1,1.D0)
 6000   CONTINUE
	GO TO 9505
	ENDIF
	IF(ISCAT .EQ. 2) THEN
 9520	WRITE(*,8504)
 8504   FORMAT(//' ENTER THE SUBJECT NO. WHOSE CALCULATIONS ARE DESIRED;
     1'/
     1' ENTER 0 TO RETURN TO THE PREVIOUS MENU: ')
	READ(*,*,ERR=9520) JSUB
	IF(JSUB .LT. 0 .OR. JSUB .GT. NSUB) GO TO 9520
	IF(JSUB .EQ. 0) GO TO 9505
	REWIND(27)
	IF(JSUB .GT. 1) THEN
	 DO J=1,JSUB-1
	  CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	 END DO
	ENDIF
	CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	NACTUAL = 0
	DO I=1,NOBSER
	 IF(YO(I,IOUTEQ) .NE. -99.) THEN
	  NACTUAL = NACTUAL + 1
	  YYPRED(NACTUAL) = YPREDPOP(JSUB,IOUTEQ,I,ICENTER)
	  YYJ(NACTUAL) = YO(I,IOUTEQ)
	 ENDIF
	END DO
	C0I = C0(IOUTEQ)
	C1I = C1(IOUTEQ)
	C2I = C2(IOUTEQ)
	C3I = C3(IOUTEQ)
	IF(IPUT .EQ. 1) WRITE(31,8518) IOUTEQ
        IF(IICODE .GE. 2 .AND. NSUB .LT. NSUBTOT) THEN
	   WRITE(*,8516) JSUB,NSUB,IPATVEC(JSUB),NSUBTOT
 8516    FORMAT(/' SUBJECT NO. ',I4,' AMONG THE ',I4,' "ACTIVE" '/
     1' SUBJECTS ANALYZED IN YOUR RUN, IS SUBJECT NO. ',I4,' IN THE'/
     2' ENTIRE POPULATION OF ',I4,' SUBJECTS.')
        ENDIF
	G=GAMMA(IOUTEQ)
       CALL SCATPLOT(1,ICENTER,IIOUT,IQUAL,JSUB,IPUT,NACTUAL,YYPRED,YYJ,
     1  G*C0I,G*C1I,G*C2I,G*C3I,AMIN,AMAX,0,1,1.D0)
	GO TO 9520
	ENDIF
	IF(ISCAT .EQ. 3) THEN
	JSUBST = 0
	DO 7000 JSUB=1,NSUB
	CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	NACTUAL = 0
	DO I=1,NOBSER
	 IF(YO(I,IOUTEQ) .NE. -99.) THEN
	  NACTUAL = NACTUAL + 1
	  YYPRED(JSUBST+NACTUAL) = YPREDPOP(JSUB,IOUTEQ,I,ICENTER)
	  YYJ(JSUBST+NACTUAL) = YO(I,IOUTEQ)
	 ENDIF
	END DO
	COEFF(JSUB,1) = NACTUAL
	COEFF(JSUB,2) = C0(IOUTEQ)*GAMMA(IOUTEQ)
	COEFF(JSUB,3) = C1(IOUTEQ)*GAMMA(IOUTEQ)
	COEFF(JSUB,4) = C2(IOUTEQ)*GAMMA(IOUTEQ)
	COEFF(JSUB,5) = C3(IOUTEQ)*GAMMA(IOUTEQ)
	JSUBST = JSUBST + NACTUAL
	SERNUM(JSUB)=NACTUAL
 7000   CONTINUE
	CALL CALCSER(MAXSUB,NSUB,SERNUM,MAXSER,MINSER,SERMEN,SERSD)
	IF(IPUT .EQ. 1) WRITE(31,8518) IOUTEQ
	G=GAMMA(IOUTEQ)
 	CALL SCATPLOT(1,ICENTER,IIOUT,IQUAL,-NSUB,IPUT,JSUBST,YYPRED,
     1  YYJ,G*C0I,G*C1I,G*C2I,G*C3I,AMIN,AMAX,0,1,1.D0)
	GO TO 9505
	ENDIF
	ENDIF
	IF(IOPT .EQ. 6) THEN
 6560	WRITE(*,6546)
	READ(*,*,ERR=6560) ISAVFIL
	IF(ISAVFIL .NE. 0 .AND. ISAVFIL .NE. 1) GO TO 6560
	IF(ISAVFIL .EQ. 1) IPUT = 0
	IF(ISAVFIL .EQ. 0) THEN
	IPUT = 1
 4980   WRITE(*,5981)
	READ(*,1) OUTSINGL
     	TMPFILE = ' '
	TMPFILE = OUTSINGL
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(31,FILE=PATHFILE,ERR=4970,STATUS='NEW')
	GO TO 4975
 4970   WRITE(*,9826) PATHFILE
	READ(*,*,ERR=4970) IFILE
	IF(IFILE .NE. 0 .AND. IFILE .NE. 1) GO TO 4970
	IF(IFILE .EQ. 0) GO TO 4980
	IF(IFILE .EQ. 1) OPEN(31,FILE=PATHFILE)
 4975   CONTINUE
 	CALL DATE_AND_TIME(DATDAY,TIMDAY,ZONEDAY,IDTDAY)
	WRITE(31,*)
	WRITE(31,*)' TODAY IS ',DATDAY,'; THE TIME IS ',TIMDAY
	WRITE(31,*)
	WRITE(31,*)
	ENDIF
 8500   WRITE(*,8501) NUMEQT
 8501   FORMAT(//' YOUR PATIENT DATA FILES HAVE ',I2,' OUTPUT '/
     1' EQUATION(S). FOR EACH OUTPUT EQUATION, YOU MAY PREDICT LEVELS'/
     2' FOR EACH SUBJECT ASSUMING THAT SUBJECT HAS PARAMETER VALUES '/
     3' EQUAL TO THE MAP BAYESIAN POSTERIOR PARAMETER ESTIMATES, USING'/
     4' EITHER THE MEANS OR THE MEDIANS OF THE FINAL CYCLE AS THE '/
     5' POPULATION PRIOR PARAMETER ESTIMATES. '//
     6' ENTER THE NO. OF THE OUTPUT EQUATION WHOSE LEVELS ARE TO BE '/
     7' PREDICTED: ')
	READ(*,*,ERR=8500) IOUTEQ
	IF(IOUTEQ .LT. 1 .OR. IOUTEQ .GT. NUMEQT) GO TO 8500
 8515   WRITE(*,8507)
 8507   FORMAT(/' ENTER 1 TO USE THE MEANS OF THE FINAL CYCLE AS THE'/
     1'         PRIOR ESTIMATES; '/
     2' ENTER 2 TO USE THE MEDIANS OF THE FINAL CYCLE AS THE '/
     3'         PRIOR ESTIMATES: ')
	READ(*,*,ERR=8515) ICENTER
	IF(ICENTER .NE. 1 .AND. ICENTER .NE. 2) GO TO 8515
	IF(ICENTER .EQ. 1) MNAME = 'MEANS'
	IF(ICENTER .EQ. 2) MNAME = 'MEDIANS'
 8510 	WRITE(*,8517)
 8517	FORMAT(//' YOU MAY STORE THESE MAP BAYESIAN ESTIMATES INTO A'/
     7' FILE.'//
     8' ENTER 1 TO STORE THE ESTIMATES INTO A FILE; '/
     9' ENTER 0 OTHERWISE:  ')
	READ(*,*,ERR=8510) IFILSTR
	IF(IFILSTR .NE. 0 .AND. IFILSTR .NE. 1) GO TO 8510
	IF(IFILSTR .EQ. 1) THEN
 8780 WRITE(*,*)
	WRITE(*,*)' ENTER THE NAME OF THE OUTPUT FILE WHICH WILL STORE'
	WRITE(*,*)' THESE MAP BAYESIAN ESTIMATES FOR EACH SUBJECT: '
	READ(*,1) OPT6FIL
      TMPFILE = ' '
	TMPFILE = OPT6FIL
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(33,FILE=PATHFILE,ERR=8770,STATUS='NEW')
	GO TO 8775
 8770   WRITE(*,9826) PATHFILE
	READ(*,*,ERR=8770) IFILE
	IF(IFILE .NE. 0 .AND. IFILE .NE. 1) GO TO 8770
	IF(IFILE .EQ. 0) GO TO 8780
	IF(IFILE .EQ. 1) OPEN(33,FILE=PATHFILE)
 8775   CONTINUE
      IF(IICODE .EQ. 2) THEN
       NDRUG = -1
       AF(1) = AFSCALAR
      ENDIF
	CALL TOPFIL(NDRUG,AF,NSUB,NVAR,PAR,NOFIX,PARFIX,NRANFIX,
     1 PARRANFIX)
	ENDIF
	IF(IPUT .EQ. 1) THEN
	 IF(ICENTER .EQ. 1) WRITE(31,8512)
 8512   FORMAT(//' ***************************************************'/
     1' ***************************************************'//
     1' THE FOLLOWING PARAMETER ESTIMATES FOR EACH SUBJECT ARE  '/
     1' POSTERIOR ESTIMATES BASED ON THE POPULATION'//
     2' --------------- MEAN ---------------'//
     2' VECTOR AND COVARIANCE MATRIX FROM THE FINAL REGULAR CYCLE.'//)
	 IF(ICENTER .EQ. 2) WRITE(31,8513)
 8513   FORMAT(//' ***************************************************'/
     1' ***************************************************'//
     1' THE FOLLOWING PARAMETER ESTIMATES FOR EACH SUBJECT ARE  '/
     1' POSTERIOR ESTIMATES BASED ON THE POPULATION'//
     2' --------------- MEDIAN ---------------'//
     2' VECTOR AND COVARIANCE MATRIX FROM THE FINAL REGULAR CYCLE.'//)
	ENDIF
	WRITE(*,8502) MNAME
 8502   FORMAT(' ',' FOLLOWING ARE THE MAP BAYESIAN POSTERIOR'/
     1' PARAMETER ESTIMATES FOR EACH SUBJECT, USING THE ',A7,' OF'/
     2' THE FINAL CYCLE POPULATION ANALYSIS AS THE PRIOR: '/)
	WRITE(*,8523) 'SUBJECT','   PROB.      ', (PAR(I),I=1,NVAR)
 8523   FORMAT(1X,A7,2X,A15,2X,30(A11,6X))
 8522   FORMAT(2X,I4,2X,G12.6,5X,30(G12.6,5X))
	ILINES=4
	DO JSUB=1,NSUB
	 ILINES=ILINES+1
	 WRITE(*,8522) JSUB,1.D0/NSUB,(PARBAY(JSUB,ICENTER,J),J=1,NVAR)
	 IF(ILINES .EQ. 20) THEN
	  CALL PAUSE
	  ILINES=0
	 ENDIF
	END DO
	CALL PAUSE
	IF(IPUT .EQ. 1) THEN
	 WRITE(31,8523) 'SUBJECT','   PROB.      ', (PAR(I),I=1,NVAR)
	 DO J=1,NSUB
	  WRITE(31,8522) J,1.D0/NSUB,(PARBAY(J,ICENTER,K),K=1,NVAR)
	 END DO
	ENDIF
	IF(IFILSTR .EQ. 1) THEN
	 DO J=1,NSUB
	  WRITE(33,6113) 1.D0/NSUB,(PARBAY(J,ICENTER,K),K=1,NVAR),
     1   (VALFIX(K),K=1,NOFIX),(RANFIXEST(K),K=1,NRANFIX)
	 END DO
	 CLOSE(33)
	ENDIF
 6113   FORMAT(1X,G13.7,3X,32(G12.6,1X))
 8505   CONTINUE
        WRITE(*,8503) MNAME
 8503   FORMAT(//' ENTER 1 TO CALCULATE THE PREDICTED CONCENTRATION'/
     1'         LEVELS FOR THE ENTIRE POPULATION OF SUBJECTS AS A WHOLE;
     3'/
     5' ENTER 2 TO CALCULATE THE PREDICTED LEVELS FOR A SELECTED'/
     6'         SUBSET OF SUBJECTS;'/
     8' ENTER 3 TO CALCULATE THE PREDICTED LEVELS FOR EACH SUBJECT, IN'/
     4'         TURN;'/
     6' ENTER 4 TO SEE THE MAP BAYESIAN POSTERIOR PARAMETER ESTIMATES'/
     7'         FOR EACH SUBJECT, USING THE ',A7,' OF THE FINAL CYCLE'/
     8'         POPULATION ANALYSIS AS THE PRIOR;'/
     6' ENTER 0 TO RETURN TO THE PREVIOUS MENU:  ')
	READ(*,*,ERR=8505) ISCT
	IF(ISCT .LT. 0 .OR. ISCT .GT. 4) GO TO 8505
	IF(ISCT .EQ. 0) THEN
	 IF(ISAVFIL .EQ. 0) CLOSE(31)
	 GO TO 7185
	ENDIF
	IF(ISCT .EQ. 1) ISCAT = 3
	IF(ISCT .EQ. 3) ISCAT = 1
	IF(ISCT .EQ. 2) ISCAT = 2
	IF(ISCT .EQ. 4) ISCAT = 4
	IF(ISCAT .EQ. 4) THEN
	WRITE(*,8502) MNAME
	WRITE(*,8523) 'SUBJECT','   PROB.      ', (PAR(I),I=1,NVAR)
	ILINES=5
	DO JSUB=1,NSUB
	 ILINES=ILINES+1
	 WRITE(*,8522) JSUB,1.D0/NSUB,(PARBAY(JSUB,ICENTER,J),J=1,NVAR)
	 IF(ILINES .EQ. 20) THEN
	  CALL PAUSE
	  ILINES=0
	 ENDIF
	END DO
	CALL PAUSE
	GO TO 8505
	ENDIF
	REWIND(27)
	IF(ISCAT .EQ. 1) THEN
	DO 4000 JSUB=1,NSUB
	CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	NACTUAL = 0
	DO I=1,NOBSER
	 IF(YO(I,IOUTEQ) .NE. -99.) THEN
	  NACTUAL = NACTUAL + 1
	  YYPRED(NACTUAL) = YPREDBAY(JSUB,IOUTEQ,I,ICENTER)
	  YYJ(NACTUAL) = YO(I,IOUTEQ)
	 ENDIF
	END DO
	C0I = C0(IOUTEQ)
	C1I = C1(IOUTEQ)
	C2I = C2(IOUTEQ)
	C3I = C3(IOUTEQ)
	IF(IPUT .EQ. 1) WRITE(31,8518) IOUTEQ
	G=GAMMA(IOUTEQ)
       CALL SCATPLOT(2,ICENTER,IIOUT,IQUAL,JSUB,IPUT,NACTUAL,YYPRED,YYJ,
     1  G*C0I,G*C1I,G*C2I,G*C3I,AMIN,AMAX,0,1,1.D0)
 4000   CONTINUE
	GO TO 8505
	ENDIF
	IF(ISCAT .EQ. 2) THEN
 8520	WRITE(*,8504)
	READ(*,*,ERR=8520) JSUB
	IF(JSUB .LT. 0 .OR. JSUB .GT. NSUB) GO TO 8520
	IF(JSUB .EQ. 0) GO TO 8505
	REWIND(27)
	IF(JSUB .GT. 1) THEN
	 DO J=1,JSUB-1
	  CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	 END DO
	ENDIF
	CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	NACTUAL = 0
	DO I=1,NOBSER
	 IF(YO(I,IOUTEQ) .NE. -99.) THEN
	  NACTUAL = NACTUAL + 1
	  YYPRED(NACTUAL) = YPREDBAY(JSUB,IOUTEQ,I,ICENTER)
	  YYJ(NACTUAL) = YO(I,IOUTEQ)
	 ENDIF
	END DO
	C0I = C0(IOUTEQ)
	C1I = C1(IOUTEQ)
	C2I = C2(IOUTEQ)
	C3I = C3(IOUTEQ)
	IF(IPUT .EQ. 1) WRITE(31,8518) IOUTEQ
	G=GAMMA(IOUTEQ)
       CALL SCATPLOT(2,ICENTER,IIOUT,IQUAL,JSUB,IPUT,NACTUAL,YYPRED,YYJ,
     1  G*C0I,G*C1I,G*C2I,G*C3I,AMIN,AMAX,0,1,1.D0)
	GO TO 8520
	ENDIF
	IF(ISCAT .EQ. 3) THEN
	JSUBST = 0
	DO 5000 JSUB=1,NSUB
	CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	NACTUAL = 0
	DO I=1,NOBSER
	 IF(YO(I,IOUTEQ) .NE. -99.) THEN
	  NACTUAL = NACTUAL + 1
	  YYPRED(JSUBST+NACTUAL) = YPREDBAY(JSUB,IOUTEQ,I,ICENTER)
	  YYJ(JSUBST+NACTUAL) = YO(I,IOUTEQ)
	 ENDIF
	END DO
	COEFF(JSUB,1) = NACTUAL
	COEFF(JSUB,2) = C0(IOUTEQ)*GAMMA(IOUTEQ)
	COEFF(JSUB,3) = C1(IOUTEQ)*GAMMA(IOUTEQ)
	COEFF(JSUB,4) = C2(IOUTEQ)*GAMMA(IOUTEQ)
	COEFF(JSUB,5) = C3(IOUTEQ)*GAMMA(IOUTEQ)
	JSUBST = JSUBST + NACTUAL
	SERNUM(JSUB)=NACTUAL
 5000   CONTINUE
	CALL CALCSER(MAXSUB,NSUB,SERNUM,MAXSER,MINSER,SERMEN,SERSD)
	IF(IPUT .EQ. 1) WRITE(31,8518) IOUTEQ
	G=GAMMA(IOUTEQ)
 	CALL SCATPLOT(2,ICENTER,IIOUT,IQUAL,-NSUB,IPUT,JSUBST,YYPRED,
     1  YYJ,G*C0I,G*C1I,G*C2I,G*C3I,AMIN,AMAX,0,1,1.D0)
	GO TO 8505
	ENDIF
	ENDIF
	IF(IOPT .EQ. 7) THEN
 6570	WRITE(*,6546)
	READ(*,*,ERR=6570) ISAVFIL
	IF(ISAVFIL .NE. 0 .AND. ISAVFIL .NE. 1) GO TO 6570
	IF(ISAVFIL .EQ. 1) IPUT = 0
	IF(ISAVFIL .EQ. 0) THEN
	IPUT = 1
 7980   WRITE(*,7981)
 7981   FORMAT(/' ENTER THE NAME OF THE OUTPUT FILE TO SAVE ALL THE'/
     1' STATISTICS CALCULATIONS YOU CHOOSE BELOW: ')
	READ(*,1) OUTOPT7
     	TMPFILE = ' '
	TMPFILE = OUTOPT7
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(35,FILE=PATHFILE,ERR=7970,STATUS='NEW')
	GO TO 7975
 7970   WRITE(*,9826) PATHFILE
	READ(*,*,ERR=7970) IFILE
	IF(IFILE .NE. 0 .AND. IFILE .NE. 1) GO TO 7970
	IF(IFILE .EQ. 0) GO TO 7980
	IF(IFILE .EQ. 1) OPEN(35,FILE=PATHFILE)
 7975   CONTINUE
 	CALL DATE_AND_TIME(DATDAY,TIMDAY,ZONEDAY,IDTDAY)
	WRITE(35,*)
	WRITE(35,*)' TODAY IS ',DATDAY,'; THE TIME IS ',TIMDAY
	WRITE(35,*)
	WRITE(35,*)
	ENDIF
 7700   WRITE(*,7676)
 7676   FORMAT(//' FROM THE FOLLOWING LIST OF COVARIATES AND RANDOM'/
     1' VARIABLE NAMES, CHOOSE THE TWO WHOSE STATISTICS ACROSS ALL'/
     2' SUBJECTS YOU WOULD LIKE TO VIEW. ')
	CALL PAUSE
        CALL GETCOVR2(NCOV,DESCR)
 7680	CALL PRNCOVAR(NCOV,DESCR,NVAR,PAR,ClearScreen)
 7685	WRITE(*,7679)
 7679   FORMAT(//' FROM THE ABOVE LIST OF COVARIATES AND RANDOM'/
     1' VARIABLE NAMES, CHOOSE THE TWO WHOSE STATISTICS (ACROSS ALL'/
     2' SUBJECTS) YOU WOULD LIKE TO VIEW. '//
     3' ENTER THE TWO INDICES NOW (OR "AGAIN" TO SEE THE ABOVE LIST OF'/
     4' COVARIATES AND RANDOM VARIABLES AGAIN): ')
 	READ(*,*,ERR=7680) IND1,IND2
	NCV = NCOV + NVAR
	IF(IND1 .LT. 1 .OR. IND2 .LT. 1 .OR. IND1 .GT. NCV .OR. IND2
     1     .GT. NCV) GO TO 7680
	IF(IND1 .LE. NCOV .OR. IND2 .LE. NCOV) THEN
	 IF(ICOVHAVE .EQ. 0) THEN
	  WRITE(*,6502)
 6502     FORMAT(//' STORING MEAN COVARIATE VALUES FOR EACH SUBJECT ...
     1')
	  REWIND(27)
	  DO JSUB = 1,NSUB
	   CALL GETCOVAL(NUMEQT,JSUB,COVAL,NCOV)
	  END DO
	  ICOVHAVE = 1
	 ENDIF
	ENDIF
	IF(IND1 .GT. NCOV .OR. IND2 .GT. NCOV) THEN
 8550   WRITE(*,8551)
 8551   FORMAT(//' THE PARAMETER VALUE FOR EACH SUBJECT WILL BE THE'/
     1' FINAL MAP BAYESIAN ESTIMATE, GIVEN EITHER THE MEAN OR THE '/
     2' MEDIAN OF THE FINAL CYCLE AS THE POPULATION PRIOR ESTIMATE.'//
     4' ENTER 1 TO USE THE MEAN; '/
     5' ENTER 2 TO USE THE MEDIAN: ')
	READ(*,*,ERR=8550) ICENTER
	IF(ICENTER .NE. 1 .AND. ICENTER .NE. 2) GO TO 8550
	IF(ICENTER .EQ. 1) MNAME = 'MEANS'
	IF(ICENTER .EQ. 2) MNAME = 'MEDIANS'
	ENDIF
 6510	WRITE(*,6503)
 6503   FORMAT(//' THE STATISTICS WILL INCLUDE 95% CONFIDENCE LINES.'//
     1' ENTER 1 TO MAKE THESE STATISTICS FOR THE EXPECTED VALUE OF Y GIV
     2EN X;'/
     3' ENTER 0 TO MAKE THESE STATISTICS FOR AN ADDITIONAL VALUE OF Y GI
     4VEN X: ')
	READ(*,*,ERR= 6510) ICONF
	IF(ICONF .NE. 0 .AND. ICONF .NE. 1) GO TO 6510
	XLABEL2 = '          '
	YLABEL2 = '          '
	IF(IND1 .LE. NCOV) THEN
	 DO JSUB = 1,NSUB
	  XCOV(JSUB) = COVAL(JSUB,IND1)
	  XLABEL = DESCR(IND1)
	 END DO
	ENDIF
	IF(IND1 .GT. NCOV) THEN
	 DO JSUB = 1,NSUB
	  XCOV(JSUB) = PARBAY(JSUB,ICENTER,IND1-NCOV)
	  XLABEL = PAR(IND1-NCOV)
	  XLABEL2 = MNAME//' OF'
	 END DO
	ENDIF
	IF(IND2 .LE. NCOV) THEN
	 DO JSUB = 1,NSUB
	  YCOV(JSUB) = COVAL(JSUB,IND2)
	  YLABEL = DESCR(IND2)
	 END DO
	ENDIF
	IF(IND2 .GT. NCOV) THEN
	 DO JSUB = 1,NSUB
	  YCOV(JSUB) = PARBAY(JSUB,ICENTER,IND2-NCOV)
	  YLABEL = PAR(IND2-NCOV)
	  YLABEL2 = MNAME//' OF'
	 END DO
	ENDIF
	ILOWER = 1
 7990	CALL SCATGRAM(IIOUT,IQUAL,NSUB,XLABEL,YLABEL,XLABEL2,YLABEL2,
     1  XCOV,YCOV,ILOWER,ICONF,IPUT)
 7785	WRITE(*,7891)
 7891   FORMAT(/' ENTER 1 TO SEE THE STATISTICS OF ONE DESCRIPTOR'/
     2'         OR RANDOM VARIABLE VS. ANY OTHER;'/
     3' ENTER 0 OTHERWISE: ')
	READ(*,*,ERR=7785) IAGAIN
	IF(IAGAIN .NE. 0 .AND. IAGAIN .NE. 1) GO TO 7785
	IF(IAGAIN .EQ. 1) GO TO 7700
	IF(IAGAIN .EQ. 0) THEN
	 IF(ISAVFIL .EQ. 0) CLOSE(35)
	 GO TO 7185
	ENDIF
	ENDIF
	RETURN
	END
	SUBROUTINE PRNLAST
	CHARACTER READLINE*144
    2   FORMAT(A144)
   90	BACKSPACE(25)
	BACKSPACE(25)
	READ(25,2) READLINE
	IF(READLINE(2:17) .NE. 'ITERATION NUMBER') GO TO 90
	BACKSPACE(25)
	ILINES=0
   80   READ(25,2,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) GO TO 100
	IEXT = 0
	DO I=73,144
	 IF(READLINE(I:I) .NE. ' ') IEXT = 1
	END DO
	IF(IEXT .EQ. 0) WRITE(*,11) READLINE(1:72)
	IF(IEXT .EQ. 1) WRITE(*,111) READLINE
   11   FORMAT(' ',A72)
  111   FORMAT(' ',A144)
	ILINES=ILINES+1
	IF(ILINES .EQ. 20) THEN
	 ILINES=0
  110	 WRITE(*,101)
  101    FORMAT(' ENTER 1 TO CONTINUE PRINTING THE LAST CYCLE INFO; '/
     1' ENTER 0 TO RETURN TO THE PREVIOUS MENU: ')
 	 READ(*,*,ERR=110) ICONT
	 IF(ICONT .NE. 0 .AND. ICONT .NE. 1) GO TO 110
	 IF(ICONT .EQ. 0) RETURN
	ENDIF
	GO TO 80
  100   CONTINUE
	RETURN
	END
	SUBROUTINE SEEDIR(PATH,NOB,FILENAME,OSName,ListDir)
	CHARACTER FILENAME*20,PATH*60,PRTDIR*47,TEMP*72,PRTDIR2*47,
     1  OSName*20,ListDir*10
   10	PRTDIR = ' '
        IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
          WRITE(*,7)
        ELSE IF (INDEX(OSName,"DOS",.TRUE.).eq.1) THEN
          WRITE(*,6)
        END IF
    7   FORMAT(/' Press the ENTER key to call system(ls -t). '//
     1' Or type a partial filename (use the * wildcard) to call '/
     2'       system(ls -t arg_1), '/
     3'       e.g., type "to*.f ENTER" to see a list of all files '/
     4'       that begin with "to" and have a .f suffix. '//
     5' ENTER YOUR CHOICE NOW: ')
    6   FORMAT(/' PRESS THE ENTER KEY TO SEE YOUR ENTIRE DIRECTORY;'//
     1' ENTER A PARTIAL FILENAME (WITH THE * WILDCARD) TO SEE A '/
     2'       PARTICULAR SUBSET OF FILENAMES IN YOUR DIRECTORY. '/
     3'       e.g., ENTER  "TO*.INS TO SEE A LIST OF ALL FILES WHICH'/
     4'       BEGIN WITH "TO" AND HAVE A .INS SUFFIX '//
     5' NOTE THAT THE FILES WILL AUTOMATICALLY BE TIME-ORDERED FROM '/
     6' OLDEST TO NEWEST.'//
     7' ENTER YOUR CHOICE NOW: ')
	READ(*,1) PRTDIR
    1   FORMAT(A47)
        IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
           IF (PRTDIR .EQ. ' ') THEN
             TEMP = ListDir//PATH(1:NOB)
           ENDIF
        ELSE IF (INDEX(OSName,"DOS",.TRUE.).eq.1) THEN
           IF (PRTDIR .EQ. ' ') THEN
             TEMP = ListDir//PATH(1:NOB)//' |MORE'
           ENDIF
        ENDIF
	IF (PRTDIR .NE. ' ') THEN
	 PRTDIR2 = ' '
	 J = 0
	 DO I=1,47
	  IF (PRTDIR(I:I) .NE. ' ') THEN
	   J = J+1
	   PRTDIR2(J:J) = PRTDIR(I:I)
	  ENDIF
	 END DO
         IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
           TEMP = ListDir//PATH(1:NOB)//PRTDIR2(1:J)
         ELSE IF (INDEX(OSName,"DOS",.TRUE.).eq.1) THEN
           TEMP = ListDir//PATH(1:NOB)//PRTDIR2(1:J)//' |MORE'
         ENDIF
	ENDIF
        CALL SYSTEM(TEMP)
     	WRITE(*,3)
    3   FORMAT(/' ENTER THE NAME OF THE DESIRED FILE (WITHOUT THE PATH);
     1'/
     2' ENTER -99 TO ENTER A DIFFERENT FILE SPECIFICATION: ')
	READ(*,2) FILENAME
    2   FORMAT(A20)
	IF(FILENAME(1:3) .EQ. '-99') GO TO 10
	RETURN
	END
       SUBROUTINE CALCSER(MAXSUB,NSUB,SERNUM,MAXSER,MINSER,SERMEN,SERSD)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION SERNUM(MAXSUB)
	SUM=0.D0
	SUMSQ=0.D0
	MINSER = SERNUM(1)
	MAXSER = SERNUM(1)
	  DO J=1,NSUB
	    SUM = SUM + SERNUM(J)
	    SUMSQ = SUMSQ + SERNUM(J)*SERNUM(J)
	    IF(SERNUM(J) .GT. MAXSER) MAXSER=SERNUM(J)
	    IF(SERNUM(J) .LT. MINSER) MINSER=SERNUM(J)
	  END DO
	SERMEN = SUM/NSUB
	IF(NSUB .EQ. 1) THEN
	  WRITE(*,*)' THE NO. OF OBSER = 1; NO S.D. CAN BE FOUND.'
	  SERSD=-999.
	  RETURN
	ENDIF
	VAR = (SUMSQ - NSUB*SERMEN*SERMEN)/(NSUB-1.D0)
	SERSD = DSQRT(VAR)
	RETURN
	END
        SUBROUTINE PUTASS(PATHFILE,IASS,C0P,C1P,C2P,C3P,NUMEQT,GENCOEF,
     1  NCSTORE,MAXNUMEQ)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION IASS(MAXNUMEQ),C0P(MAXNUMEQ),C1P(MAXNUMEQ),
     1 C2P(MAXNUMEQ),C3P(MAXNUMEQ),GENCOEF(MAXNUMEQ,5,4),
     2 NCSTORE(MAXNUMEQ)
        CHARACTER PATHFILE*73,READLINE*1000,ERRFIL*20
      COMMON/ERROR/ERRFIL
    3   FORMAT(A1000)
	OPEN(21,FILE=PATHFILE,STATUS='OLD')
    5	READ(21,3,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) THEN
	 WRITE(*,56) PATHFILE
   56    FORMAT(//' PATIENT FILE '/
     1'    ',A73/
     2' IS NOT AN ACCEPTABLE WORKING COPY FILE. SUCH A FILE MUST HAVE '/
     2' "ASSAY COEFFICIENTS ... " NEAR THE BOTTOM OF THE FILE.'//
     3' THE PROGRAM STOPS. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,56) PATHFILE
        CLOSE(42)
       CALL PAUSE
	 STOP
	ENDIF
	IF(READLINE(1:9) .NE. 'ASSAY COE') GO TO 5
	IF(READLINE(20:25) .EQ. 'FOLLOW' ) ICOFF = 1
	IF(READLINE(20:25) .NE. 'FOLLOW' ) ICOFF = 0
	OPEN(27,STATUS='SCRATCH')
	REWIND(21)
   10	READ(21,3,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0 .OR. READLINE(1:5) .EQ. 'ASSAY' ) GO TO 25
	WRITE(27,3) READLINE
	GO TO 10
   25 READLINE = 'ASSAY COEFFICIENTS FOLLOW, ONE SET FOR EACH OUTPUT EQU
     1ATION:'
        WRITE(27,3) READLINE
	IF(ICOFF .EQ. 0) THEN
	DO IEQ = 1,NUMEQT
	IF(IASS(IEQ) .EQ. 1 .OR. IASS(IEQ) .EQ. 2) WRITE(27,16)
     1  C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
   16    FORMAT(4(F16.8,2X))
	IF(IASS(IEQ) .EQ. 0) THEN
   20	WRITE(*,18) PATHFILE,IEQ
   18   FORMAT(///' ****************************************************
     1********************'/
     1' PATIENT FILE ',A73/
     2' CURRENTLY HAS NO ASSAY COEFFICIENTS. FOR OUTPUT EQUATION ',I2,/
     3' THE GENERAL ASSAY COEFFICIENTS ARE: ')
	WRITE(*,16) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	WRITE(*,19)
   19   FORMAT(/' ENTER 1 TO USE THESE GENERAL COEFFICIENTS;'/
     1' ENTER 0 TO USE A DIFFERENT SET OF VALUES:  ')
	READ(*,*,ERR=20) IUSE
	IF(IUSE .NE. 0 .AND. IUSE .NE. 1) GO TO 20
	IF(IUSE .EQ. 1) WRITE(27,16) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	IF(IUSE .EQ. 0) THEN
	 CALL USECS(IEQ,NCSTORE,GENCOEF,C0,C1,C2,C3,MAXNUMEQ)
	 WRITE(27,16) C0,C1,C2,C3
	ENDIF
	ENDIF
	END DO
	ENDIF
	IF(ICOFF .EQ. 1) THEN
	 DO IEQ = 1,NUMEQT
	READ(21,*) C0,C1,C2,C3
	IF(IASS(IEQ) .EQ. 1) WRITE(27,16) C0,C1,C2,C3
	IF(IASS(IEQ) .EQ. 2) WRITE(27,16) C0P(IEQ),C1P(IEQ),C2P(IEQ),
     1  C3P(IEQ)
	IF(IASS(IEQ) .EQ. 0) THEN
   40	 WRITE(*,28) PATHFILE,IEQ
   28   FORMAT(///' ****************************************************
     1********************'/
     1' FOR PATIENT FILE ',A73/
     2' AND OUTPUT EQUATION ',I2,' THE CURRENT COEFFICIENTS ARE: ')
	 WRITE(*,16) C0,C1,C2,C3
	 WRITE(*,29)
   29    FORMAT(/' ... AND THE GENERAL COEFFICIENTS ARE: ')
	 WRITE(*,16) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	 WRITE(*,31)
   31    FORMAT(/' ENTER 1 TO CONTINUE USING THE CURRENT COEFFICIENTS;'/
     2' ENTER 2 TO USE THE GENERAL COEFFICIENTS;'/
     3' ENTER 0 TO USE A DIFFERENT SET OF VALUES:  ')
	READ(*,*,ERR=40) IUSE
	IF(IUSE .NE. 0 .AND. IUSE .NE. 1 .AND. IUSE .NE. 2) GO TO 40
	IF(IUSE .EQ. 1) WRITE(27,16) C0,C1,C2,C3
	IF(IUSE .EQ. 2) WRITE(27,16) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	IF(IUSE .EQ. 0) THEN
	 CALL USECS(IEQ,NCSTORE,GENCOEF,C0,C1,C2,C3,MAXNUMEQ)
	 WRITE(27,16) C0,C1,C2,C3
	ENDIF
	ENDIF
	END DO
	ENDIF
	CLOSE(21)
        OPEN(21,FILE=PATHFILE)
	REWIND(27)
   60	READ(27,3,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) THEN
	 CLOSE(27)
         CLOSE(21)
	 RETURN
	ENDIF
	WRITE(21,3) READLINE
	GO TO 60
	END
        SUBROUTINE USERPREP(NDIM,NP,NVAR,MAXDIM,PAR,NOFIX,PARFIX,
     1   NRANFIX,PARRANFIX,IRAN)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION IRAN(32)
      CHARACTER PAR(30)*11,PARFIX(20)*11,READLINE*1000,
     1 PSYM(32)*11,RR*2,TEMP*11,C*1,ERRFIL*20,PARRANFIX(20)*11
      COMMON/ERROR/ERRFIL
    2   FORMAT(A1000)
   30	BACKSPACE(28)
	BACKSPACE(28)
	READ(28,2) READLINE
	IF(READLINE(8:9) .NE. 'N=') GO TO 30
	BACKSPACE(28)
	READ(28,3) NDIM
    3 FORMAT(T10,I3)
   40	READ(28,2) READLINE
	IF(READLINE(8:9) .NE. 'NP') GO TO 40
	BACKSPACE(28)
	READ(28,4) NP
    4   FORMAT(T11,I3)
   50	READ(28,2) READLINE
	IF(READLINE(8:11) .NE. 'PSYM') GO TO 50
	BACKSPACE(28)
	DO 70 I=1,NP
	IF(I .LE. 9) READ(28,14) TEMP
	IF(I .GE. 10 .AND. I .LE. 99) READ(28,6) TEMP
	C = ''''
	PSYM(I) = TEMP
	DO J=1,11
	 IF(TEMP(J:J) .EQ. C) THEN
	  PSYM(I) = TEMP(1:J-1)
	  GO TO 70
	 ENDIF
	END DO
   70   CONTINUE
   14   FORMAT(T17,A11)
    6   FORMAT(T18,A11)
   80	WRITE(*,7) NP
    7   FORMAT(/' FOR EACH OF THE ',I2,' PARAMETERS, '//
     1' ENTER "R" (OR "r") IF IT IS TO BE A RANDOM VARIABLE WHICH'/
     2'           WILL NOT BE ALLOWED TO BE NEGATIVE;'/
     3'       "-R" (OR "-r") IF IT IS TO BE A RANDOM VARIABLE WHICH'/
     4'           WILL BE ALLOWED TO BE NEGATIVE;'/
     5' ENTER "F" IF IT IS TO BE A FIXED PARAMETER;'/
     6' ENTER "U" IF IT IS TO BE A FIXED BUT UNKNOWN PARAMETER'/
     7'           TO BE ESTIMATED.'//)
      NVAR = 0
      NOFIX = 0
      NRANFIX = 0
	DO I=1,NP
   8   FORMAT(1X,A11,':  ')
   60	 WRITE(*,8) PSYM(I)
       READ(*,9) RR
    9  FORMAT(A2)
       IF(RR(1:1) .NE. 'R' .AND. RR(1:1) .NE. 'r' .AND.
     1  RR .NE. '-R' .AND. RR .NE. '-r' .AND.
     2  RR(1:1) .NE. 'F' .AND. RR(1:1) .NE. 'f' .AND.
     3  RR(1:1) .NE. 'U' .AND. RR(1:1) .NE. 'u') GO TO 60
      IF(RR(1:1) .EQ. 'R' .OR. RR(1:1) .EQ. 'r'
     1 .OR. RR .EQ. '-R' .OR. RR .EQ. '-r') THEN
       NVAR = NVAR+1
       IF(NVAR .GT. MAXDIM) GO TO 110
       PAR(NVAR) = PSYM(I)
       IF(RR(1:1) .EQ. 'R' .OR. RR(1:1) .EQ. 'r') IRAN(I) = 1
       IF(RR .EQ. '-R' .OR. RR .EQ. '-r') IRAN(I) = -1
      ENDIF
      IF(RR(1:1) .EQ. 'F' .OR. RR(1:1) .EQ. 'f') THEN
       NOFIX = NOFIX+1
       PARFIX(NOFIX) = PSYM(I)
       IRAN(I) = 0
      ENDIF
      IF(RR(1:1) .EQ. 'U' .OR. RR(1:1) .EQ. 'u') THEN
       NRANFIX = NRANFIX+1
       PARRANFIX(NRANFIX) = PSYM(I)
       IRAN(I) = 2
      ENDIF
	END DO
  110	IF(NVAR .GT. MAXDIM) THEN
	 WRITE(*,111) NVAR,MAXDIM
  111    FORMAT(//' YOU HAVE SELECTED ',I2,' PARAMETERS TO BE RANDOM'/
     1' VARIABLES. THE LIMIT IS CURRENTLY ',I2,'. PLEASE RESELECT YOUR'/
     2' RANDOM VARIABLES WITH THIS LIMIT IN MIND.'//)
	 GO TO 80
	ENDIF
	IF(NOFIX .GT. 20) THEN
	 WRITE(*,112) NOFIX
  112    FORMAT(//' YOU HAVE SELECTED ',I2,' PARAMETERS TO BE FIXED'/
     1' PARAMETERS. THE LIMIT IS CURRENTLY 20. PLEASE RESELECT YOUR'/
     2' RANDOM VARIABLES WITH THIS LIMIT IN MIND.'//)
	 GO TO 80
	ENDIF
      IF(NRANFIX .GT. 20) THEN
       WRITE(*,114) NRANFIX
  114  FORMAT(//' YOU HAVE SELECTED ',I2,' PARAMETERS TO BE FIXED'/
     1' BUT UNKNOWN PARAMETERS. THE LIMIT IS CURRENTLY 20. PLEASE'/
     2' RESPECIFY YOUR PARAMETERS WITH THIS LIMIT IN MIND.'//)
       GO TO 80
	ENDIF
	IF(NVAR + NOFIX + NRANFIX .GT. 32) THEN
	 WRITE(*,113) NVAR + NOFIX + NRANFIX
  113    FORMAT(//' YOUR MODEL FILE HAS A TOTAL OF ',I2,' PARAMETERS.'/
     1' THE LIMIT IS CURRENTLY 32. PLEASE EDIT YOUR MODEL FILE SO '/
     2' THAT IT HAS .LE. 32 PARAMETERS. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,113) NVAR + NOFIX
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	RETURN
	END
	SUBROUTINE MAKEDRIV(PATH,NOB,IRUNIT,FORFILE,MAXSUB,MAXDIM,
     1  MAXGRD,NUMEQT,MAXOBDIM,OSName,CopyFile,DeleteFile,IVERIFY)
	IMPLICIT REAL*8(A-H,O-Z)
	CHARACTER FORFILE*20,PATH*60,TMPFILE*13,PATHFILE*73,
     1  OSName*20,CopyFile*5,DeleteFile*4
	IF(IRUNIT .EQ. 1) THEN
      TMPFILE = ' '
	TMPFILE = 'it2bdriv.f'
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(31,FILE=PATHFILE,ERR=5475,STATUS='NEW')
	GO TO 5480
 5475   WRITE(*,*)' FILE   it2bdriv.f ALREADY EXISTS. IT WILL BE'
	WRITE(*,*)' COPIED TO   it2bdriv.bak.   THEN THE it2bdriv.f'
  	WRITE(*,*)' FOR THIS RUN WILL BE CREATED; IT MUST BE '
	WRITE(*,*)' UPLOADED -- SEE BELOW.'
      IF(IVERIFY .EQ. 1) CALL PAUSE
        CALL SYSTEM(CopyFile//PATH(1:NOB)//'it2bdriv.f '//PATH(1:NOB)//'
     1it2bdriv.bak')
	OPEN(31,FILE=PATHFILE)
 5480   WRITE(31,5)
    5   FORMAT(/'      IMPLICIT REAL*8(A-H,O-Z)')
        WRITE(31,1) MAXSUB,MAXDIM,MAXGRD,NUMEQT,MAXOBDIM
    1   FORMAT(/'      PARAMETER(MAXSUB = ',I4,', MAXDIM = ',I2,','/
     1'     1  MAXGRD = ',I9,',NUMEQT = ',I2,', MAXOBDIM = ',I5,')')
	WRITE(31,2)
    2   FORMAT(/'      DIMENSION PAREST(MAXSUB,MAXDIM),'/
     1'     1  IESTIJ(MAXSUB,MAXDIM),IREPRT(MAXSUB),WORK(MAXGRD),'/
     2'     2  CORDEN(MAXGRD,MAXDIM+1),VEC(MAXSUB),PXGEE(MAXGRD),'/
     2'     2  SPXGYJ(MAXGRD),YPREDPOP(MAXSUB,NUMEQT,MAXOBDIM,2),'/
     3'     3  YPREDBAY(MAXSUB,NUMEQT,MAXOBDIM,2),'/
     4'     4  PARBAY(MAXSUB,2,MAXDIM)')
	WRITE(31,3)
    3   FORMAT(/'      CALL IT2B(MAXSUB,MAXDIM,MAXGRD,NUMEQT,'/
     1'     1  MAXOBDIM,PAREST,IESTIJ,IREPRT,WORK,CORDEN,PXGEE,SPXGYJ,'/
     2'     2  YPREDPOP,YPREDBAY,PARBAY,VEC)')
	WRITE(31,4)
    4   FORMAT(/'      STOP'/
     1'      END'/
     2'C'/
     3'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC'/
     4'C'/)
	CLOSE(31)
        IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
          CALL SYSTEM('cat '//PATH(1:NOB)//'it2bdriv.f  '//
     1       PATH(1:NOB)//FORFILE//' >it2b.tmp;mv it2b.tmp it2bdriv.f')
        ELSE IF (INDEX(OSName,"DOS",.TRUE.).eq.1) THEN
          CALL SYSTEM(CopyFile//PATH(1:NOB)//'it2bdriv.f + '
     1      //PATH(1:NOB)//FORFILE//'  '//PATH(1:NOB)//'JUNKTRASH')
        CALL SYSTEM(CopyFile//PATH(1:NOB)//'JUNKTRASH  '
     1        //PATH(1:NOB)//'it2bdriv.f' )
        CALL SYSTEM(' DEL ' //PATH(1:NOB)//'JUNKTRASH')
        ENDIF
	ENDIF
	IF(IRUNIT .EQ. 0) THEN
      TMPFILE = ' '
	TMPFILE = 'assdriv.f'
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(31,FILE=PATHFILE,ERR=6475,STATUS='NEW')
	GO TO 6480
 6475   WRITE(*,*)' FILE   assdriv.f ALREADY EXISTS. IT WILL BE'
	WRITE(*,*)' COPIED TO   assdriv.bak.   THEN THE assdriv.f'
  	WRITE(*,*)' FOR THIS RUN WILL BE CREATED; IT MUST BE '
	WRITE(*,*)' UPLOADED -- SEE BELOW.'
	IF(IVERIFY .EQ. 1) CALL PAUSE
        CALL SYSTEM(CopyFile//PATH(1:NOB)//'assdriv.f '//PATH(1:NOB)//'a
     1ssdriv.bak')
	OPEN(31,FILE=PATHFILE)
 6480   WRITE(31,15)
   15   FORMAT(/'      IMPLICIT REAL*8(A-H,O-Z)')
        WRITE(31,11) MAXSUB,MAXDIM,NUMEQT
   11   FORMAT(/'      PARAMETER(MAXSUB = ',I4,', MAXDIM = ',I2,','/
     1'     1  NUMEQT = ',I2,')')
	WRITE(31,12)
   12   FORMAT(/'      DIMENSION PAREST(MAXSUB,MAXDIM),IESTIJ(MAXSUB,MAX
     1DIM)')
	WRITE(31,13)
   13  FORMAT(/'      CALL ASSCALC(MAXSUB,MAXDIM,NUMEQT,PAREST,IESTIJ)')
	WRITE(31,14)
   14   FORMAT(/'      STOP'/
     1'      END'/
     2'C'/
     3'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC'/
     4'C'/)
	CLOSE(31)
        IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
          CALL SYSTEM('cat '//PATH(1:NOB)//'assdriv.f  '//
     1       PATH(1:NOB)//FORFILE//' >ass.tmp;mv ass.tmp assdriv.f')
        ELSE IF (INDEX(OSName,"DOS",.TRUE.).eq.1) THEN
          CALL SYSTEM(CopyFile//PATH(1:NOB)//'assdriv.f + '//
     1       PATH(1:NOB)//FORFILE//'  '//PATH(1:NOB)//'JUNKTRASH')
          CALL SYSTEM(CopyFile//PATH(1:NOB)//'JUNKTRASH  '
     1        //PATH(1:NOB)//'assdriv.f' )
        CALL SYSTEM(' DEL ' //PATH(1:NOB)//'JUNKTRASH')
        ENDIF
        ENDIF
	RETURN
	END
	SUBROUTINE TOPFIL(NDRUG,AF,NSUB,NVAR,PAR,NOFIX,PARFIX,NRANFIX,
     1 PARRANFIX)
	IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION AF(7)
	CHARACTER PAR(30)*11,PARFIX(20)*11,PARRANFIX(20)*11
        IF(NDRUG .EQ. -1) WRITE(33,1) AF(1)
    1   FORMAT(/' ALL DRUGS IN THE ANALYSIS HAD THE SAME AF, ',G12.6)
        IF(NDRUG .NE. -1) THEN
         WRITE(33,6) NDRUG
    6    FORMAT(/' THE AF VALUES FOR THE ',I2,' DRUG(S) FOLLOW, ONE TO'/
     1' A LINE: ')
         DO I = 1,NDRUG
          WRITE(33,*) AF(I)
         END DO
        ENDIF
        WRITE(33,7) NVAR
    7   FORMAT(/' THERE ARE ',I2,' RANDOM VARIABLES. THEIR NAMES ARE: ')
        DO I=1,NVAR
         WRITE(33,2) PAR(I)
        END DO
    2   FORMAT(3X,A11)
	WRITE(33,3) NOFIX
    3   FORMAT(/' THE NUMBER OF FIXED PARAMETER(S) IS ',I2,/
     1' ITS (THEIR) NAME(S) IS (ARE): ')
	DO I=1,NOFIX
	 WRITE(33,2) PARFIX(I)
	END DO
	WRITE(33,8) NRANFIX
    8 FORMAT(/' THE NUMBER OF RANFIX PARAMETER(S) IS ',I2,/
     1' ITS (THEIR) NAME(S) IS (ARE): ')
	DO I=1,NRANFIX
	 WRITE(33,2) PARRANFIX(I)
	END DO
	WRITE(33,4) NSUB
    4   FORMAT(/' EACH OF THE FOLLOWING ',I4,' LINES GIVES THE VALUES'/
     1' FOR ONE SUBJECT ... PROB., RANDOM VALUES, FIXED VALUES, AND '/
     2' RANFIX ESTIMATES, IN ORDER: ')
	RETURN
	END
	SUBROUTINE GETNUMEQ(PATH,NOB,ICALL,IFORMT,PREFIX,EXT,BLOCKPAT,
     1   NUMEQT,NDRUG,MAXSUB,MAXNUMEQ)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION C0P(MAXNUMEQ),C1P(MAXNUMEQ),C2P(MAXNUMEQ),C3P(MAXNUMEQ)
	CHARACTER PREFIX*5,EXT*3,READLINE*1000,PATNEW*20,PATH*60,
     1   TMPFILE*13,PATHFIL2*73,BLOCKPAT*20,CODEPAT*15,ERRFIL*20
      COMMON/ERROR/ERRFIL
    2   FORMAT(A20)
	IF(ICALL .EQ. 1) THEN
        IF(IFORMT .EQ. 1) WRITE(*,4)
    4   FORMAT(//' ONE OF YOUR PATIENT FILES WILL NOW BE OPENED TO'/
     1' READ THE NUMBER OF OUTPUT EQUATIONS, AND THE NUMBER OF DRUGS.'/
     2' LATER, YOU WILL HAVE THE OPTION TO CHANGE YOUR PATIENT '/
     3' FILENAMES. IF YOU DO THIS, MAKE SURE THAT THE NEW SET OF FILES'/
     4' HAVE THE SAME NUMBER OF OUTPUT EQUATIONS AND THE SAME NUMBER'/
     5' OF DRUGS.'//)
	 IF(IFORMT .EQ. 3) WRITE(*,14) BLOCKPAT
   14    FORMAT(//' YOUR BLOCK FORMAT PATIENT FILE, ',A20,' WILL NOW'/
     1' BE OPENED TO READ THE NUMBER OF OUTPUT EQUATIONS, AND THE '/
     2' NUMBER OF DRUGS. LATER YOU WILL HAVE THE OPTION TO CHANGE THE'/
     3' PATIENT INFORMATION. IF YOU DO THIS, MAKE SURE THAT THE NEW'/
     4' PATIENT INFORMATION HAS THE SAME NUMBER OF OUTPUT EQUATIONS'/
     5' AND THE SAME NUMBER OF DRUGS.'//)
	ENDIF
	IF(IFORMT .EQ. 1) THEN
	 PATNEW=PREFIX//'001'//'.'//EXT
       TMPFILE = ' '
	 TMPFILE = PATNEW
	 CALL FULLNAME(PATH,TMPFILE,PATHFIL2)
	 OPEN(21,FILE=PATHFIL2)
    3    FORMAT(A1000)
   35	 READ(21,3,IOSTAT=IEND) READLINE
        IF(IEND .LT. 0) THEN
         WRITE(*,58) PATHFIL2
   58    FORMAT(//' PATIENT FILE '/
     1'    ',A73/
     2' IS NOT AN ACCEPTABLE WORKING COPY FILE. SUCH A FILE MUST HAVE '/
     2' A LINE WITH "NO. OF DRUGS" IN COLUMNS 12:23.'//
     3' THE PROGRAM STOPS. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,58) PATHFIL2
        CLOSE(42)
         CALL PAUSE
         STOP
        ENDIF
        IF(READLINE(12:23) .NE. 'NO. OF DRUGS') GO TO 35
        BACKSPACE(21)
   13   FORMAT(T2,I5)
        READ(21,13) NDRUG
   45	  READ(21,3,IOSTAT=IEND) READLINE
        IF(IEND .LT. 0) THEN
         WRITE(*,57) PATHFIL2
   57    FORMAT(//' PATIENT FILE '/
     1'    ',A73/
     2' IS NOT AN ACCEPTABLE WORKING COPY FILE. SUCH A FILE MUST HAVE '/
     2' A LINE WITH "NO. OF TOTAL OUTPUT EQUATIONS" IN COLUMNS 12:40.'//
     3' THE PROGRAM STOPS. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,57) PATHFIL2
        CLOSE(42)
         CALL PAUSE
         STOP
        ENDIF
        IF(READLINE(12:40) .NE. 'NO. OF TOTAL OUTPUT EQUATIONS')
     1   GO TO 45
        BACKSPACE(21)
        READ(21,13) NUMEQT
        CLOSE(21)
        ENDIF
	IF(IFORMT .EQ. 3) THEN
       TMPFILE = ' '
	 TMPFILE = BLOCKPAT
	 CALL FULLNAME(PATH,TMPFILE,PATHFIL2)
	 OPEN(87,FILE=PATHFIL2,STATUS='OLD')
       CALL CONVERTCSV
	 ICODEPAT = 0
 7126  FORMAT(A15)
	 READ(77,7126) CODEPAT
	 IF(CODEPAT .EQ. '"POPDATA APR_11') ICODEPAT = 1
	 IF(CODEPAT(1:14) .EQ. 'POPDATA APR_11') ICODEPAT = 1
       IF(CODEPAT .EQ. '"POPDATA DEC_11') ICODEPAT = 1
       IF(CODEPAT(1:14) .EQ. 'POPDATA DEC_11') ICODEPAT = 1
	 IF(ICODEPAT .EQ. 0) THEN
	  WRITE(*,3131)
 3131     FORMAT(//' YOUR PATIENT DATA BLOCK FORMAT FILE IS NOT FROM '/
     1' THE ALLOWABLE SET OF SUCH FILES.'//
     2' A PATIENT DATA BLOCK FORMAT FILE MUST HAVE "POPDATA XXX_XX IN'/
     3' COLUMNS 1 THROUGH 15 ON LINE 1, WHERE  XXX_XX  IS APR_11 OR A '/
     4' MORE RECENT DATE.'//)
	  WRITE(*,*)' THE PROGRAM STOPS.'
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3131)
         WRITE(42,*)' THE PROGRAM STOPS.'
        CLOSE(42)
	  CALL PAUSE
	  STOP
 	 ENDIF
       OPEN(67)
       REWIND(77)
       CALL NEWCSV
       CALL CSVCHANGE
       REWIND(66)
       CALL READBLOCK(2,NSUBR,MAXSUB,NUMEQT,NDRUG,PATH,C0P,C1P,C2P,C3P,
     1  MAXNUMEQ)
	 CLOSE(66)
	ENDIF
	RETURN
	END
	SUBROUTINE USECS(IEQ,NCSTORE,GENCOEF,C0,C1,C2,C3,MAXNUMEQ)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION GENCOEF(MAXNUMEQ,5,4),NCSTORE(MAXNUMEQ)
	IF(NCSTORE(IEQ) .EQ. 0) IOLD = 0
	IF(NCSTORE(IEQ) .GT. 0) THEN
   35	 WRITE(*,24)
   24    FORMAT(' YOU MAY USE A PREVIOUSLY STORED SET OF COEFFICIENTS'/
     1' OR YOU MAY ENTER ANOTHER SET NOW.'/)
	  DO I=1,NCSTORE(IEQ)
	   WRITE(*,23) I, (GENCOEF(IEQ,I,J),J=1,4)
	  END DO
   23    FORMAT(' ','ENTER ',I1,' TO USE: ',4(G12.6,1X))
	 WRITE(*,26)
   26    FORMAT(/' ENTER 0 TO ENTER A NEW SET OF COEFFICIENTS: ')
	 READ(*,*,ERR=35) IOLD
	 IF(IOLD .LT. 0 .OR. IOLD .GT. NCSTORE(IEQ)) GO TO 35
	ENDIF
	IF(IOLD .GT. 0) THEN
	 C0 = GENCOEF(IEQ,IOLD,1)
	 C1 = GENCOEF(IEQ,IOLD,2)
	 C2 = GENCOEF(IEQ,IOLD,3)
	 C3 = GENCOEF(IEQ,IOLD,4)
	ENDIF
	IF(IOLD .EQ. 0) THEN
   30	 WRITE(*,21)
   21    FORMAT(' ENTER THE DESIRED ASSAY COEFFICIENTS, [C0,C1,C2,C3]'/
     1' FOR THIS FILE (RECALL ASSAY SD = C0+C1*Y+C2*Y**2+C3*Y**3): ')
	 READ(*,*,ERR=30) C0,C1,C2,C3
	 IF(NCSTORE(IEQ) .EQ. 5) WRITE(*,27) IEQ
   27    FORMAT(/' FOR OUTPUT EQUATION ',I1,' YOU HAVE ALREADY STORED'/
     1' 5 SETS OF ADDITIONAL COEFFICIENTS FOR POSSIBLE USE WITH '/
     2' SUBSEQUENT PATIENT DATA FILES. THESE COEFFICIENTS CANNOT BE '/
     3' STORED.'/)
	 IF(NCSTORE(IEQ) .EQ. 5) CALL PAUSE
	 IF(NCSTORE(IEQ) .LT. 5) THEN
   45	  WRITE(*,28) IEQ
   28     FORMAT(/' ENTER 1 TO STORE THESE COEFFS. FOR POSSIBLE USE'/
     1' 	WITH SUBSEQUENT PATIENT DATA FILES (FOR EQ. ',I1,'); '/
     2' ENTER 0 IF YOU DO NOT WANT TO SAVE THESE COEFFICIENTS: ')
	  READ(*,*,ERR=45) ISTORE
	  IF(ISTORE .NE. 0 .AND. ISTORE .NE. 1) GO TO 45
	  IF(ISTORE .EQ. 1) THEN
	   NCSTORE(IEQ) = NCSTORE(IEQ) + 1
	   GENCOEF(IEQ,NCSTORE(IEQ),1) = C0
	   GENCOEF(IEQ,NCSTORE(IEQ),2) = C1
	   GENCOEF(IEQ,NCSTORE(IEQ),3) = C2
	   GENCOEF(IEQ,NCSTORE(IEQ),4) = C3
	  ENDIF
	 ENDIF
	ENDIF
	RETURN
	END
	SUBROUTINE GETPATH(PATH,NOB,OSName)
	CHARACTER PATH*60,OSName*20,DIRIN*62,cwd*255
        INTEGER path_len
        LOGICAL dir_exists
        LOGICAL dup_dir
   10	WRITE(*,1)
    1   FORMAT(/' ENTER 1 IF THE FILES FOR THIS RUN ARE IN THE CURRENT D
     1IRECTORY; '/
     1' ENTER 0 OTHERWISE: ')
	READ(*,*,ERR=10) IPATH
	IF(IPATH .NE. 0 .AND. IPATH .NE. 1) GO TO 10
	IF(IPATH .EQ. 1) PATH = ' '
	NOB = 0
	IF(IPATH .EQ. 0) THEN
          CALL getcwd(cwd)
          IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
             WRITE(*,"(A14,A72)") "Your pwd is:",TRIM(cwd)
             WRITE(*,4)
          ELSE IF (INDEX(OSName,"DOS",.TRUE.).eq.1) THEN
             WRITE(*,3)
          ENDIF
    4    FORMAT(/' Enter the PATH, begining from root, e.g. /Users/UserN
     1ame/DirName,'/
     1' of your input files. Note that strlen(PATH) must be < 60 char.'/
     2' ENTER THE PATH NOW: ')
    3    FORMAT(/' ENTER THE LOCATION (PATH) OF YOUR INPUT FILES. NOTE'/
     1' THAT THE PATH IS LIMITED TO 60 CHARACTERS AND THAT EACH SUB-DIRE
     2CTORY'/
     3' CAN HAVE AT MOST 8 CHARACTERS (E.G, INSTEAD OF " \DIRECTORY ", U
     4SE '/
     5' THE DOS-EQUIVALENT NAME, WHICH MIGHT BE " \DIRECT~1 "). '//
     6' ENTER THE PATH NOW: ')
   20	 READ(*,2) PATH
    2    FORMAT(A60)
         DO I=1,59
          J = 59 + 1 - I
          IF(PATH(J:J) .NE. ' ') THEN
            NOB = J
            IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
              IF(PATH(J:J) .NE. '/') THEN
                PATH(J+1:J+1) = '/'
                NOB = J+1
              ENDIF
            ELSE IF (INDEX(OSName,"DOS",.TRUE.).eq.1) THEN
              IF(PATH(J:J) .NE. '\') THEN
                PATH(J+1:J+1) = '\'
                NOB = J+1
              ENDIF
            ENDIF
            EXIT
          ENDIF
         END DO
        IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
          DIRIN=PATH(1:NOB)//'.'
          INQUIRE(FILE=DIRIN,EXIST=dir_exists)
          IF (dir_exists.eqv..FALSE.) THEN
             WRITE(*,"(A72)") "Requested PATH does not exist: "//PATH
             WRITE(*,"(A17)") "Enter PATH again:"
             PATH = ' '
             GO TO 20
          ENDIF
          dup_dir=.TRUE.
          path_len = LEN_TRIM(PATH)-1
          DO I=1,path_len
            IF (PATH(I:I) .NE. cwd(I:I)) THEN
              dup_dir=.FALSE.
              EXIT
            ENDIF
          END DO
          IF (dup_dir .eqv. .TRUE.) THEN
            write(*,*) "You have input the current working directory"
            DO I=1,60
              PATH(I:I)=' '
            END DO
            NOB=0
          ENDIF
        ENDIF
        ENDIF
	RETURN
	END
	SUBROUTINE FULLNAME(PATH,FILE,FILE2)
	CHARACTER PATH*60,FILE2*73,FILE*13,FILE1*73
	FILE2 = ' '
	FILE1 = ' '
	FILE1 = PATH//FILE
	J = 0
        DO I=1,73
	 IF(FILE1(I:I) .NE. ' ') THEN
	  J= J+1
	  FILE2(J:J) = FILE1(I:I)
	 ENDIF
	END DO
	RETURN
	END
	SUBROUTINE PRNCOVAR(NCOV,DESCR,NVAR,PAR,ClearScreen)
	CHARACTER DESCR(26)*20,PAR(30)*11,ClearScreen*6
	CALL SYSTEM(ClearScreen)
	WRITE(*,7133)
 7133   FORMAT(/' THE COVARIATES AVAILABLE IN YOUR PATIENT DATA FILES'/
     1' ARE THE FOLLOWING:'//
     2'   NO.   COVARIATE'/)
	ILINES = 4
        IF(NCOV .GT. 4) THEN
         DO I=1,NCOV-4
          WRITE(*,7134) I,DESCR(I)
          ILINES = ILINES + 1
          IF( ILINES/18 .EQ. 1.0*ILINES/18) CALL PAUSE
         END DO
        ENDIF
7134   FORMAT('   ',I2,'   ',A20)
	WRITE(*,7136) NCOV-3
 7136   FORMAT('   ',I2,'   AGE')
	ILINES = ILINES + 1
	IF( ILINES/18 .EQ. 1.0*ILINES/18) CALL PAUSE
	WRITE(*,7137) NCOV-2
 7137   FORMAT('   ',I2,'   SEX -- 1 (MALE) OR 2 (FEMALE)')
	ILINES = ILINES + 1
	IF( ILINES/18 .EQ. 1.0*ILINES/18) CALL PAUSE
	WRITE(*,7138) NCOV-1
 7138   FORMAT('   ',I2,'   HEIGHT')
	ILINES = ILINES + 1
	IF( ILINES/18 .EQ. 1.0*ILINES/18) CALL PAUSE
	WRITE(*,7139) NCOV
 7139   FORMAT('   ',I2,'   ETHNICITY FLAG -- 1,...,9 FOR, RESPECTIVELY
     1,'/
     4'           NOT KNOWN, CAUCASIAN, BLACK, HISPANIC, NATIVE AMER.'/
     5'           INDIAN, ASIAN, MIDDLE EASTERN, OTHER.')
	CALL PAUSE
	WRITE(*,6133)
 6133   FORMAT(/' THE AVAILABLE RANDOM VARIABLES ARE THE FOLLOWING:'//
     2'   NO.   R.V.'/)
	ILINES = 4
	DO I=1,NVAR
   	 WRITE(*,6134) NCOV+I,PAR(I)
	 ILINES = ILINES + 1
	 IF( ILINES/18 .EQ. 1.0*ILINES/18) CALL PAUSE
	END DO
 6134   FORMAT('   ',I2,'   ',A11)
	RETURN
	END
	SUBROUTINE GETCOVAL(NUMEQT,JSUB,COVAL,NCOV)
        IMPLICIT REAL*8(A-H,O-Z)
        DIMENSION COVAL(999,26)
	CHARACTER SEX*1,READLINE*1000
	DO I=1,7
	 READ(27,*)
	END DO
	READ(27,*) COVAL(JSUB,NCOV-3)
	READ(27,2) SEX
    2   FORMAT(A1)
	COVAL(JSUB,NCOV-2) = 1
	IF(SEX .EQ. 'F') COVAL(JSUB,NCOV-2) = 2
	READ(27,*) COVAL(JSUB,NCOV-1)
	READ(27,*) COVAL(JSUB,NCOV)
    1   FORMAT(A1000)
   20	READ(27,1) READLINE
	IF(READLINE(2:27) .NE. 'COVARIATE NAMES AND VALUES') GO TO 20
        IF(NCOV .GT. 4) THEN
         DO J = 1,NCOV-4
          READ(27,1) READLINE
          OPEN(53)
          DO I = 10,300
           IF(READLINE(I:I) .EQ. ' ') GO TO 10
          END DO
   10     WRITE(53,1) READLINE(I:300)
          REWIND(53)
          READ(53,*) XJUNK1,XJUNK2,COVAL(JSUB,J)
          CLOSE(53)
         END DO
        ENDIF
	READ(27,*)
	READ(27,*)
	DO I=1,NUMEQT
	 READ(27,*)
	END DO
	RETURN
	END
	SUBROUTINE CHECKLIN(READLINE,TARGET,IYES)
	CHARACTER TARGET*17,READLINE*1000
	IYES = 0
	DO I=7,67
	 IF(READLINE(I:I+16) .EQ. TARGET) THEN
	  IYES = 1
	  GO TO 10
	 ENDIF
	END DO
   10   RETURN
	END
	SUBROUTINE WRITEDIF(IVERS)
	CHARACTER READLINE*1000
    1   FORMAT(A1000)
	READLINE = '      SUBROUTINE DIFFEQ(NDIM,T,X,XP,RPAR,IPAR)'
	WRITE(52,1) READLINE
	READLINE = '      IMPLICIT REAL*8(A-H,O-Z)'
	WRITE(52,1) READLINE
	READLINE = '      COMMON /PARAMD/ P'
	WRITE(52,1) READLINE
      READLINE = '      COMMON /INPUT/ R,B'
	WRITE(52,1) READLINE
	READLINE = '      COMMON /DESCR/ AGE,HEIGHT,ISEX,IETHFLG'
	WRITE(52,1) READLINE
	IF(IVERS .EQ. 0) THEN
	 READLINE = '      COMMON /CNST2/ NPL,NUMEQT,NDRUG,NADD'
	 WRITE(52,1) READLINE
	ENDIF
	IF(IVERS .EQ. 1)
     1  READLINE = '      DIMENSION X(NDIM),XP(NDIM),P(25),R(37),B(20)'
	IF(IVERS .EQ. 0)
     1  READLINE = '      DIMENSION X(NDIM),XP(NDIM),P(32),R(37),B(20)'
	WRITE(52,1) READLINE
	IF(IVERS .EQ. 0) THEN
         READLINE = '      DIMENSION CV(26),RATEIV(7)'
	 WRITE(52,1) READLINE
	ENDIF
	WRITE(52,*)
	END
	SUBROUTINE WRITEOUT(IVERS)
	CHARACTER READLINE*1000
    1   FORMAT(A1000)
	IF(IVERS .EQ. 1)
     1  READLINE = '      SUBROUTINE OUTPUT(Y)'
	IF(IVERS .EQ. 0)
     1  READLINE = '      SUBROUTINE OUTPUT(T,Y)'
	WRITE(52,1) READLINE
	READLINE = '      IMPLICIT REAL*8(A-H,O-Z)'
	WRITE(52,1) READLINE
	READLINE = '      COMMON /PARAMD/ P'
	WRITE(52,1) READLINE
	READLINE = '      COMMON /STATE/ X'
	WRITE(52,1) READLINE
	READLINE = '      COMMON /INPUT/ R,B'
	WRITE(52,1) READLINE
	READLINE = '      COMMON /DESCR/ AGE,HEIGHT,ISEX,IETHFLG'
	WRITE(52,1) READLINE
	IF(IVERS .EQ. 0) THEN
	 READLINE = '      COMMON /CNST2/ NPL,NUMEQT,NDRUG,NADD'
	 WRITE(52,1) READLINE
	ENDIF
	IF(IVERS .EQ. 1)
     1  READLINE = '      DIMENSION X(20),P(25),Y(6),R(37),B(20)'
	IF(IVERS .EQ. 0)
     1  READLINE = '      DIMENSION X(20),P(32),Y(6),R(37),B(20)'
	WRITE(52,1) READLINE
	IF(IVERS .EQ. 0) THEN
         READLINE = '      DIMENSION CV(26)'
	 WRITE(52,1) READLINE
	ENDIF
	WRITE(52,*)
	RETURN
	END
	SUBROUTINE WRITESYM(IVERS)
	CHARACTER READLINE*1000
    1   FORMAT(A1000)
	READLINE = '      SUBROUTINE SYMBOL'
	WRITE(52,1) READLINE
        READLINE = '      IMPLICIT REAL*8(A-H,O-Z)'
	WRITE(52,1) READLINE
	READLINE = '      CHARACTER PSYM(32)*11'
	WRITE(52,1) READLINE
	IF(IVERS .EQ. 1) THEN
	 READLINE = '      COMMON /CNST/ N,ND,NI,NUP,NUIC,NP'
	 WRITE(52,1) READLINE
	ENDIF
	IF(IVERS .EQ. 0) THEN
	 READLINE = '      COMMON /CNST/ N,ND,NI,NUP,NUIC,NP'
	 WRITE(52,1) READLINE
	 READLINE = '      COMMON/BOLUSCOMP/NBCOMP'
	 WRITE(52,1) READLINE
	 READLINE = '      DIMENSION NBCOMP(7)'
	 WRITE(52,1) READLINE
	ENDIF
	RETURN
	END
	SUBROUTINE SKIPLINE(READLINE,IYES)
	CHARACTER READLINE*1000
	IYES = 1
	DO I=7,64
	 IF(READLINE(I:I+5) .EQ. 'COMMON') RETURN
	 IF(READLINE(I:I+8) .EQ. 'DIMENSION') RETURN
	 IF(READLINE(I:I+8) .EQ. 'CHARACTER') RETURN
	END DO
	IYES = 0
	RETURN
	END
	SUBROUTINE SEPARATE
	CHARACTER READLINE*1000
    1   FORMAT(A1000)
	OPEN(25,FILE='JUNKTRASH0001')
	OPEN(28,FILE='JUNKTRASH0002')
	OPEN(27,FILE='JUNKTRASH0003')
	OPEN(47,FILE='JUNKTRASH0004')
	REWIND(45)
   10	READ(45,1) READLINE
	IF(READLINE(17:42) .EQ. '* END OF THE OUTPUT FILE *') GO TO 20
	WRITE(25,1) READLINE
	GO TO 10
   20	READ(45,1) READLINE
	IF(READLINE(1:8) .NE. ' REM_FRN') GO TO 20
   	WRITE(28,1) READLINE
   30   READ(45,1) READLINE
	IF(READLINE(11:27) .EQ. 'END OF LAST CYCLE') GO TO 40
	WRITE(28,1) READLINE
	GO TO 30
   40   READ(45,1) READLINE
	IF(READLINE(3:16) .NE. 'LAST AND FIRST') GO TO 40
   	WRITE(27,1) READLINE
   50   READ(45,1) READLINE
	IF(READLINE(17:43) .EQ. '* END OF THE PATIENT DATA I') GO TO 60
	WRITE(27,1) READLINE
	GO TO 50
   60   READ(45,1) READLINE
	IF(READLINE(17:43) .NE. '* START OF THE it2bdriv.f F') GO TO 60
   	WRITE(47,1) READLINE
   70   READ(45,1) READLINE
	IF(READLINE(17:43) .EQ. '* END OF THE it2bdriv.f FIL') GO TO 80
	WRITE(47,1) READLINE
	GO TO 70
   80   WRITE(47,1) READLINE
	REWIND(25)
	REWIND(27)
	REWIND(47)
	CLOSE(45)
	CLOSE(28)
	OPEN(28,FILE='JUNKTRASH0002',STATUS='OLD',POSITION='APPEND')
	RETURN
	END
	SUBROUTINE GETNUM(NUMEQT)
	IMPLICIT REAL*8(A-H,O-Z)
	CHARACTER READLINE*1000,ERRFIL*20
      COMMON/ERROR/ERRFIL
    2   FORMAT(A1000)
   35	READ(27,2,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) THEN
	 WRITE(*,57)
   57    FORMAT(//' THE COMBINATION OUTPUT FILE YOU HAVE ENTERED TO'/
     1' THIS PROGRAM WAS NOT MADE BY A RECENT BIG IT2B PROGRAM.'//
     2' SUCH A FILE MUST HAVE CONCATENATED PATIENT DATA FILES HAVING'/
     3' A LINE WITH "NO. OF TOTAL OUTPUT EQUATIONS" IN COLUMNS 12:40.'//
     3' THE PROGRAM STOPS. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,57)
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	IF(READLINE(12:40) .NE. 'NO. OF TOTAL OUTPUT EQUATIONS')GO TO 35
	BACKSPACE(27)
   13   FORMAT(T2,I5)
        READ(27,13) NUMEQT
	RETURN
	END
	SUBROUTINE GETIPAT(NSUBTOT,NSUB,ISUBALL,MAXSUB,IPATVEC)
	DIMENSION IPATVEC(MAXSUB),IPATVECC(9999)
	CHARACTER READLINE*1000
    3   FORMAT(A1000)
 4070	WRITE(*,121)
  121   FORMAT(/' ENTER THE NO. OF SUBJECTS IN YOUR ENTIRE DATA SET.'/
     1' THIS MAY BE DIFFERENT THAN THE NO. OF SUBJECTS TO BE TO BE '/
     2' ANALYZED IN THIS PARTICULAR RUN (SEE BELOW): ')
 	READ(*,*,ERR=4070) NSUBTOT
	IF(NSUBTOT .LE. 0) GO TO 4070
 4170	WRITE(*,2121) NSUBTOT
 2121   FORMAT(/' ENTER 1 IF ALL ',I4,' SUBJECTS IN YOUR DATA SET ARE'/
     1' 	TO BE ANALYZED IN THIS RUN; '/
     2'		ENTER 0 IF YOU WANT TO ANALYZE A SUBSET OF THIS SET: ')
	READ(*,*,ERR=4170) ISUBALL
	IF(ISUBALL .NE. 1 .AND. ISUBALL .NE. 0) GO TO 4170
	IF(ISUBALL .EQ. 1) THEN
	 NSUB = NSUBTOT
	 DO I=1,NSUB
	  IPATVEC(I) = I
	 END DO
	ENDIF
     	IF(ISUBALL .EQ. 0) THEN
 4180	 WRITE(*,2122)
 2122    FORMAT(/' ENTER 1 IF YOU WANT TO SELECT WHICH PATIENTS ARE TO'/
     1' 	BE INCLUDED IN THE ANALYSIS; '/
     2' ENTER 2 IF YOU WANT TO SELECT WHICH PATIENTS ARE NOT TO BE'/
     3'		INCLUDED IN THE ANALYSIS: ')
	 READ(*,*,ERR= 4180) IINCLUDE
	 IF(IINCLUDE .NE. 1 .AND. IINCLUDE .NE. 2) GO TO 4180
	  NSUBB = 0
	  NUMCUR = 0
 4200	   IF(IINCLUDE .EQ. 1) WRITE(*,2124)
 2124      FORMAT(/' ON EACH LINE, ENTER A SUBJECT OR A RANGE OF '/
     1' SUBJECTS TO BE INCLUDED IN THE ANALYSIS. YOU MAY ENTER '/
     2' MULTIPLE SUBJECTS USING HYPHENS, COMMAS, AND SPACES. FOR'/
     3' EXAMPLE, 17 - 28 INDICATES SUBJECTS 17 THROUGH 28; '/
     4'          17,28 INDICATES SUBJECTS 17 AND 28;'/
     5'          17 28 INDICATES SUBJECTS 17 AND 28. '//
     6' RESTRICTIONS: 1. ON EACH LINE, USE NO MORE THAN 70 CHARACTERS.'/
     7'		      2. PATIENT NOS., OR RANGES OF PATIENT NOS.,'/
     8'		         MUST BE LISTED IN ASCENDING ORDER.'//
     9' ENTER 0 WHEN YOU ARE FINISHED ENTERING PATIENT NOS.'//)
	IF(IINCLUDE .EQ. 2) WRITE(*,2123)
 2123      FORMAT(/' ON EACH LINE, ENTER A SUBJECT OR A RANGE OF '/
     1' SUBJECTS TO BE EXCLUDED IN THE ANALYSIS. YOU MAY ENTER '/
     2' MULTIPLE SUBJECTS USING HYPHENS, COMMAS, AND SPACES. FOR'/
     3' EXAMPLE, 17 - 28 INDICATES SUBJECTS 17 THROUGH 28; '/
     4'          17,28 INDICATES SUBJECTS 17 AND 28;'/
     5'          17 28 INDICATES SUBJECTS 17 AND 28. '//
     6' RESTRICTIONS: 1. ON EACH LINE, USE NO MORE THAN 70 CHARACTERS.'/
     7'		      2. PATIENT NOS., OR RANGES OF PATIENT NOS.,'/
     8'		         MUST BE LISTED IN ASCENDING ORDER.'//
     9' ENTER 0 WHEN YOU ARE FINISHED ENTERING PATIENT NOS.'//)
 4210	   READ(*,3,ERR=4200) READLINE
	   CALL GETNUMS(IINCLUDE,READLINE,NSUBB,NSUBTOT,NUMCUR,ISTOP,
     1                  MAXSUB,IPATVECC)
	   IF(ISTOP .EQ. -1) GO TO 4200
	   IF(ISTOP .EQ. 1) GO TO 4210
	IF(IINCLUDE .EQ. 1) THEN
	 NSUB = NSUBB
	  DO I = 1,NSUB
	   IPATVEC(I) = IPATVECC(I)
	  END DO
	ENDIF
	IF(IINCLUDE .EQ. 2) THEN
	 NSUB = NSUBTOT - NSUBB
	 INDPAT = 1
	 NEXT = 0
	 DO I = 1,NSUBTOT
	  IF(I .NE. IPATVECC(INDPAT)) THEN
	   NEXT = NEXT + 1
	   IPATVEC(NEXT) = I
	  ENDIF
	  IF(I .EQ. IPATVECC(INDPAT)) INDPAT = INDPAT + 1
	 END DO
	ENDIF
	ENDIF
	RETURN
	END
	SUBROUTINE GETNUMS(IINCLUDE,READLINE,NSUBB,NSUBTOT,NUMCUR,ISTOP,
     1                  MAXSUB,IPATVECC)
	DIMENSION IPATVECC(MAXSUB)
	CHARACTER READLINE*1000
	ISTOP = 1
	DO J = 1,70
	 IF(READLINE(J:J) .NE. ' ') GO TO 10
	END DO
	IF(NSUBB .EQ. 0) WRITE(*,1)
    1   FORMAT(/' YOU HAVE ENTERED A BLANK LINE. PLEASE ENTER SUBJECT'/
     1' NOS. AS INDICATED BELOW.' /)
	IF(NSUBB .GT. 0) WRITE(*,2) NSUBB,NUMCUR
    2   FORMAT(/' YOU HAVE ENTERED A BLANK LINE. THE LAST ACCEPTED '/
     1' SUBJECT NO. IS ',I4//
     3' PLEASE ENTER SUBJECT NOS. AS INDICATED BELOW. ')
	ISTOP = -1
	RETURN
   10   CONTINUE
	DO J = 1,70
	 IF(READLINE(J:J) .NE. ' ') GO TO 20
	END DO
   20   ISTART = J
	IF(READLINE(ISTART:ISTART) .NE. '0') GO TO 30
	DO I = ISTART+1,70
	 IF(READLINE(I:I) .NE. ' ') GO TO 30
	END DO
	IF(IINCLUDE .EQ. 1 .AND. NSUBB .EQ. 0) THEN
	 WRITE(*,3)
    3    FORMAT(/' YOU MUST ENTER AT LEAST ONE SUBJECT NO. TO BE'/
     1' ANALYZED. ')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(IINCLUDE .EQ. 2 .OR. NSUBB .GT. 0) THEN
	 ISTOP = 0
	 RETURN
	ENDIF
   30   CONTINUE
     	DO I = ISTART+1,70
	 IF(READLINE(I:I) .EQ. ' ' .OR. READLINE(I:I) .EQ. ',' .OR.
     1      READLINE(I:I) .EQ. '-') GO TO 40
	END DO
   40   IEND = I-1
	CALL GETSUB(READLINE,ISTART,IEND,ISUB,IERROR)
	IF(IERROR .EQ. -1) THEN
	 WRITE(*,7) NUMCUR
    7    FORMAT(/' YOU HAVE ENTERED AN INVALID CHARACTER; THE LAST'/
     1' ACCEPTED PATIENT NUMBER IS ',I4//
     2' PLEASE ENTER SUBJECT NOS. AS INDICATED BELOW. ')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .LE. NUMCUR) THEN
	 WRITE(*,4) ISUB,NUMCUR
    4    FORMAT(/' YOU MAY NOT ENTER A SUBJECT NO. (',I4,' ) WHICH IS '/
     1' LESS THAN OR EQUAL TO A PREVIOUSLY ENTERED SUBJECT NO.,'/
     2' IN PARTICULAR ',I4,' WHICH IS THE LAST ACCEPTED SUBJECT NO.'//
     3' PLEASE ENTER SUBJECT NOS. AS INDICATED BELOW. ')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .GT. NSUBTOT) THEN
	 WRITE(*,6) ISUB,NSUBTOT,NUMCUR
    6    FORMAT(/' YOU MAY NOT ENTER A SUBJECT NO. (',I4,' ) WHICH'/
     1' IS GREATER THAN THE NO. OF SUBJECTS IN YOUR DATA FILE = ',I4/
     2' THE LAST ACCEPTED SUBJECT NO. IS ',I4//
     3' PLEASE ENTER SUBJECT NOS. AS INDICATED BELOW. ')
	 ISTOP = -1
	 RETURN
	ENDIF
	DO I = IEND+1,70
	 IF(READLINE(I:I) .NE. ' ') GO TO 50
	END DO
	NUMCUR = ISUB
	NSUBB = NSUBB + 1
	IPATVECC(NSUBB) = ISUB
	RETURN
   50   CONTINUE
	IF(READLINE(I:I) .EQ. ',') THEN
	 NUMCUR = ISUB
 	 NSUBB = NSUBB + 1
	 IPATVECC(NSUBB) = ISUB
	 DO J = I+1,70
	  IF(READLINE(J:J) .NE. ' ') GO TO 60
	 END DO
	 RETURN
   60    ISTART = J
	 GO TO 30
	ENDIF
	INUM = 0
	IF(READLINE(I:I) .EQ. '0') INUM = 1
	IF(READLINE(I:I) .EQ. '1') INUM = 1
	IF(READLINE(I:I) .EQ. '2') INUM = 1
	IF(READLINE(I:I) .EQ. '3') INUM = 1
	IF(READLINE(I:I) .EQ. '4') INUM = 1
	IF(READLINE(I:I) .EQ. '5') INUM = 1
	IF(READLINE(I:I) .EQ. '6') INUM = 1
	IF(READLINE(I:I) .EQ. '7') INUM = 1
	IF(READLINE(I:I) .EQ. '8') INUM = 1
	IF(READLINE(I:I) .EQ. '9') INUM = 1
	IF(INUM .EQ. 1) THEN
	 NUMCUR = ISUB
 	 NSUBB = NSUBB + 1
	 IPATVECC(NSUBB) = ISUB
         ISTART = I
	 GO TO 30
	ENDIF
	IF(READLINE(I:I) .EQ. '-') THEN
	 NUMCUR1 = ISUB
	 DO J = I+1,70
	  IF(READLINE(J:J) .NE. ' ') GO TO 70
	 END DO
	 WRITE(*,8) NUMCUR
    8    FORMAT(/' YOU MAY NOT END A LINE WITH A DASH. THE LAST '/
     1' PATIENT NO. ASSUMED TO BE ENTERED IS ',I4//
     3' PLEASE ENTER SUBJECT NOS. AS INDICATED BELOW. ')
	 ISTOP = -1
	 RETURN
   70   ISTART = J
     	DO K = ISTART+1,70
	 IF(READLINE(K:K) .EQ. ' ' .OR. READLINE(K:K) .EQ. ',')
     1    GO TO 80
	END DO
   80   IEND = K-1
	CALL GETSUB(READLINE,ISTART,IEND,ISUB,IERROR)
	IF(IERROR .EQ. -1) THEN
	 WRITE(*,7) NUMCUR
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .LE. NUMCUR1) THEN
	 WRITE(*,9) NUMCUR
    9    FORMAT(/' YOU MAY NOT ENTER A RANGE OF SUBJECT NOS. WITH THE'/
     1' ENDING NO. LESS THAN OR EQUAL TO THE BEGINNING NO. THE LAST'/
     2' ACCEPTED SUBJECT NO. IS ',I4//
     3' PLEASE ENTER SUBJECT NOS. AS INDICATED BELOW. ')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .GT. NSUBTOT) THEN
	 WRITE(*,6) ISUB,NSUBTOT,NUMCUR
	 ISTOP = -1
	 RETURN
	ENDIF
	 NUMCUR = ISUB
	 NN = NSUBB
 	 NSUBB = NSUBB + (NUMCUR - NUMCUR1) + 1
	 NONEW = 0
	 DO K = NN+1,NSUBB
	  NONEW = NONEW + 1
	  IPATVECC(K) = NUMCUR1 - 1 + NONEW
	 END DO
	 DO J = IEND+1,70
	  IF(READLINE(J:J) .NE. ' ' .AND. READLINE(J:J) .NE. ',' )
     1    GO TO 90
	 END DO
	 RETURN
   90    ISTART = J
	 GO TO 30
	ENDIF
	WRITE(*,7) NUMCUR
	ISTOP = -1
	RETURN
	END
	SUBROUTINE GETSUB(READLINE,ISTART,IEND,ISUB,IERROR)
	CHARACTER READLINE*1000
    3   FORMAT(A1000)
	IERROR = 0
  	ISIZE = IEND-ISTART
	ISUB = 0
	 DO K=ISTART,IEND
	  IVAL = -9
	  IF(READLINE(K:K) .EQ. '0') IVAL = 0
	  IF(READLINE(K:K) .EQ. '1') IVAL = 1
	  IF(READLINE(K:K) .EQ. '2') IVAL = 2
	  IF(READLINE(K:K) .EQ. '3') IVAL = 3
	  IF(READLINE(K:K) .EQ. '4') IVAL = 4
	  IF(READLINE(K:K) .EQ. '5') IVAL = 5
	  IF(READLINE(K:K) .EQ. '6') IVAL = 6
	  IF(READLINE(K:K) .EQ. '7') IVAL = 7
	  IF(READLINE(K:K) .EQ. '8') IVAL = 8
	  IF(READLINE(K:K) .EQ. '9') IVAL = 9
	  IF(IVAL .EQ. -9) THEN
	   IERROR = -1
	   RETURN
	  ENDIF
	  ISUB = ISUB + IVAL*10**ISIZE
	  ISIZE = ISIZE-1
	 END DO
	RETURN
	END
	SUBROUTINE WRITEPAT(NSUB,MAXSUB,IPATVEC)
	DIMENSION IPATVEC(MAXSUB)
	WRITE(*,*)
	ILINES = 1
	NEXTIND = 0
   50   NEXTIND = NEXTIND + 1
	IF(NEXTIND .GT. NSUB) GO TO 100
	IFIRST = IPATVEC(NEXTIND)
	IF(NEXTIND .EQ. NSUB) THEN
	 WRITE(*,222) IFIRST
	 ILINES=ILINES+1
	  IF(ILINES .EQ. 20) THEN
	   ILINES=0
	  ENDIF
  222    FORMAT(1X,I5)
	 GO TO 100
	ENDIF
	IF(IPATVEC(NEXTIND+1) .NE. IFIRST + 1) THEN
	 WRITE(*,222) IFIRST
	 ILINES=ILINES+1
	  IF(ILINES .EQ. 20) THEN
	   ILINES=0
	  ENDIF
	 GO TO 50
	ENDIF
	ILAST = IPATVEC(NEXTIND+1)
	NEXT = NEXTIND+1
	DO I = NEXTIND+2,NSUB
	 IF(IPATVEC(I) .NE. ILAST + 1) GO TO 80
	 ILAST = IPATVEC(I)
	 NEXT = I
	END DO
   80	WRITE(*,221) IFIRST,ILAST
  221   FORMAT(1X,I5,'   - ',I5)
	ILINES=ILINES+1
	 IF(ILINES .EQ. 20) THEN
	  ILINES=0
	 ENDIF
	NEXTIND = NEXT
	GO TO 50
  100   RETURN
	END
	SUBROUTINE WRITEPT2(IFILE,NSUB,MAXSUB,IPATVEC)
	DIMENSION IPATVEC(MAXSUB)
	NEXTIND = 0
   50   NEXTIND = NEXTIND + 1
	IF(NEXTIND .GT. NSUB) GO TO 100
	IFIRST = IPATVEC(NEXTIND)
	IF(NEXTIND .EQ. NSUB) THEN
	 IF(IFILE .EQ. 27) WRITE(27,222) IFIRST
	 IF(IFILE .EQ. 24) WRITE(24,222) IFIRST
  222    FORMAT(1X,I5)
	 GO TO 100
	ENDIF
	IF(IPATVEC(NEXTIND+1) .NE. IFIRST + 1) THEN
	 IF(IFILE .EQ. 27) WRITE(27,222) IFIRST
	 IF(IFILE .EQ. 24) WRITE(24,222) IFIRST
	 GO TO 50
	ENDIF
	ILAST = IPATVEC(NEXTIND+1)
	NEXT = NEXTIND+1
	DO I = NEXTIND+2,NSUB
	 IF(IPATVEC(I) .NE. ILAST + 1) GO TO 80
	 ILAST = IPATVEC(I)
	 NEXT = I
	END DO
   80	IF(IFILE .EQ. 27) WRITE(27,221) IFIRST,ILAST
   	IF(IFILE .EQ. 24) WRITE(24,221) IFIRST,ILAST
  221   FORMAT(1X,I5,'   - ',I5)
	NEXTIND = NEXT
	GO TO 50
  100   RETURN
	END
	SUBROUTINE GETIPATF(IFILE,NSUBTOT,NSUB,MAXSUB,
     1   IPATVEC,IERRR)
	DIMENSION IPATVEC(MAXSUB)
	CHARACTER READLINE*1000
    3   FORMAT(A1000)
	NSUBB = 0
	NUMCUR = 0
 4210	IF(IFILE .EQ. 23) READ(23,3,ERR=4200) READLINE
	IF(IFILE .EQ. 25) READ(25,3,ERR=4200) READLINE
	CALL GETNUMSF(1,READLINE,NSUBB,NSUBTOT,NUMCUR,ISTOP,
     1                  MAXSUB,IPATVEC)
	IF(ISTOP .EQ. -1) GO TO 4200
	IF(ISTOP .EQ. 1) GO TO 4210
	IF(NSUB .EQ. NSUBB) THEN
	 IERRR = 0
	 RETURN
	ENDIF
	IF(NSUB .NE. NSUBB) THEN
         WRITE(*,2)
    2   FORMAT(//' THERE WAS AN ERROR IN THE READING OF PATIENT NOS.'/
     1' TO BE USED FOR THIS ANALYSIS. IN PARTICULAR, THE NO. OF '/
     2' SUBJECTS TO BE INCLUDED IN THE ANALYSIS, AS ENTERED IN THE'/
     3' INSTRUCTION FILE, DOES NOT MATCH THE LIST OF SUBJECT NOS.'/
     4' WHICH FOLLOW THAT NUMBER. PLEASE ENTER DATA VIA THE KEYBOARD'/
     5' OR USING ANOTHER INSTRUCTION FILE.'/)
	IERRR = -1
	 RETURN
	ENDIF
 4200   WRITE(*,1)
    1   FORMAT(//' THERE WAS AN ERROR IN THE READING OF PATIENT NOS.'/
     1' TO BE USED FOR THIS ANALYSIS. PLEASE ENTER DATA VIA THE '/
     2' KEYBOARD OR USING ANOTHER INSTRUCTION FILE.'/)
	IERRR = -1
	RETURN
	END
	SUBROUTINE GETNUMSF(IINCLUDE,READLINE,NSUBB,NSUBTOT,NUMCUR,
     1    ISTOP,MAXSUB,IPATVECC)
	DIMENSION IPATVECC(MAXSUB)
	CHARACTER READLINE*1000
	ISTOP = 1
	DO J = 1,70
	 IF(READLINE(J:J) .NE. ' ') GO TO 10
	END DO
	IF(NSUBB .EQ. 0) WRITE(*,1)
    1   FORMAT(/' THE INSTRUCTION OR OUTPUT FILE HAS AN IMPROPER BLANK'/
     1' LINE IN THE PATIENT NUMBER SECTION. ')
	ISTOP = -1
	RETURN
   10   CONTINUE
	DO J = 1,70
	 IF(READLINE(J:J) .NE. ' ') GO TO 20
	END DO
   20   ISTART = J
	IF(READLINE(ISTART:ISTART) .NE. '0') GO TO 30
	DO I = ISTART+1,70
	 IF(READLINE(I:I) .NE. ' ') GO TO 30
	END DO
	IF(IINCLUDE .EQ. 1 .AND. NSUBB .EQ. 0) THEN
	 WRITE(*,3)
    3    FORMAT(/' THE INSTRUCTION OR OUTPUT FILE HAS AN IMPROPER '/
     1' LINE - WITH JUST A "0" ON IT - IN THE PATIENT NUMBER SECTION.')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(IINCLUDE .EQ. 2 .OR. NSUBB .GT. 0) THEN
	 ISTOP = 0
	 RETURN
	ENDIF
   30   CONTINUE
     	DO I = ISTART+1,70
	 IF(READLINE(I:I) .EQ. ' ' .OR. READLINE(I:I) .EQ. ',' .OR.
     1      READLINE(I:I) .EQ. '-') GO TO 40
	END DO
   40   IEND = I-1
	CALL GETSUB(READLINE,ISTART,IEND,ISUB,IERROR)
	IF(IERROR .EQ. -1) THEN
	 WRITE(*,7)
    7    FORMAT(/' THE INSTRUCTION OR OUTPUT FILE HAS AN IMPROPER '/
     1' LINE - WITH AN INVALID CHARACTER ON IT - IN THE PATIENT '/
     2' NUMBER SECTION.')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .LE. NUMCUR) THEN
	 WRITE(*,4) ISUB,NUMCUR
    4    FORMAT(/' THE INSTRUCTION OR OUTPUT FILE HAS AN IMPROPER '/
     1' LINE IN IT IN THE PATIENT NUMBER SECTION.'//
     2' IT HAS A SUBJECT NO. (',I4,' ) WHICH IS LESS THAN OR EQUAL TO '/
     3' A PREVIOUSLY ENTERED SUBJECT NO. (',I4,').')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .GT. NSUBTOT) THEN
	 WRITE(*,6) ISUB,NSUBTOT
    6    FORMAT(/' THE INSTRUCTION OR OUTPUT FILE HAS AN IMPROPER '/
     1' LINE IN IT IN THE PATIENT NUMBER SECTION.'//
     2' IT HAS A SUBJECT NO. (',I4,' ) WHICH IS GREATER THAN THE NO.'/
     3' OF SUBJECTS IN YOUR DATA FILE (',I4,').')
	 ISTOP = -1
	 RETURN
	ENDIF
	DO I = IEND+1,70
	 IF(READLINE(I:I) .NE. ' ') GO TO 50
	END DO
	NUMCUR = ISUB
	NSUBB = NSUBB + 1
	IPATVECC(NSUBB) = ISUB
	RETURN
   50   CONTINUE
	IF(READLINE(I:I) .EQ. ',') THEN
	 NUMCUR = ISUB
 	 NSUBB = NSUBB + 1
	 IPATVECC(NSUBB) = ISUB
	 DO J = I+1,70
	  IF(READLINE(J:J) .NE. ' ') GO TO 60
	 END DO
	 RETURN
   60    ISTART = J
	 GO TO 30
	ENDIF
	INUM = 0
	IF(READLINE(I:I) .EQ. '0') INUM = 1
	IF(READLINE(I:I) .EQ. '1') INUM = 1
	IF(READLINE(I:I) .EQ. '2') INUM = 1
	IF(READLINE(I:I) .EQ. '3') INUM = 1
	IF(READLINE(I:I) .EQ. '4') INUM = 1
	IF(READLINE(I:I) .EQ. '5') INUM = 1
	IF(READLINE(I:I) .EQ. '6') INUM = 1
	IF(READLINE(I:I) .EQ. '7') INUM = 1
	IF(READLINE(I:I) .EQ. '8') INUM = 1
	IF(READLINE(I:I) .EQ. '9') INUM = 1
	IF(INUM .EQ. 1) THEN
	 NUMCUR = ISUB
 	 NSUBB = NSUBB + 1
	 IPATVECC(NSUBB) = ISUB
         ISTART = I
	 GO TO 30
	ENDIF
	IF(READLINE(I:I) .EQ. '-') THEN
	 NUMCUR1 = ISUB
	 DO J = I+1,70
	  IF(READLINE(J:J) .NE. ' ') GO TO 70
	 END DO
	 WRITE(*,8)
    8    FORMAT(/' THE INSTRUCTION OR OUTPUT FILE HAS AN IMPROPER '/
     1' LINE IN IT IN THE PATIENT NUMBER SECTION.'//
     2' A LINE HAS BEEN ENDED WITH A DASH.')
	 ISTOP = -1
	 RETURN
   70   ISTART = J
     	DO K = ISTART+1,70
	 IF(READLINE(K:K) .EQ. ' ' .OR. READLINE(K:K) .EQ. ',')
     1    GO TO 80
	END DO
   80   IEND = K-1
	CALL GETSUB(READLINE,ISTART,IEND,ISUB,IERROR)
	IF(IERROR .EQ. -1) THEN
	 WRITE(*,7)
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .LE. NUMCUR1) THEN
	 WRITE(*,9)
    9    FORMAT(/' THE INSTRUCTION OR OUTPUT FILE HAS AN IMPROPER '/
     1' LINE IN IT IN THE PATIENT NUMBER SECTION.'//
     2' IT HAS A RANGE OF SUBJECT NOS. WITH THE ENDING NO. LESS THAN '/
     3' OR EQUAL TO THE BEGINNING NO.')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .GT. NSUBTOT) THEN
	 WRITE(*,6) ISUB,NSUBTOT
	 ISTOP = -1
	 RETURN
	ENDIF
	 NUMCUR = ISUB
	 NN = NSUBB
 	 NSUBB = NSUBB + (NUMCUR - NUMCUR1) + 1
	 NONEW = 0
	 DO K = NN+1,NSUBB
	  NONEW = NONEW + 1
	  IPATVECC(K) = NUMCUR1 - 1 + NONEW
	 END DO
	 DO J = IEND+1,70
	  IF(READLINE(J:J) .NE. ' ' .AND. READLINE(J:J) .NE. ',' )
     1    GO TO 90
	 END DO
	 RETURN
   90    ISTART = J
	 GO TO 30
	ENDIF
	WRITE(*,7)
	ISTOP = -1
	RETURN
	END
	SUBROUTINE GETNSUB2(NSUBTOT)
	CHARACTER READLINE*1000
        CHARACTER ERRFIL*20
      COMMON/ERROR/ERRFIL
    2   FORMAT(A1000)
   10   READ(25,2) READLINE
	ILINE=0
	 DO I=1,51
	  IF(READLINE(I:I+21) .EQ. 'CTS IN THE DATA SET IS') THEN
	   ILINE=1
	   GO TO 20
	  ENDIF
	 END DO
   20   IF(ILINE .EQ. 0) GO TO 10
	 IEND = 0
	 ISTART = 0
	  DO J = I+22, 72
	   IF(ISTART .EQ. 0 .AND. READLINE(J:J) .NE. ' ') ISTART = J
	   IF(ISTART .NE. 0 .AND. READLINE(J:J) .EQ. ' ') THEN
	    IEND = J-1
	    GO TO 30
	   ENDIF
	  END DO
   30	ISIZE = IEND-ISTART
	IF(ISIZE .GT. 3) THEN
	 WRITE(*,*)' NSUBTOT IS ',NSUBTOT,' WHICH IS TOO LARGE. '
	 WRITE(*,*)' THE PROGRAM STOPS. '
        OPEN(42,FILE=ERRFIL)
         WRITE(42,*)' NSUBTOT IS ',NSUBTOT,' WHICH IS TOO LARGE. '
         WRITE(42,*)' THE PROGRAM STOPS. '
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	NSUBTOT = 0
	 DO K=ISTART,IEND
	  IF(READLINE(K:K) .EQ. '0') IVAL = 0
	  IF(READLINE(K:K) .EQ. '1') IVAL = 1
	  IF(READLINE(K:K) .EQ. '2') IVAL = 2
	  IF(READLINE(K:K) .EQ. '3') IVAL = 3
	  IF(READLINE(K:K) .EQ. '4') IVAL = 4
	  IF(READLINE(K:K) .EQ. '5') IVAL = 5
	  IF(READLINE(K:K) .EQ. '6') IVAL = 6
	  IF(READLINE(K:K) .EQ. '7') IVAL = 7
	  IF(READLINE(K:K) .EQ. '8') IVAL = 8
	  IF(READLINE(K:K) .EQ. '9') IVAL = 9
	  NSUBTOT = NSUBTOT + IVAL*10**ISIZE
	  ISIZE = ISIZE-1
	 END DO
	RETURN
	END
	SUBROUTINE GETIPATFF(IFILE,NSUBTOT,NSUB,MAXSUB,
     1   IPATVEC,IERRR)
	DIMENSION IPATVEC(MAXSUB)
	CHARACTER READLINE*1000
    3   FORMAT(A1000)
	NSUBB = 0
	NUMCUR = 0
 4210	IF(IFILE .EQ. 23) READ(23,3,ERR=4200) READLINE
	IF(IFILE .EQ. 25) READ(25,3,ERR=4200) READLINE
	CALL GETNUMSF(1,READLINE,NSUBB,NSUBTOT,NUMCUR,ISTOP,
     1                  MAXSUB,IPATVEC)
	IF(ISTOP .EQ. -1) GO TO 4200
	IF(ISTOP .EQ. 1) GO TO 4210
	IF(NSUB .EQ. NSUBB) THEN
	 IERRR = 0
	 RETURN
	ENDIF
	IF(NSUB .NE. NSUBB) THEN
         WRITE(*,2)
    2   FORMAT(//' THERE WAS AN ERROR IN THE READING OF PATIENT NOS.'/
     1' USED FOR THIS ANALYSIS. IN PARTICULAR, THE NO. OF '/
     2' SUBJECTS TO BE INCLUDED IN THE ANALYSIS, AS ENTERED IN THE'/
     3' OUTPUT FILE, DOES NOT MATCH THE LIST OF SUBJECT NOS.'/
     4' WHICH FOLLOW THAT NUMBER. IF YOU DID NOT MANUALLY EDIT THE'/
     5' OUTPUT FILE AFTER THE RUN, PLEASE CONTACT LAPK AND REPORT THIS'/
     6' ERROR.'//)
	IERRR = -1
	 RETURN
	ENDIF
 4200   WRITE(*,1)
    1   FORMAT(//' THERE WAS AN ERROR IN THE READING OF PATIENT NOS.'/
     1' USED FOR THIS ANALYSIS FROM THE OUTPUT FILE. IF YOU DID NOT '/
     2' MANUALLY EDIT THE OUTPUT FILE AFTER THE RUN, PLEASE CONTACT '/
     3' LAPK AND REPORT THIS ERROR.'//)
	IERRR = -1
	RETURN
	END
       SUBROUTINE READBLOCK(ICALL,NSUB,MAXSUB,NOUT,NDRUG,PATH,C0P,C1P,
     1   C2P,C3P,MAXNUMEQ)
        IMPLICIT REAL*8(A-H,O-Z)
        CHARACTER ERRFIL*20
      COMMON/TOWRITE/IALLIN,IVERIFY,NCOVA,ICOVTYPE,COVNAME
      COMMON/ERROR/ERRFIL
	DIMENSION TIMOUT(MAXSUB,MAXNUMEQ,650),TIMIV(MAXSUB,7,650),
     1 NTIMOUT(MAXSUB,MAXNUMEQ),NTIMIV(MAXSUB,7),RATEIV(MAXSUB,7,650),
     2 BOLUS(MAXSUB,7,650),OUT(MAXSUB,MAXNUMEQ,650),COV(MAXSUB,26,650),
     3 ICOVTYPE(26),TIMBOL(MAXSUB,7,650),NTIMBOL(MAXSUB,7),
     4 NTIMCOV(MAXSUB,26),TIMCOV(MAXSUB,26,650),TIMALL(MAXSUB,5000),
     5 NTIMALL(MAXSUB),TIMI(5000),C0P(MAXNUMEQ),C1P(MAXNUMEQ),
     6 C2P(MAXNUMEQ),C3P(MAXNUMEQ),CSUB(MAXSUB,4,MAXNUMEQ),
     7 NSST(MAXSUB),DOSELINEST(MAXSUB,99,100)
	CHARACTER READLINE*1000,COVNAME(26)*11,NUMBER(MAXSUB)*3,PATFIL*20,
     2   CHARSUB*3,SUBID*11,SUBIDPREV*11,SUBARRAY(MAXSUB)*11,
     3   PATH*60,TMPFILE*13,PATHFILE*73
    1   FORMAT(A1000)
	NDRUG = 0
	NOUT = 0
      DO ISUB = 1,MAXSUB
       NSST(ISUB) = 0
      END DO
	READ(66,*)
	  READ(66,1) READLINE
        NCOMMA = 0
        DO ISTART = 1,1000
         IF(READLINE(ISTART:ISTART) .EQ. ',') THEN
          NCOMMA = NCOMMA + 1
         ENDIF
        END DO
        NCOVA = NCOMMA - 11
	IF(NCOVA .GT. 0) THEN
	REWIND(66)
  120	READ(66,1) READLINE
	IF(READLINE(1:3) .NE. '#ID' .AND. READLINE(1:4).NE. '"#ID'
     1  .AND. READLINE(1:3) .NE. '#id' .AND. READLINE(1:4).NE. '"#id')
     2   GO TO 120
	 DO ICOV = 1,NCOVA
	  CALL AFTERCOMMA(NCOVA,READLINE,11+ICOV)
	  BACKSPACE(57)
	  READ(57,2) COVNAME(ICOV)
    2   FORMAT(A11)
	  CLOSE(57)
	 END DO
	ENDIF
      TIMADD = 0
      IF(ICALL .EQ. 1) THEN
	CALL GETMAXTIM(NCOVA,TIMAX)
	IF(TIMAX .LT. 0) THEN
	 WRITE(*,11)
   11    FORMAT(/' THERE IS SOMETHING WRONG WITH YOUR BLOCK FORMAT'/
     1' FILE. THE TIMES IN COLUMN 3 AND/OR THE TIME DURATIONS'/
     2' IN COLUMN 4 ARE BAD. PLEASE CHECK YOUR VALUES. '//
     3' THE PROGRAM STOPS.')
        OPEN(42,FILE=ERRFIL)
         WRITE(42,11)
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
   	TIMADD = TIMAX + 1.D0
      ENDIF
	REWIND(66)
	READ(66,1)
	READ(66,1)
	SUBIDPREV = '%^&*'
	NSUB = 0
   10	READ(66,1,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) GO TO 100
	IF(READLINE(1:1) .EQ. '#' .OR. READLINE(1:2) .EQ. '"#') GO TO 10
	CALL AFTERCOMMA(NCOVA,READLINE,0)
	BACKSPACE(57)
	READ(57,2) SUBID
	CLOSE(57)
	CALL GETID(SUBID)
	IF(SUBID .NE. SUBIDPREV) THEN
	 SUBIDPREV = SUBID
	 NSUB = NSUB + 1
	 WRITE(*,8888) NSUB
 8888    FORMAT('+ ',' NOW WORKING ON SUBJECT NO. ',I4)
	 SUBARRAY(NSUB) = SUBID
	 NTIMALL(NSUB) = 0
	 DO K = 1,7
	  NTIMIV(NSUB,K) = 0
	  NTIMBOL(NSUB,K) = 0
	 END DO
	 DO K = 1,26
	  NTIMCOV(NSUB,K) = 0
	 END DO
        DO K = 1,6
         NTIMOUT(NSUB,K) = 0
         CSUB(NSUB,1,K) = C0P(K)
         CSUB(NSUB,2,K) = C1P(K)
         CSUB(NSUB,3,K) = C2P(K)
         CSUB(NSUB,4,K) = C3P(K)
        END DO
	NRESETADD = 0
	NRESET = 0
	TIMERESET = TIMADD*NRESET
       NRESETLAST = -1
       DOSELINEST(NSUB,1,100) = -99
	CALL AFTERCOMMA(NCOVA,READLINE,1)
	BACKSPACE(57)
	READ(57,*) IDEVENT
	CLOSE(57)
	IF(IDEVENT .NE. 1) THEN
	 WRITE(*,402) SUBARRAY(NSUB),IDEVENT
  402    FORMAT(/' THERE IS AN ERROR IN THE BLOCK FORMAT. FOR SUBJECT '/
     1 1X,A11,', THE FIRST EVENT ID IS NOT 1 AS REQUIRED. IT IS ',I3/
     3' THE PROGRAM STOPS.'/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,402) SUBARRAY(NSUB),IDEVENT
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	ENDIF
	CALL AFTERCOMMA(NCOVA,READLINE,1)
	BACKSPACE(57)
      READ(57,*,ERR=470) IDEVENT
	CLOSE(57)
      GO TO 480
  470  WRITE(*,471) NSUB,READLINE(1:75)
  471  FORMAT(/' THERE IS AN ERROR IN YOUR BLOCK FORMAT FILE FOR '/
     1' SUBJECT NO. ',I5,'. THERE IS NO EVENT ID. THE 1ST 75'/
     2' CHARACTERS OF THE LINE ARE:'/
     2A75//
     3' THE PROGRAM STOPS.'/)
	 WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,471) NSUB,READLINE(1:75)
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
  	 CALL PAUSE
	 STOP
  480  CONTINUE
	IF(IDEVENT .EQ. 4) THEN
	 NRESET = NRESET + 1
	 TIMERESET = TIMADD*NRESET
	ENDIF
	CALL AFTERCOMMA(NCOVA,READLINE,2)
	BACKSPACE(57)
	READ(57,*) TIMEVENT
	CLOSE(57)
      IF(TIMEVENT .LT. 0.D0) THEN
       IF(NRESET .GT. NRESETLAST) THEN
        NSST(NSUB) = NSST(NSUB) + 1
        IF(NSST(NSUB) .GT. 99) THEN
         WRITE(*,172) NSUB
  172    FORMAT(/' FOR SUBJECT NO. ',I5,' THE NO. OF STEADY STATE DOSE'/
     1' SETS IS MORE THAN 99, THE MAXIMUM ALLOWED. PLEASE RERUN THE'/
     2' PROGRAM AFTER REDUCING THE NO. OF STEADY STATE DOSE SETS TO'/
     3' NO MORE THAN 99.'//
     4' THE PROGRAM STOPS.'/)
	  WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,172) NSUB
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
        CALL PAUSE
        STOP
        ENDIF
        DOSELINEST(NSUB,NSST(NSUB),100) = NRESET
        DOSELINEST(NSUB,NSST(NSUB),1) = TIMEVENT
        DO I = 1,7
         DOSELINEST(NSUB,NSST(NSUB),2*I) = 0.D0
         DOSELINEST(NSUB,NSST(NSUB),2*I+1) = 0.D0
        END DO
        IF(NCOVA .GT. 0) THEN
         DO 110 ICOV = 1,NCOVA
          CALL AFTERCOMMA(NCOVA,READLINE,11+ICOV)
          BACKSPACE(57)
 	    READ(57,*,ERR=95) COVVAL
	    CLOSE(57)
          DOSELINEST(NSUB,NSST(NSUB),19+ICOV) = COVVAL
          GO TO 110
   95     DOSELINEST(NSUB,NSST(NSUB),19+ICOV) = -99.D0
  110    CONTINUE
        ENDIF
       IF(NRESET .GT. 0) THEN
        DO IOUTEQ = 1,MAXNUMEQ
         NTIMOUT(NSUB,IOUTEQ) = NTIMOUT(NSUB,IOUTEQ) + 1
         TIMOUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = TIMERESET
         OUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = -99.D0
        END DO
       ENDIF
       ENDIF
        CALL AFTERCOMMA(NCOVA,READLINE,3)
        BACKSPACE(57)
        READ(57,*,ERR=170) DUR
        CLOSE(57)
        CALL AFTERCOMMA(NCOVA,READLINE,4)
        BACKSPACE(57)
        READ(57,*,ERR=170) TOTDOS
        CLOSE(57)
        CALL AFTERCOMMA(NCOVA,READLINE,5)
        BACKSPACE(57)
        READ(57,*,ERR=170) IDRUGNO
	  IF(NDRUG .LT. IDRUGNO) NDRUG = IDRUGNO
        CLOSE(57)
        IF(DUR .LE. 0.D0)
     1   DOSELINEST(NSUB,NSST(NSUB),2*IDRUGNO) = 0.D0
        IF(DUR .GT. 0.D0)
     1   DOSELINEST(NSUB,NSST(NSUB),2*IDRUGNO) = TOTDOS/DUR
        DOSELINEST(NSUB,NSST(NSUB),2*IDRUGNO+1) = TOTDOS
       NRESETLAST = NRESET
       GO TO 10
  170  WRITE(*,171) NSUB,READLINE(1:75)
  171  FORMAT(/' THERE IS AN ERROR IN YOUR BLOCK FORMAT FILE FOR '/
     1' SUBJECT NO. ',I5,'. EITHER THE DURATION, THE DOSE, OR THE '/
     2' DRUG NUMBER IS MISSING. THE 1ST 75 CHARACTERS OF THE LINE ARE:'/
     2A75//
     3' THE PROGRAM STOPS.'/)
	 WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,171) NSUB,READLINE(1:75)
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
  	 CALL PAUSE
	 STOP
      ENDIF
	TIMEVENT = TIMEVENT + TIMERESET
	IF(IDEVENT .EQ. 0) THEN
	CALL AFTERCOMMA(NCOVA,READLINE,6)
	BACKSPACE(57)
	READ(57,*,ERR=30) YVAL
	CLOSE(57)
	CALL AFTERCOMMA(NCOVA,READLINE,7)
	BACKSPACE(57)
	READ(57,*,ERR=30) IOUTEQ
	IF(NOUT .LT. IOUTEQ) NOUT = IOUTEQ
	CLOSE(57)
	NTIMOUT(NSUB,IOUTEQ) = NTIMOUT(NSUB,IOUTEQ) + 1
	TIMOUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = TIMEVENT
	OUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = YVAL
	NRESETADD = 0
	GO TO 20
   30   WRITE(*,31) NSUB, TIMEVENT - TIMERESET
   31   FORMAT(/' THERE IS AN ERROR IN THE BLOCK FORMAT. FOR SUBJECT '/
     1' NO. ',I4,' AND TIME ',F10.4, ' A LINE HAS AN EVENT ID OF 0 IN'/
     2' COL. 2, INDICATING OBSERVED VALUE INFORMATION. BUT THERE IS '/
     3' EITHER NO OBSERVED VALUE IN COL. 7, OR NO OUTPUT EQUATION NO.'/
     4' IN ENTRY 8. '//
     3' THE PROGRAM STOPS.')
        WRITE(*,401) NSUB,SUBARRAY(NSUB)
  401   FORMAT(/' NOTE: THE ID FOR SUBJECT NO. ',I4,' IS ',A11/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,31) NSUB, TIMEVENT - TIMERESET
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
	CALL PAUSE
	STOP
   20 CONTINUE
        IMISSC0 = 0
        IMISSC1 = 0
        IMISSC2 = 0
        IMISSC3 = 0
        CALL AFTERCOMMA(NCOVA,READLINE,8)
        BACKSPACE(57)
        READ(57,*,ERR=230) C0
        CLOSE(57)
        GO TO 235
  230   IMISSC0 = 1
  235   CALL AFTERCOMMA(NCOVA,READLINE,9)
        BACKSPACE(57)
        READ(57,*,ERR=240) C1
        CLOSE(57)
        GO TO 245
  240   IMISSC1 = 1
  245   CALL AFTERCOMMA(NCOVA,READLINE,10)
        BACKSPACE(57)
        READ(57,*,ERR=250) C2
        CLOSE(57)
        GO TO 255
  250   IMISSC2 = 1
  255   CALL AFTERCOMMA(NCOVA,READLINE,11)
        BACKSPACE(57)
        READ(57,*,ERR=260) C3
        CLOSE(57)
        GO TO 265
  260   IMISSC3 = 1
  265   CONTINUE
        ISUMC = IMISSC0 + IMISSC1 + IMISSC2 + IMISSC3
        IF(ISUMC .EQ. 0) THEN
         CSUB(NSUB,1,IOUTEQ) = C0
         CSUB(NSUB,2,IOUTEQ) = C1
         CSUB(NSUB,3,IOUTEQ) = C2
         CSUB(NSUB,4,IOUTEQ) = C3
        ENDIF
        IF(ISUMC .NE. 0 .AND. ISUMC .NE. 4) THEN
         WRITE(*,231) NSUB, TIMEVENT - TIMERESET,IOUTEQ
  231    FORMAT(/' THERE IS AN ERROR IN THE BLOCK FORMAT. FOR SUBJECT '/
     1' NO. ',I4,' AND TIME ',F10.4, ' A LINE HAS AN EVENT ID OF 0 IN'/
     2' COL. 2, INDICATING OBSERVED VALUE INFORMATION, BUT THIS LINE'/
     3' HAS AN INCOMPLETE SET OF ASSAY COEFFICIENTS FOR OUTPUT EQ. '/
     4' NUMBER ',I3,'. THERE MUST BE EITHER 4 ASSAY COEFFICIENTS ON'/
     5' AN OUTPUT LINE, OR NONE (IF NO OUTPUT LINES FOR A PARTICULAR'/
     6' SUBJECT x OUTPUT EQ. COMBO HAVE ASSAY COEFFICIENTS, THEN THE'/
     7' POPULATION COEFFICIENTS WILL BE USED).'//
     8' THE PROGRAM STOPS.')
         WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,231) NSUB, TIMEVENT - TIMERESET,IOUTEQ
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
         CALL PAUSE
         STOP
        ENDIF
	ENDIF
	IF(IDEVENT .EQ. 1 .OR. IDEVENT .EQ. 4) THEN
	CALL AFTERCOMMA(NCOVA,READLINE,4)
	BACKSPACE(57)
	READ(57,*,ERR=40) TOTDOS
	CLOSE(57)
	CALL AFTERCOMMA(NCOVA,READLINE,3)
	BACKSPACE(57)
	READ(57,*,ERR=50) DUR
	CLOSE(57)
	CALL AFTERCOMMA(NCOVA,READLINE,5)
	BACKSPACE(57)
	READ(57,*,ERR=50) IDRUGNO
	IF(NDRUG .LT. IDRUGNO) NDRUG = IDRUGNO
	CLOSE(57)
	IF(DUR .GT. 0) THEN
	 NTIMALL(NSUB) = NTIMALL(NSUB) + 1
	 IF(NTIMALL(NSUB) .GT. 5000) THEN
	  WRITE(*,3001) NSUB
 3001     FORMAT(/' THE NO. OF LINES IN THE DOSAGE REGIMEN FOR SUBJECT'/
     1' NO. ',I5,' IS MORE THAN THE LIMIT OF 5000. PLEASE RERUN THE'/
     2' PROGRAM AFTER REDUCING THIS NO. TO BE LESS THAN 5000.'/)
	  WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3001) NSUB
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 TIMALL(NSUB,NTIMALL(NSUB)) = TIMEVENT
	 IF(IDEVENT .EQ. 4) THEN
	  IF(NRESETADD .EQ. 0) THEN
           DO IOUTEQ = 1,MAXNUMEQ
	    NTIMOUT(NSUB,IOUTEQ) = NTIMOUT(NSUB,IOUTEQ) + 1
            TIMOUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = TIMEVENT
   	    OUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = -99.D0
	   END DO
	   NRESETADD = 1
	  ENDIF
	 ENDIF
        ISAME = 0
        IF(NTIMIV(NSUB,IDRUGNO) .GT. 0)
     1   CALL THESAME(TIMEVENT,TIMIV(NSUB,IDRUGNO,NTIMIV(NSUB,IDRUGNO)),
     2 ISAME)
        IF(ISAME .EQ. 0) NTIMIV(NSUB,IDRUGNO) = NTIMIV(NSUB,IDRUGNO) + 1
        TIMIV(NSUB,IDRUGNO,NTIMIV(NSUB,IDRUGNO)) = TIMEVENT
        RATEIV(NSUB,IDRUGNO,NTIMIV(NSUB,IDRUGNO)) = TOTDOS/DUR
	 NTIMALL(NSUB) = NTIMALL(NSUB) + 1
	 IF(NTIMALL(NSUB) .GT. 5000) THEN
	  WRITE(*,3001) NSUB
	  WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3001) NSUB
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 TIMALL(NSUB,NTIMALL(NSUB)) = TIMEVENT + DUR
	 NTIMIV(NSUB,IDRUGNO) = NTIMIV(NSUB,IDRUGNO) + 1
	 TIMIV(NSUB,IDRUGNO,NTIMIV(NSUB,IDRUGNO)) = TIMEVENT + DUR
	 RATEIV(NSUB,IDRUGNO,NTIMIV(NSUB,IDRUGNO)) = 0.D0
	ENDIF
	IF(DUR .LE. 0) THEN
	 NTIMALL(NSUB) = NTIMALL(NSUB) + 1
	 IF(NTIMALL(NSUB) .GT. 5000) THEN
	  WRITE(*,3001) NSUB
	  WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3001) NSUB
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 TIMALL(NSUB,NTIMALL(NSUB)) = TIMEVENT
	 IF(IDEVENT .EQ. 4) THEN
	  IF(NRESETADD .EQ. 0) THEN
           DO IOUTEQ = 1,MAXNUMEQ
	    NTIMOUT(NSUB,IOUTEQ) = NTIMOUT(NSUB,IOUTEQ) + 1
            TIMOUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = TIMEVENT
   	    OUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = -99.D0
	   END DO
	   NRESETADD = 1
	  ENDIF
	 ENDIF
	 NTIMBOL(NSUB,IDRUGNO) = NTIMBOL(NSUB,IDRUGNO) + 1
	 TIMBOL(NSUB,IDRUGNO,NTIMBOL(NSUB,IDRUGNO)) = TIMEVENT
	 BOLUS(NSUB,IDRUGNO,NTIMBOL(NSUB,IDRUGNO)) = TOTDOS
	ENDIF
	GO TO 40
   50   WRITE(*,51) NSUB, TIMEVENT - TIMERESET
   51   FORMAT(/' THERE IS AN ERROR IN THE BLOCK FORMAT. FOR SUBJECT '/
     1' NO. ',I4,' AND TIME ',F10.4,' A LINE HAS A DOSAGE AMT., BUT NO'/
     2' DURATION (EVEN A BOLUS SHOULD HAVE A DURATION OF 0) IN '/
     3' ENTRY 4., OR NO DRUG NO. IN ENTRY 5.'//
     3' THE PROGRAM STOPS.')
	WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,51) NSUB,TIMEVENT - TIMERESET
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
	CALL PAUSE
	STOP
   40   CONTINUE
	IF(NCOVA .GT. 0) THEN
         DO 60 ICOV = 1,NCOVA
	  CALL AFTERCOMMA(NCOVA,READLINE,11+ICOV)
	  BACKSPACE(57)
 	  READ(57,*,ERR=70) COVVAL
	  CLOSE(57)
	  NTIMALL(NSUB) = NTIMALL(NSUB) + 1
	 IF(NTIMALL(NSUB) .GT. 5000) THEN
	  WRITE(*,3001) NSUB
	  WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3001) NSUB
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 TIMALL(NSUB,NTIMALL(NSUB)) = TIMEVENT
	 IF(IDEVENT .EQ. 4) THEN
	  IF(NRESETADD .EQ. 0) THEN
           DO IOUTEQ = 1,MAXNUMEQ
	    NTIMOUT(NSUB,IOUTEQ) = NTIMOUT(NSUB,IOUTEQ) + 1
            TIMOUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = TIMEVENT
   	    OUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = -99.D0
	   END DO
	   NRESETADD = 1
	  ENDIF
	 ENDIF
	  IF(NTIMCOV(NSUB,ICOV) .GT. 0) THEN
	   CALL THESAME(TIMEVENT,TIMCOV(NSUB,ICOV,NTIMCOV(NSUB,ICOV)),
     1                  ISAMETIME)
	   CALL THESAME(COVVAL,COV(NSUB,ICOV,NTIMCOV(NSUB,ICOV)),
     1                  ISAMECOV)
	   IF(ISAMETIME .EQ. 1 .AND. ISAMECOV .EQ. 1) GO TO 60
	   IF(ISAMETIME .EQ. 1 .AND. ISAMECOV .EQ. 0) THEN
            WRITE(*,41) NSUB,TIMEVENT-TIMERESET,ICOV,
     1       COV(NSUB,ICOV,NTIMCOV(NSUB,ICOV)),COVVAL
   41       FORMAT(/' FOR SUBJECT, 'I2,' AT TIME ',G12.4,', COVARIATE'/
     1' NO. ',I2,' WAS SET TO BOTH ',G12.4,' AND ',G12.4,'. YOU SHOULD'/
     2' CHECK YOUR BLOCK FILE. FOR NOW, THE FIRST VALUE WILL BE USED.')
	    GO TO 60
	   ENDIF
	  ENDIF
	  NTIMCOV(NSUB,ICOV) = NTIMCOV(NSUB,ICOV) + 1
	  TIMCOV(NSUB,ICOV,NTIMCOV(NSUB,ICOV)) = TIMEVENT
	  COV(NSUB,ICOV,NTIMCOV(NSUB,ICOV)) = COVVAL
	  GO TO 60
   70     CONTINUE
   60   CONTINUE
	ENDIF
	ENDIF
	GO TO 10
  100   CONTINUE
	IF(ICALL .EQ. 2) RETURN
      IF(IALLIN .EQ. 1 .AND. IVERIFY .EQ. 0) THEN
       DO ICOV = 1,NCOVA
        IF(ICOVTYPE(ICOV) .NE. 1) ICOVTYPE(ICOV) = 2
       END DO
       GO TO 1050
      ENDIF
	IF(NCOVA .GT. 0) THEN
	 WRITE(*,111) NCOVA
  111    FORMAT(/' YOUR BLOCK FORMAT PATIENT INFORMATION FILE SHOWS'/
     1' ',I2,' COVARIATES. EACH COVARIATE MUST BE SPECIFIED TO BE '/
     2' EITHER A PIECEWISE CONSTANT COVARIATE OR AN INTERPOLATED '/
     3' COVARIATE.'//
     4' A PIECEWISE CONSTANT COVARIATE WILL HAVE THE SAME VALUE FROM'/
     5' ONE EXPLICITLY CODED VALUE, THROUGH ALL INTERVEENING DOSE'/
     6' TIMES, TO THE NEXT EXPLICITLY CODED VALUE (WHEN IT WILL CHANGE).
     7 '//
     8' AN INTERPOLATED COVARIATE WILL HAVE INTERPOLATED VALUES FROM'/
     9' ONE EXPLICITY CODED VALUE, THROUGH ALL INTERVEENING DOSE '/
     1' TIMES, TO THE NEXT EXPLCITLY CODED VALUE.'//)
	 DO ICOV = 1,NCOVA
  130	  WRITE(*,112) COVNAME(ICOV)
  112     FORMAT(/' FOR COVARIATE ',A11/
     1'  ENTER 1 IF IT IS TO BE PIECEWISE CONSTANT; '/
     2'  ENTER 2 IF IT IS TO BE INTERPOLATED: ')
	  READ(*,*,ERR=130) ITYPE
	  IF(ITYPE .NE. 1 .AND. ITYPE .NE. 2) GO TO 130
	  ICOVTYPE(ICOV) = ITYPE
	 END DO
	ENDIF
 1050 CONTINUE
	DO JSUB = 1,NSUB
	 CALL GETCHAR(JSUB,CHARSUB)
	 NUMBER(JSUB) = CHARSUB
	END DO
	DO 1000 ISUB = 1,NSUB
	 PATFIL = 'XQZPJ'//NUMBER(ISUB)//'.ZMQ'
         TMPFILE = ' '
	 TMPFILE = PATFIL
	 CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	 OPEN(33,FILE=PATHFILE)
	 IF(NDRUG .GT. 7) THEN
	  WRITE(*,101) NDRUG
  101     FORMAT(/' NO. OF DRUGS IN THIS PATIENT DATA SET IS ',I2/
     1'  THIS IS MORE THAN 7, THE MAXIMUM --> PROGRAM STOPS.'/)
	  WRITE(*,401) ISUB,SUBARRAY(ISUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,101) NDRUG
         WRITE(42,401) ISUB,SUBARRAY(ISUB)
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 IF(NOUT .GT. MAXNUMEQ) THEN
	  WRITE(*,106) NOUT,MAXNUMEQ
  106     FORMAT(/' NO. OF OUTPUT EQS. THIS PATIENT DATA SET IS ',I2/
     1' THIS IS MORE THAN THE MAX. ALLOWED VALUE OF ',I2,'. SO THE'/
     2' PROGRAM STOPS.'/)
	  WRITE(*,401) ISUB,SUBARRAY(ISUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,106) NOUT,MAXNUMEQ
         WRITE(42,401) ISUB,SUBARRAY(ISUB)
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 IF(NCOVA .GT. 26) THEN
	  WRITE(*,103) NCOVA
  103     FORMAT(/' NO. OF COVARIATES IN THIS PATIENT DATA SET IS ',I3/
     1'  THIS IS MORE THAN 26, THE MAXIMUM --> PROGRAM STOPS.'/)
	  WRITE(*,401) ISUB,SUBARRAY(ISUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,103) NCOVA
         WRITE(42,401) ISUB,SUBARRAY(ISUB)
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 CALL TIMESET(MAXSUB,ISUB,SUBARRAY(ISUB),NTIMALL,TIMALL,NTIMI,
     1    TIMI)
	 CALL WRITEDOS(ISUB,NTIMIV,TIMIV,RATEIV,NTIMBOL,TIMBOL,BOLUS,
     1    NTIMCOV,TIMCOV,COV,ICOVTYPE,NDRUG,NCOVA,NOUT,NTIMOUT,
     2    TIMOUT,OUT,SUBARRAY(ISUB),COVNAME,MAXSUB,NTIMI,TIMI,TIMADD,
     3    CSUB,NSST,DOSELINEST,MAXNUMEQ)
 1000   CONTINUE
	RETURN
	END
	SUBROUTINE AFTERCOMMA(NCOVA,READLINE,NCOMMA)
	CHARACTER READLINE*1000,ERRFIL*20
      COMMON/ERROR/ERRFIL
    1   FORMAT(A1000)
	IF(NCOMMA .EQ. 0) THEN
	 ISTART = 0
	 GO TO 10
	ENDIF
	ICOMMA = 0
	DO ISTART = 1,300
	 IF(READLINE(ISTART:ISTART) .EQ. ',') THEN
	  ICOMMA = ICOMMA + 1
	  IF(ICOMMA .EQ. NCOMMA) GO TO 10
	 ENDIF
	END DO
	WRITE(*,2) NCOMMA,ICOMMA,READLINE
    2   FORMAT(/' THE FOLLOWING LINE WAS SUPPOSED TO HAVE AT LEAST ',I3/
     1' COMMAS, BUT IT HAD ONLY ',I3,' SO THE PROGRAM STOPS.'//
     2A1000)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,2) NCOMMA,ICOMMA,READLINE
        CLOSE(42)
	CALL PAUSE
	STOP
   10	ICOMMA = 0
	DO IEND = 1,300
	 IF(READLINE(IEND:IEND) .EQ. ',') THEN
	  ICOMMA = ICOMMA + 1
	  IF(ICOMMA .EQ. NCOMMA+1) GO TO 20
	 ENDIF
	END DO
	IF(NCOMMA .LT. 11 + NCOVA) THEN
	 WRITE(*,2) NCOMMA+1,ICOMMA,READLINE
        OPEN(42,FILE=ERRFIL)
         WRITE(42,2) NCOMMA+1,ICOMMA,READLINE
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	IF(NCOMMA .EQ. 11 + NCOVA) IEND = 301
   20	  OPEN(57,STATUS='SCRATCH')
        NUMCHAR = IEND - ISTART - 1
        IF(NUMCHAR .EQ. 1) WRITE(57,101) READLINE(ISTART+1:IEND-1)
  101   FORMAT(A1)
        IF(NUMCHAR .EQ. 2) WRITE(57,102) READLINE(ISTART+1:IEND-1)
  102   FORMAT(A2)
        IF(NUMCHAR .EQ. 3) WRITE(57,103) READLINE(ISTART+1:IEND-1)
  103   FORMAT(A3)
        IF(NUMCHAR .EQ. 4) WRITE(57,104) READLINE(ISTART+1:IEND-1)
  104   FORMAT(A4)
        IF(NUMCHAR .EQ. 5) WRITE(57,105) READLINE(ISTART+1:IEND-1)
  105   FORMAT(A5)
        IF(NUMCHAR .EQ. 6) WRITE(57,106) READLINE(ISTART+1:IEND-1)
  106   FORMAT(A6)
        IF(NUMCHAR .EQ. 7) WRITE(57,107) READLINE(ISTART+1:IEND-1)
  107   FORMAT(A7)
        IF(NUMCHAR .EQ. 8) WRITE(57,108) READLINE(ISTART+1:IEND-1)
  108   FORMAT(A8)
        IF(NUMCHAR .EQ. 9) WRITE(57,109) READLINE(ISTART+1:IEND-1)
  109   FORMAT(A9)
        IF(NUMCHAR .EQ. 10) WRITE(57,110) READLINE(ISTART+1:IEND-1)
  110   FORMAT(A10)
        IF(NUMCHAR .EQ. 11) WRITE(57,111) READLINE(ISTART+1:IEND-1)
  111   FORMAT(A11)
        IF(NUMCHAR .GT. 11) WRITE(57,*) READLINE(ISTART+1:IEND-1)
	RETURN
	END
	SUBROUTINE WRITEDOS(ISUB,NTIMIV,TIMIV,RATEIV,NTIMBOL,TIMBOL,
     1   BOLUS,NTIMCOV,TIMCOV,COV,ICOVTYPE,NDRUG,NCOVA,NOUT,NTIMOUT,
     2   TIMOUT,OUT,SUBID,COVNAME,MAXSUB,NTIMI,TIMI,TIMADD,CSUB,NSST,
     3   DOSELINEST,MAXNUMEQ)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION BOLVAL(7),COVVAL(26),XIVVAL(7),DOSELINE(650,43),
     1 TIMOUT(MAXSUB,MAXNUMEQ,650),TIMIV(MAXSUB,7,650),
     2 NTIMOUT(MAXSUB,MAXNUMEQ),
     2 NTIMIV(MAXSUB,7),RATEIV(MAXSUB,7,650),BOLUS(MAXSUB,7,650),
     3 OUT(MAXSUB,MAXNUMEQ,650),COV(MAXSUB,26,650),ICOVTYPE(26),
     4 TIMBOL(MAXSUB,7,650),NTIMBOL(MAXSUB,7),NTIMCOV(MAXSUB,26),
     5 TIMCOV(MAXSUB,26,650),INDIV(7),INDBOL(7),INDCOV(26),
     6 TIMI(5000),TIMORD(3900),BLOCKOUT(3900,MAXNUMEQ),
     7 CSUB(MAXSUB,4,MAXNUMEQ),
     7 NSST(MAXSUB),DOSELINEST(MAXSUB,99,100),DOSELINES(100)
	CHARACTER SUBID*11,COVNAME(26)*11,ERRFIL*20
      COMMON/ERROR/ERRFIL
	WRITE(33,301) SUBID
  301   FORMAT('  LAST AND FIRST NAMES ARE: ',A11)
	WRITE(33,302) SUBID
  302   FORMAT(' CHART NUMBER IS: ',A11//
     1' WARD NO, PATIENT AGE (YEARS), SEX, HEIGHT (INCHES),'/
     2' ETHNICITY FLAG, AND ETHNICITY DESCRIPTION (IF ANY)   FOLLOW ON'/
     3' THE NEXT 6 LINES:'/
     4'-99'/
     5'-99'/
     6'M'/
     7'-99'/
     8'1'/
     9'Ethnicity Description'//
     1' DATE OF FIRST THERAPY IS   1   1   08'/
     2'CCR ML/MIN/    0.00 150.00'/
     3'HOURS    MG     MG/HR    MCG/ML KG       MG/DL    60  .00 ')
	 WRITE(33,102) NDRUG
  102    FORMAT(/'     ',I1,' ... NO. OF DRUGS')
	 WRITE(33,104) NCOVA
  104    FORMAT('    ',I2,' ... NO. OF ADDITIONAL COVARIATES')
	WRITE(33,2) NTIMI + NSST(ISUB)
    2   FORMAT('   ',I3,' ... NO. OF DOSE EVENTS'//
     1'    TIME, IV/PO FOR EACH DRUG; ADDITIONAL COVARIATES IF ANY')
	DO IDRUG = 1,NDRUG
	 XIVVAL(IDRUG) = 0.D0
	 BOLVAL(IDRUG) = 0.D0
	END DO
	DO ICOV = 1,NCOVA
	 COVVAL(ICOV) = COV(ISUB,ICOV,1)
	END DO
	DO IDRUG = 1,NDRUG
	 INDIV(IDRUG) = 1
	 INDBOL(IDRUG) = 1
	END DO
	DO ICOV = 1,NCOVA
	 INDCOV(ICOV) = 1
	END DO
	NRESET = 0
	TIMERESET = TIMADD*NRESET
      NSSEVENTS = 1
      CALL THESAME(DOSELINEST(ISUB,1,100),0.D0,ISAME)
      IF(ISAME .EQ. 1) THEN
	 DOSELINES(1) = DOSELINEST(ISUB,1,1)
	 NENTRY = 1
	 DO IDRUG = 1,NDRUG
	  NENTRY = NENTRY+1
        DOSELINES(NENTRY) = DOSELINEST(ISUB,1,2*IDRUG)
	  NENTRY = NENTRY+1
	  DOSELINES(NENTRY) = DOSELINEST(ISUB,1,2*IDRUG+1)
	 END DO
       IF(NCOVA .GT. 0) THEN
	  DO ICOV = 1,NCOVA
	   NENTRY = NENTRY+1
	   DOSELINES(NENTRY) = DOSELINEST(ISUB,1,19+ICOV)
	  END DO
       ENDIF
       WRITE(33,1) (DOSELINES(J),J=1,NENTRY)
       NSSEVENTS = NSSEVENTS + 1
      ENDIF
	DO 1000 ITIM = 1,NTIMI
	 TIME = TIMI(ITIM)
       CALL THESAME(TIME,TIMADD*(NRESET+1),ISAMERESET)
       IF(TIME .GE. TIMADD*(NRESET+1)) THEN
	  NRESET = NRESET + 1
	  TIMERESET = TIMADD*NRESET
        IF(NSSEVENTS .LE. NSST(ISUB)) THEN
         XRESET = NRESET
         CALL THESAME(DOSELINEST(ISUB,NSSEVENTS,100),XRESET,ISAME)
         IF(ISAME .EQ. 1) THEN
          DOSELINES(1) = DOSELINEST(ISUB,NSSEVENTS,1)
          NENTRY = 1
          DO IDRUG = 1,NDRUG
           NENTRY = NENTRY+1
           DOSELINES(NENTRY) = DOSELINEST(ISUB,NSSEVENTS,2*IDRUG)
           NENTRY = NENTRY+1
           DOSELINES(NENTRY) = DOSELINEST(ISUB,NSSEVENTS,2*IDRUG+1)
          END DO
          IF(NCOVA .GT. 0) THEN
           DO ICOV = 1,NCOVA
            NENTRY = NENTRY+1
            DOSELINES(NENTRY) = DOSELINEST(ISUB,NSSEVENTS,19+ICOV)
           END DO
          ENDIF
          WRITE(33,1) (DOSELINES(J),J=1,NENTRY)
          NSSEVENTS = NSSEVENTS + 1
         ENDIF
        ENDIF
	 ENDIF
	DO IDRUG = 1,NDRUG
	 IF(INDBOL(IDRUG) .GT. NTIMBOL(ISUB,IDRUG)) TIMEB = -99.D0
	 IF(INDBOL(IDRUG) .LE. NTIMBOL(ISUB,IDRUG)) THEN
	  TIMEB = TIMBOL(ISUB,IDRUG,INDBOL(IDRUG))
	 ENDIF
	 CALL THESAME(TIME,TIMEB,ISAME)
	  IF(ISAME .EQ. 0) BOLVAL(IDRUG) = 0.D0
	  IF(ISAME .EQ. 1) THEN
	   BOLVAL(IDRUG) = BOLUS(ISUB,IDRUG,INDBOL(IDRUG))
	   INDBOL(IDRUG) = INDBOL(IDRUG) + 1
	  ENDIF
	 END DO
	DO ICOV = 1,NCOVA
	 IF(INDCOV(ICOV) .GT. NTIMCOV(ISUB,ICOV)) TIMEC = -99.D0
	 IF(INDCOV(ICOV) .LE. NTIMCOV(ISUB,ICOV)) THEN
	  TIMEC = TIMCOV(ISUB,ICOV,INDCOV(ICOV))
	 ENDIF
	 CALL THESAME(TIME,TIMEC,ISAME)
        IF(ISAME .EQ. 1) THEN
         COVVAL(ICOV) = COV(ISUB,ICOV,INDCOV(ICOV))
         INDCOV(ICOV) = INDCOV(ICOV) + 1
        ENDIF
	IF(ISAME .EQ. 0) THEN
	 INTERP = 1
	 IF(ICOVTYPE(ICOV) .EQ. 1 .OR. ICOVTYPE(ICOV) .EQ. 0)
     1    INTERP = 0
	 IF(TIMEC .LE. -99) INTERP = 0
	 IF(ISAMERESET .EQ. 1) INTERP = 0
	 IF(TIMEC .GE. TIMERESET + TIMADD) INTERP = 0
	 IF(INDCOV(ICOV) .EQ. 1) THEN
	  WRITE(*,111) ICOV
  111     FORMAT(/' THERE IS A MISTAKE IN THE BLOCK FORMAT PATIENT'/
     1' DATA FILE. THE FIRST VALUE FOR COVARIATE NO. ',I2,' WAS NOT'/
     2' SPECIFIED AT THE ORIGINAL TIME = 0, AS IS REQUIRED. PLEASE'/
     3' FIX THIS ERROR AND RERUN THE PROGRAM. '//)
	  WRITE(*,401) ISUB,SUBID
  401     FORMAT(/' NOTE: THE ID FOR SUBJECT NO. ',I4,' IS ',A11/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,111) ICOV
         WRITE(42,401) ISUB,SUBID
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 CLAST = COV(ISUB,ICOV,INDCOV(ICOV)-1)
	 IF(INTERP .EQ. 0) COVVAL(ICOV) = CLAST
	 IF(INTERP .EQ. 1) THEN
	  TLAST = TIMCOV(ISUB,ICOV,INDCOV(ICOV)-1) - TIMERESET
	  CNEXT = COV(ISUB,ICOV,INDCOV(ICOV))
	  TNEXT = TIMCOV(ISUB,ICOV,INDCOV(ICOV)) - TIMERESET
	  TIMEREAL = TIME - TIMERESET
	  COVVAL(ICOV) = (TIMEREAL-TLAST)/(TNEXT-TLAST) * (CNEXT-CLAST)
     1     + CLAST
	 ENDIF
	ENDIF
	 END DO
	DO IDRUG = 1,NDRUG
	 IF(INDIV(IDRUG) .GT. NTIMIV(ISUB,IDRUG)) TIMEI = -99.D0
	 IF(INDIV(IDRUG) .LE. NTIMIV(ISUB,IDRUG)) THEN
	  TIMEI = TIMIV(ISUB,IDRUG,INDIV(IDRUG))
	 ENDIF
	 CALL THESAME(TIME,TIMEI,ISAME)
	  IF(ISAME .EQ. 1) THEN
	   XIVVAL(IDRUG) = RATEIV(ISUB,IDRUG,INDIV(IDRUG))
	   INDIV(IDRUG) = INDIV(IDRUG) + 1
	  ENDIF
	 END DO
	 DOSELINE(ITIM,1) = TIME - TIMERESET
	 NENTRY = 1
	 DO IDRUG = 1,NDRUG
	  NENTRY = NENTRY+1
	  DOSELINE(ITIM,NENTRY) = XIVVAL(IDRUG)
	  NENTRY = NENTRY+1
	  DOSELINE(ITIM,NENTRY) = BOLVAL(IDRUG)
	 END DO
	 DO ICOV = 1,NCOVA
	  NENTRY = NENTRY+1
	  DOSELINE(ITIM,NENTRY) = COVVAL(ICOV)
	 END DO
       WRITE(33,1) (DOSELINE(ITIM,J),J=1,NENTRY)
    1  FORMAT(43(G19.9,1X))
 1000   CONTINUE
 1010   CONTINUE
        IF(NSSEVENTS .LE. NSST(ISUB)) THEN
          DOSELINES(1) = DOSELINEST(ISUB,NSSEVENTS,1)
          NENTRY = 1
          DO IDRUG = 1,NDRUG
           NENTRY = NENTRY+1
           DOSELINES(NENTRY) = DOSELINEST(ISUB,NSSEVENTS,2*IDRUG)
           NENTRY = NENTRY+1
           DOSELINES(NENTRY) = DOSELINEST(ISUB,NSSEVENTS,2*IDRUG+1)
          END DO
          IF(NCOVA .GT. 0) THEN
           DO ICOV = 1,NCOVA
            NENTRY = NENTRY+1
            DOSELINES(NENTRY) = DOSELINEST(ISUB,NSSEVENTS,19+ICOV)
           END DO
          ENDIF
          WRITE(33,1) (DOSELINES(J),J=1,NENTRY)
          NSSEVENTS = NSSEVENTS + 1
          GO TO 1010
        ENDIF
	WRITE(33,106) NOUT
  106   FORMAT(/'     ',I1,' ... NO. OF TOTAL OUTPUT EQUATIONS')
	CALL FIXOUTIM(MAXSUB,ISUB,SUBID,NOUT,NTIMOUT,TIMOUT,OUT,NTIMORD,
     1   TIMORD,BLOCKOUT,TIMADD,MAXNUMEQ)
      	WRITE(33,62) NTIMORD
   62   FORMAT('   ',I3,' ... NO. OF OBSERVED VALUE TIMES')
	DO I = 1,NTIMORD
	 WRITE(33,63) TIMORD(I),(BLOCKOUT(I,J),J=1,NOUT)
   63    FORMAT(7(G16.8,1X))
	END DO
	WRITE(33,303)
  303   FORMAT(/' COVARIATE NAMES AND VALUES (1ST, LAST, AND MEAN) FOLLO
     1W:')
	XMEAN = -99
	DO ICOV = 1,NCOVA
   	 WRITE(33,304) COVNAME(ICOV),COV(ISUB,ICOV,1),
     1    COV(ISUB,ICOV,NTIMCOV(ISUB,ICOV)),XMEAN
	END DO
  304   FORMAT(A11,3X,3(F15.5,1X))
	WRITE(33,306)
  306   FORMAT(/'ASSAY COEFFICIENTS FOLLOW, ONE SET FOR EACH OUTPUT EQUA
     1TION:')
        DO K = 1,NOUT
         WRITE(33,3061) (CSUB(ISUB,I,K),I=1,4)
        END DO
 3061   FORMAT(4(F17.8,1X))
	CLOSE(33)
	RETURN
	END
	SUBROUTINE THESAME(X1,X2,ISAME)
	IMPLICIT REAL*8(A-H,O-Z)
	ISAME = 0
	XDEL = DABS(X1-X2)
	IF(XDEL .LE. 1.D-10) ISAME = 1
	RETURN
	END
	SUBROUTINE GETID(SUBID)
	CHARACTER SUBID*11,SUB*11
	SUB = '           '
	DO I = 1,11
	 IF(SUBID(I:I) .NE. ',') SUB(I:I) = SUBID(I:I)
	 IF(SUBID(I:I) .EQ. ',') GO TO 10
	END DO
   10   SUBID = SUB
	RETURN
	END
	SUBROUTINE TIMESET(MAXSUB,ISUB,SUBID,NTIMALL,TIMALL,NTIMI,
     1    TIMI)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION TIMALL(MAXSUB,5000),NTIMALL(MAXSUB),TIMI(5000),
     1   TIM(5000)
	CHARACTER SUBID*11
	CALL THESAME(TIMALL(ISUB,1),0.D0,ISAME)
	DO I = 1,NTIMALL(ISUB)
	 TIM(I) = TIMALL(ISUB,I)
	END DO
	CALL PUTORDER(NTIMALL(ISUB),TIM)
	TIMELAST = -1.D39
	NTIMI = 0
	DO I = 1,NTIMALL(ISUB)
	 TIME = TIM(I)
	 CALL THESAME(TIME,TIMELAST,ISAME)
	 IF(ISAME .EQ. 1) GO TO 30
	  NTIMI = NTIMI + 1
	  TIMI(NTIMI) = TIME
	  TIMELAST = TIME
   30    CONTINUE
	END DO
	RETURN
	END
	SUBROUTINE PUTORDER(NX,XX)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION XX(5000),Y(5000),IZ(5000),IZZ(5000)
	 DO I=1,NX
	  Y(I) = XX(I)
	  IZ(I) = -99
	 END DO
	 DO IPLACE = 1,NX
	  TEMP = 1.D50
	  DO I=1,NX
	   IF(Y(I) .LT. TEMP .AND. IZ(I) .EQ. -99) THEN
	    TEMP = Y(I)
	    IND = I
	   ENDIF
	  END DO
	  IZZ(IPLACE) = IND
	  IZ(IND) = 0
	 END DO
	 DO I = 1,NX
	  XX(I) = Y(IZZ(I))
	 END DO
	RETURN
	END
	SUBROUTINE FIXOUTIM(MAXSUB,ISUB,SUBID,NOUT,NTIMOUT,TIMOUT,OUT,
     1   NTIMORD,TIMORD,BLOCKOUT,TIMADD,MAXNUMEQ)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION TIMOUT(MAXSUB,MAXNUMEQ,650),NTIMOUT(MAXSUB,MAXNUMEQ),
     1 IENTRY(MAXNUMEQ),OUT(MAXSUB,MAXNUMEQ,650),TIMORD(3900),
     2 BLOCKOUT(3900,MAXNUMEQ)
	CHARACTER SUBID*11,ERRFIL*20
      COMMON/ERROR/ERRFIL
	DO IOUT = 1,NOUT
	 IENTRY(IOUT) = 1
	END DO
	INEXT = 1
   20	TIMENEXT = 1.D50
	 IANOTHER = 0
        DO IOUT	= 1,NOUT
	 IF(IENTRY(IOUT) .LE. NTIMOUT(ISUB,IOUT)) THEN
	  IANOTHER = 1
	  IF(TIMOUT(ISUB,IOUT,IENTRY(IOUT)) .LE. TIMENEXT)
     1     TIMENEXT = TIMOUT(ISUB,IOUT,IENTRY(IOUT))
	 ENDIF
	END DO
	IF(IANOTHER .EQ. 0) GO TO 100
	IF(INEXT .GT. 3900) THEN
	 WRITE(*,1)
    1    FORMAT(/' THE TOTAL NO. OF OBSERVATION TIMES IS GREATER THAN'/
     1' THE MAXIMUM ALLOWABLE VALUE OF 3900 (SUBROUTINE FIXOUTIM).'/
     2' RERUN THE PROGRAM AFTER REDUCING THE NO. OF OBS. TIMES.'/)
	 WRITE(*,401) ISUB,SUBID
  401    FORMAT(/' NOTE: THE ID FOR SUBJECT NO. ',I4,' IS ',A11/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,1)
         WRITE(42,401) ISUB,SUBID
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	TIMORD(INEXT) = TIMENEXT
        DO IOUT	= 1,NOUT
	  BLOCKOUT(INEXT,IOUT) = -99.D0
	  CALL THESAME(TIMENEXT,TIMOUT(ISUB,IOUT,IENTRY(IOUT)),ISAME)
	  IF(ISAME .EQ. 1) THEN
	   BLOCKOUT(INEXT,IOUT) = OUT(ISUB,IOUT,IENTRY(IOUT))
	   IENTRY(IOUT) = IENTRY(IOUT) + 1
	  ENDIF
	END DO
	INEXT = INEXT + 1
	GO TO 20
  100   NTIMORD = INEXT - 1
	NRESET = 0
	TIMERESET = TIMADD*NRESET
	DO I = 1,NTIMORD
	 CALL THESAME(TIMORD(I),TIMADD*(NRESET+1),ISAME)
	 IF(ISAME .EQ. 1) THEN
	  NRESET = NRESET + 1
	  TIMERESET = TIMADD*NRESET
	 ENDIF
	 TIMORD(I) = TIMORD(I) - TIMERESET
	END DO
	RETURN
	END
	SUBROUTINE GETMAXTIM(NCOVA,TIMAX)
	IMPLICIT REAL*8(A-H,O-Z)
	CHARACTER READLINE*1000
      WRITE(*,103)
  103 FORMAT(' FINDING THE MAXIMUM TIME OVER ALL SUBJECTS ... '/)
	TIMAX = -1.D0
   10   READ(66,1,IOSTAT=IEND) READLINE
    1   FORMAT(A1000)
	IF(IEND .LT. 0) RETURN
	IF(READLINE(1:1) .EQ. '#' .OR. READLINE(1:2) .EQ. '"#') GO TO 10
	 CALL AFTERCOMMA(NCOVA,READLINE,2)
	 BACKSPACE(57)
	 READ(57,*) TIMEVENT
	 CLOSE(57)
	 CALL AFTERCOMMA(NCOVA,READLINE,3)
	 BACKSPACE(57)
	 READ(57,*,ERR=15) TIMDUR
	 GO TO 20
   15  TIMDUR = 0.D0
   20  TIME = TIMEVENT + TIMDUR
	 CLOSE(57)
	 IF(TIMAX .LT. TIME) TIMAX = TIME
      WRITE(*,104) TIME,TIMAX
  104 FORMAT(' TIME AND MAX TIME ARE: ',2(G20.10,2X))
	 GO TO 10
	END
	SUBROUTINE GETCOVR2(NCOV,DESCR)
	IMPLICIT REAL*8(A-H,O-Z)
	CHARACTER READLINE*1000,DESCR(26)*20
    2   FORMAT(A20)
   33   FORMAT(A1000)
	REWIND(27)
   10	READ(27,33) READLINE
	IF(READLINE(12:28) .NE. 'NO. OF ADDITIONAL') GO TO 10
	BACKSPACE(27)
    3   FORMAT(T2,I5)
        READ(27,3) NADD
	NCOV = 4 + NADD
   20	READ(27,33) READLINE
	IF(READLINE(2:16) .NE. 'COVARIATE NAMES') GO TO 20
        IF(NCOV .GT. 4) THEN
         DO J = 1,NCOV-4
          READ(27,33) READLINE
          DO I = 3,20
           IF(READLINE(I:I) .EQ. ' ') GO TO 30
          END DO
   30     DESCR(J) = READLINE(1:I-1)
         END DO
        ENDIF
     	DESCR(NCOV-3) = 'AGE'
	DESCR(NCOV-2) = 'SEX'
	DESCR(NCOV-1) = 'HEIGHT'
	DESCR(NCOV) = 'ETHNICITY FLAG'
	REWIND(27)
	RETURN
	END
	SUBROUTINE GETNSUB(NSUB)
	CHARACTER READLINE*1000,ERRFIL*20
      COMMON/ERROR/ERRFIL
    2   FORMAT(A1000)
   10   READ(25,2) READLINE
	ILINE=0
	 DO I=1,51
	  IF(READLINE(I:I+21) .EQ. 'THE NO. OF SUBJECTS IS') THEN
	   ILINE=1
	   GO TO 20
	  ENDIF
	 END DO
   20   IF(ILINE .EQ. 0) GO TO 10
	 IEND = 0
	 ISTART = 0
	  DO J = I+22, 72
	   IF(ISTART .EQ. 0 .AND. READLINE(J:J) .NE. ' ') ISTART = J
	   IF(ISTART .NE. 0 .AND. READLINE(J:J) .EQ. ' ') THEN
	    IEND = J-1
	    GO TO 30
	   ENDIF
	  END DO
   30	ISIZE = IEND-ISTART
	IF(ISIZE .GT. 3) THEN
	 WRITE(*,*)' NSUB IS ',NSUB,' WHICH IS TOO LARGE. '
	 WRITE(*,*)' THE PROGRAM STOPS. '
        OPEN(42,FILE=ERRFIL)
        WRITE(42,*)' NSUB IS ',NSUB,' WHICH IS TOO LARGE. '
        WRITE(42,*)' THE PROGRAM STOPS. '
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	NSUB = 0
	 DO K=ISTART,IEND
	  IF(READLINE(K:K) .EQ. '0') IVAL = 0
	  IF(READLINE(K:K) .EQ. '1') IVAL = 1
	  IF(READLINE(K:K) .EQ. '2') IVAL = 2
	  IF(READLINE(K:K) .EQ. '3') IVAL = 3
	  IF(READLINE(K:K) .EQ. '4') IVAL = 4
	  IF(READLINE(K:K) .EQ. '5') IVAL = 5
	  IF(READLINE(K:K) .EQ. '6') IVAL = 6
	  IF(READLINE(K:K) .EQ. '7') IVAL = 7
	  IF(READLINE(K:K) .EQ. '8') IVAL = 8
	  IF(READLINE(K:K) .EQ. '9') IVAL = 9
	  NSUB = NSUB + IVAL*10**ISIZE
	  ISIZE = ISIZE-1
	 END DO
	RETURN
	END
        SUBROUTINE PAUSE
        WRITE(*,1)
    1   FORMAT(' HIT ANY KEY TO CONTINUE: ')
        READ(*,*,ERR=10) IKEY
        IF(IKEY .EQ. 1) RETURN
   10   RETURN
        END
        SUBROUTINE NEWCSV
        IMPLICIT REAL*8(A-H,O-Z)
        CHARACTER READLINE*1000
   10   READ(77,4,IOSTAT=IEND) READLINE
    4   FORMAT(A1000)
        IF(IEND .LT. 0) GO TO 100
        DO IENDL = 1000,1,-1
         IF(READLINE(IENDL:IENDL) .NE. ' ') GO TO 20
        END DO
   20   CONTINUE
        DO I = 1,IENDL-2
         IF(READLINE(I:I+2) .EQ. ',.,') READLINE(I:I+2) = ',n,'
        END DO
        IF(READLINE(IENDL-1:IENDL) .EQ. ',.')
     1   READLINE(IENDL-1:IENDL) = ',n'
	IF(IENDL .LE. 26) THEN
	 WRITE(67,26) READLINE
   26    FORMAT(A26)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 51) THEN
	 WRITE(67,51) READLINE
   51    FORMAT(A51)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 76) THEN
	 WRITE(67,76) READLINE
   76    FORMAT(A76)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 101) THEN
	 WRITE(67,101) READLINE
  101    FORMAT(A101)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 126) THEN
	 WRITE(67,126) READLINE
  126    FORMAT(A126)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 151) THEN
	 WRITE(67,151) READLINE
  151    FORMAT(A151)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 176) THEN
	 WRITE(67,176) READLINE
  176    FORMAT(A176)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 201) THEN
	 WRITE(67,201) READLINE
  201    FORMAT(A201)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 226) THEN
	 WRITE(67,226) READLINE
  226    FORMAT(A226)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 251) THEN
	 WRITE(67,251) READLINE
  251    FORMAT(A251)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 276) THEN
	 WRITE(67,276) READLINE
  276    FORMAT(A276)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 301) THEN
	 WRITE(67,301) READLINE
  301    FORMAT(A301)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 326) THEN
	 WRITE(67,326) READLINE
  326    FORMAT(A326)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 351) THEN
	 WRITE(67,351) READLINE
  351    FORMAT(A351)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 376) THEN
	 WRITE(67,376) READLINE
  376    FORMAT(A376)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 401) THEN
	 WRITE(67,401) READLINE
  401    FORMAT(A401)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 426) THEN
	 WRITE(67,426) READLINE
  426    FORMAT(A426)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 451) THEN
	 WRITE(67,451) READLINE
  451    FORMAT(A451)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 476) THEN
	 WRITE(67,476) READLINE
  476    FORMAT(A476)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 501) THEN
	 WRITE(67,501) READLINE
  501    FORMAT(A501)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 526) THEN
	 WRITE(67,526) READLINE
  526    FORMAT(A526)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 551) THEN
	 WRITE(67,551) READLINE
  551    FORMAT(A551)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 576) THEN
	 WRITE(67,576) READLINE
  576    FORMAT(A576)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 601) THEN
	 WRITE(67,601) READLINE
  601    FORMAT(A601)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 626) THEN
	 WRITE(67,626) READLINE
  626    FORMAT(A626)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 651) THEN
	 WRITE(67,651) READLINE
  651    FORMAT(A651)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 676) THEN
	 WRITE(67,676) READLINE
  676    FORMAT(A676)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 701) THEN
	 WRITE(67,701) READLINE
  701    FORMAT(A701)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 726) THEN
	 WRITE(67,726) READLINE
  726    FORMAT(A726)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 751) THEN
	 WRITE(67,751) READLINE
  751    FORMAT(A751)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 776) THEN
	 WRITE(67,776) READLINE
  776    FORMAT(A776)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 801) THEN
	 WRITE(67,801) READLINE
  801    FORMAT(A801)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 826) THEN
	 WRITE(67,826) READLINE
  826    FORMAT(A826)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 851) THEN
	 WRITE(67,851) READLINE
  851    FORMAT(A851)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 876) THEN
	 WRITE(67,876) READLINE
  876    FORMAT(A876)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 901) THEN
	 WRITE(67,901) READLINE
  901    FORMAT(A901)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 926) THEN
	 WRITE(67,926) READLINE
  926    FORMAT(A926)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 951) THEN
	 WRITE(67,951) READLINE
  951    FORMAT(A951)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 976) THEN
	 WRITE(67,976) READLINE
  976    FORMAT(A976)
	 GO TO 10
	ENDIF
	WRITE(67,4) READLINE
	GO TO 10
  100   CLOSE(77)
        REWIND(67)
        RETURN
        END
       SUBROUTINE WORKTOCSV(NSUBTOT,PATH,PREFIX,EXT,OUTCSVNAME,
     1 MAXNUMEQ)
        PARAMETER(MAXSUB=10000)
        IMPLICIT REAL*8(A-H,O-Z)
       DIMENSION SIG(4000),RS(4000,34),YO(594,MAXNUMEQ),C0(MAXNUMEQ),
     1 C1(MAXNUMEQ),C2(MAXNUMEQ),C3(MAXNUMEQ),TIM(594)
        CHARACTER PREFIX*5,EXT*3,NUMBER(MAXSUB)*3,PATFIL*13,PATH*60,
     1   TMPFILE*13,PATHFILE*73,SUBID*11,DESCR(26)*20,OUTCSVNAME*12,
     2   PATHFILE2*73,TOPLINE*1000,TOP1*50,READLINE*80,CHARSUB*3,
     3   COVTIGHT*550,CODE*14
        CODE = 'POPDATA APR_11'
         TMPFILE = ' '
         TMPFILE = OUTCSVNAME
         CALL FULLNAME(PATH,TMPFILE,PATHFILE2)
         OPEN(29,FILE=PATHFILE2)
        DO ISUB = 1,NSUBTOT
         CALL GETCHAR(ISUB,CHARSUB)
         NUMBER(ISUB) = CHARSUB
        END DO
	DO 1000 ISUB = 1,NSUBTOT
	 PATFIL = PREFIX//NUMBER(ISUB)//'.'//EXT
         TMPFILE = ' '
         TMPFILE = PATFIL
         CALL FULLNAME(PATH,TMPFILE,PATHFILE)
         OPEN(33,FILE=PATHFILE)
         READ(33,9) SUBID
    9    FORMAT(T29,A11)
	CALL GETID(SUBID)
         IF(ISUB .EQ. 1) THEN
          WRITE(29,14) CODE
   14     FORMAT(A14)
          CALL GETCOVNAME(NCOVA,DESCR)
          TOP1 = '#ID,EVID,TIME,DUR,DOSE,INPUT,OUT,OUTEQ,C0,C1,C2,C3'
          TOPLINE = TOP1
          IF(NCOVA .GT. 0) THEN
           CALL COVSTRING(NCOVA,DESCR,COVTIGHT,NCOVTIGHT)
           TOPLINE = TOP1//COVTIGHT(1:NCOVTIGHT)
          ENDIF
          CALL CONDENSE(TOPLINE)
         ENDIF
   10	   READ(33,22) READLINE
   22    FORMAT(A80)
         IF(READLINE(12:23) .NE. 'NO. OF DRUGS') GO TO 10
         BACKSPACE(33)
         READ(33,13) NDRUG
   13    FORMAT(T2,I5)
         READ(33,*)
         NI = 2*NDRUG + NCOVA
         READ(33,13) ND
         READ(33,*)
         READ(33,*)
         IF(ND.EQ.0) GO TO 40
         DO I = 1,ND
          READ(33,*) SIG(I),(RS(I,J),J=1,NI)
         END DO
   40	   READ(33,22) READLINE
         IF(READLINE(12:23) .NE. 'NO. OF TOTAL') GO TO 40
         BACKSPACE(33)
         READ(33,13) NUMEQT
         READ(33,13) M
         DO I=1,M
          READ(33,*) TIM(I),(YO(I,J),J=1,NUMEQT)
         END DO
   50	   READ(33,22) READLINE
	   IF(READLINE(1:18) .NE. 'ASSAY COEFFICIENTS') GO TO 50
         IF(READLINE(20:25) .EQ. 'FOLLOW') THEN
          DO IEQ = 1,NUMEQT
           READ(33,*) C0(IEQ),C1(IEQ),C2(IEQ),C3(IEQ)
          END DO
         ENDIF
         IF(READLINE(20:25) .NE. 'FOLLOW') THEN
          DO IEQ = 1,NUMEQT
           C0(IEQ) = 0.D0
           C1(IEQ) = 0.D0
           C2(IEQ) = 0.D0
           C3(IEQ) = 0.D0
          END DO
         ENDIF
         CLOSE(33)
         CALL WRITECSV(SUBID,NDRUG,NCOVA,ND,SIG,RS,NUMEQT,M,TIM,YO,C0,
     1    C1,C2,C3,MAXNUMEQ)
 1000   CONTINUE
        CLOSE(29)
        RETURN
        END
	SUBROUTINE GETCOVNAME(NCOVA,DESCR)
	IMPLICIT REAL*8(A-H,O-Z)
	CHARACTER READLINE*1000,DESCR(26)*20
    2   FORMAT(A20)
   33   FORMAT(A1000)
        REWIND(33)
   10	READ(33,33) READLINE
	IF(READLINE(12:28) .NE. 'NO. OF ADDITIONAL') GO TO 10
	BACKSPACE(33)
    3 FORMAT(T2,I5)
      READ(33,3) NCOVA
   20	READ(33,33) READLINE
	IF(READLINE(2:16) .NE. 'COVARIATE NAMES') GO TO 20
        IF(NCOVA .GT. 0) THEN
         DO J = 1,NCOVA
          READ(33,33) READLINE
          DO I = 3,20
           IF(READLINE(I:I) .EQ. ' ') GO TO 30
          END DO
   30     DESCR(J) = READLINE(1:I-1)
         END DO
        ENDIF
	REWIND(33)
	RETURN
	END
        SUBROUTINE WRITECSV(SUBID,NDRUG,NCOVA,ND,SIG,RS,NUMEQT,M,TIM,
     1   YO,C0,C1,C2,C3,MAXNUMEQ)
        IMPLICIT REAL*8(A-H,O-Z)
       DIMENSION SIG(4000),RS(4000,34),YO(594,MAXNUMEQ),
     1 C0(MAXNUMEQ),C1(MAXNUMEQ),C2(MAXNUMEQ),C3(MAXNUMEQ),
     2 TIM(594),BS(4000,7),NOIV(7),AMTIV(7,4000),DURIV(7,4000),
     3 IVDOSE(7,4000)
        CHARACTER SUBID*11,DOSESTRING*12,OBSSTRING*52,BIGLINE*1000,
     1   SMALLLINE*1000
        IDOSENEXT = 0
        DO IDOSE = 1,ND
         DO JDRUG = 1,NDRUG
          BS(IDOSE,JDRUG) = RS(IDOSE,2*JDRUG)
         END DO
        END DO
        TIMOBSMAX = -1.D39
        DO I = 1,M
         IF(TIM(I) .GT. TIMOBSMAX) TIMOBSMAX = TIM(I)
        END DO
        DO JDRUG = 1,NDRUG
         NOIV(JDRUG) = 0
         IDOSE = 0
   40    IDOSE = IDOSE + 1
          IF(IDOSE .GT. ND) GO TO 60
          CALL THESAME(RS(IDOSE,2*JDRUG-1),0.D0,ISAME)
          IF(ISAME .EQ. 0) THEN
           PREVIV = RS(IDOSE,2*JDRUG-1)
           IIDOSE = IDOSE
   50      IIDOSE = IIDOSE + 1
            CALL THESAME(SIG(IIDOSE),0.D0,ISAME)
            IF(ISAME .EQ. 1) THEN
             TIMIV = TIMOBSMAX - SIG(IDOSE)
             TOTIV = TIMIV*RS(IDOSE,2*JDRUG-1)
             GO TO 30
            ENDIF
            CALL THESAME(RS(IIDOSE,2*JDRUG-1),PREVIV,ISAME)
            IF(ISAME .EQ. 0) THEN
             TIMIV = SIG(IIDOSE) - SIG(IDOSE)
             TOTIV = TIMIV*RS(IDOSE,2*JDRUG-1)
             GO TO 30
            ENDIF
           IF(IIDOSE .LT. ND) GO TO 50
            TIMIV = TIMOBSMAX - SIG(IDOSE)
            TOTIV = TIMIV*RS(IDOSE,2*JDRUG-1)
            IIDOSE = ND + 1
   30      NOIV(JDRUG) = NOIV(JDRUG) + 1
           AMTIV(JDRUG,NOIV(JDRUG)) = TOTIV
           DURIV(JDRUG,NOIV(JDRUG)) = TIMIV
           IVDOSE(JDRUG,NOIV(JDRUG)) = IDOSE
           IDOSE = IIDOSE - 1
           GO TO 40
          ENDIF
         GO TO 40
   60    CONTINUE
        END DO
        DOSESTRING = ',.,.,.,.,.,.'
        DO I = 1,52
         OBSSTRING(I:I) = ' '
        END DO
        IF(NCOVA .GE. 1) THEN
         OBSSTRING(1:2) = ',.'
         ILASTOBS = 2
        ENDIF
        IF(NCOVA .GT. 1) THEN
         DO ICOVA = 2,NCOVA
          DO I = 52,1,-1
           IF(OBSSTRING(I:I) .NE. ' ') GO TO 65
          END DO
   65     ILAST = I
          OBSSTRING = OBSSTRING(1:ILAST)//',.'
         END DO
         ILASTOBS = ILAST + 2
        ENDIF
        IDOSE = 1
        IOBS = 1
  100   CONTINUE
        IF(IOBS .GT. M .AND. IDOSE .GT. ND) RETURN
        IF(IOBS .GT. M) GO TO 10
        IF(IDOSE .GT. ND) GO TO 20
        IDOSERESET = 0
        CALL THESAME(SIG(IDOSE),0.D0,ISAME)
        IF(ISAME .EQ. 1 .AND. IDOSE .GT. 1) IDOSERESET = 1
        IOBSRESET = 0
        CALL THESAME(TIM(IOBS),0.D0,ISAME)
        IF(ISAME .EQ. 1 .AND. IOBS .GT. 1) IOBSRESET = 1
        IF(IDOSERESET .EQ. 1 .AND. IOBSRESET .EQ. 1) THEN
         IDOSENEXT = 1
         GO TO 20
        ENDIF
        IF(IDOSERESET .EQ. 1 .AND. IOBSRESET .EQ. 0) GO TO 20
        IF(IDOSERESET .EQ. 0 .AND. IOBSRESET .EQ. 1) GO TO 10
        IF(SIG(IDOSE) .GE. TIM(IOBS)) GO TO 20
   10    CONTINUE
        IDEVENT = 1
        CALL THESAME(SIG(IDOSE),0.D0,ISAME)
        IF(ISAME .EQ. 1 .AND. IDOSE .GT. 1) IDEVENT = 4
         IDOSWRITE = 0
         DO JDRUG = 1,NDRUG
          CALL THESAME(BS(IDOSE,JDRUG),0.D0,ISAME)
          IF(ISAME .EQ. 0) THEN
           OPEN(37,STATUS='SCRATCH')
           IF(NCOVA .GT. 0) WRITE(37,13) SUBID,IDEVENT,SIG(IDOSE),
     1      BS(IDOSE,JDRUG),JDRUG,DOSESTRING,
     2      (RS(IDOSE,2*NDRUG+K),K=1,NCOVA)
   13      FORMAT(A11,',',I1,',',G14.7,',0,',G14.7,',',I1,A12,
     1      26(',',G14.7))
           IF(NCOVA .EQ. 0) WRITE(37,14) SUBID,IDEVENT,SIG(IDOSE),
     1      BS(IDOSE,JDRUG),JDRUG,DOSESTRING
   14      FORMAT(A11,',',I1,',',G14.7,',0,',G14.7,',',I1,A12)
           BACKSPACE(37)
           READ(37,12) BIGLINE
           CLOSE(37)
           CALL REDUCE(BIGLINE,SMALLLINE)
           CALL CONDENSE(SMALLLINE)
           IDOSWRITE = 1
           IDEVENT = 1
          ENDIF
          IF(NOIV(JDRUG) .GE. 1) THEN
           DO IN = 1,NOIV(JDRUG)
            IF(IVDOSE(JDRUG,IN) .EQ. IDOSE) THEN
             OPEN(37,STATUS='SCRATCH')
             IF(NCOVA .GT. 0) WRITE(37,16) SUBID,IDEVENT,SIG(IDOSE),
     1        DURIV(JDRUG,IN),AMTIV(JDRUG,IN),JDRUG,
     2        DOSESTRING,(RS(IDOSE,2*NDRUG+K),K=1,NCOVA)
   16        FORMAT(A11,',',I1,',',G14.7,',',G14.7,',',G14.7,',',I1,A12,
     1        26(',',G14.7))
             IF(NCOVA .EQ. 0) WRITE(37,17) SUBID,IDEVENT,SIG(IDOSE),
     1        DURIV(JDRUG,IN),AMTIV(JDRUG,IN),JDRUG,
     2        DOSESTRING
   17        FORMAT(A11,',',I1,',',G14.7,',',G14.7,',',G14.7,',',I1,A12)
             BACKSPACE(37)
             READ(37,12) BIGLINE
             CLOSE(37)
             CALL REDUCE(BIGLINE,SMALLLINE)
             CALL CONDENSE(SMALLLINE)
             IDOSWRITE = 1
             IDEVENT = 1
             GO TO 70
            ENDIF
           END DO
          ENDIF
   70     CONTINUE
         END DO
         IF(IDOSWRITE .EQ. 0) THEN
          OPEN(37,STATUS='SCRATCH')
          IF(NCOVA .GT. 0) WRITE(37,18) SUBID,IDEVENT,SIG(IDOSE),
     1     DOSESTRING,(RS(IDOSE,2*NDRUG+K),K=1,NCOVA)
   18     FORMAT(A11,',',I1,',',G14.7,',0,0,1',A12,26(',',G14.7))
          IF(NCOVA .EQ. 0) WRITE(37,19) SUBID,IDEVENT,SIG(IDOSE),
     1     DOSESTRING
   19     FORMAT(A11,',',I1,',',G14.7,',0,0,1',A12)
          BACKSPACE(37)
          READ(37,12) BIGLINE
          CLOSE(37)
          CALL REDUCE(BIGLINE,SMALLLINE)
          CALL CONDENSE(SMALLLINE)
         ENDIF
         IDOSE = IDOSE + 1
         IDOSENEXT = 0
         GO TO 100
   20   CONTINUE
         DO IEQ = 1,NUMEQT
          CALL THESAME(YO(IOBS,IEQ),-99.D0,ISAME)
          IF(ISAME .EQ. 0) THEN
           OPEN(37,STATUS='SCRATCH')
           IF(NCOVA .GT. 0) WRITE(37,11)SUBID,TIM(IOBS),YO(IOBS,IEQ),
     1      IEQ,C0(IEQ),C1(IEQ),C2(IEQ),C3(IEQ),OBSSTRING(1:ILASTOBS)
   11      FORMAT(A11,',0,',G14.7,',.,.,.,',G14.7,',',I1,',',
     1      G14.7,',',G14.7,',',G14.7,',',G14.7,A)
           IF(NCOVA .EQ. 0) WRITE(37,111)SUBID,TIM(IOBS),YO(IOBS,IEQ),
     1      IEQ,C0(IEQ),C1(IEQ),C2(IEQ),C3(IEQ)
  111      FORMAT(A11,',0,',G14.7,',.,.,.,',G14.7,',',I1,',',
     1      G14.7,',',G14.7,',',G14.7,',',G14.7)
           BACKSPACE(37)
           READ(37,12) BIGLINE
   12      FORMAT(A1000)
           CLOSE(37)
           CALL REDUCE(BIGLINE,SMALLLINE)
           CALL CONDENSE(SMALLLINE)
          ENDIF
         END DO
         IOBS = IOBS + 1
         IF(IDOSENEXT .EQ. 1) GO TO 10
         GO TO 100
        END
        SUBROUTINE REDUCE(BIGLINE,SMALLLINE)
        CHARACTER BIGLINE*1000,SMALLLINE*1000
        DO I = 1,1000
         SMALLLINE(I:I) = ' '
        END DO
        SMALLLINE(1:11) = BIGLINE(1:11)
        IENTRY = 11
        DO I = 12,1000
         IF(BIGLINE(I:I) .NE. ' ') THEN
          IENTRY = IENTRY + 1
          SMALLLINE(IENTRY:IENTRY) = BIGLINE(I:I)
         ENDIF
        END DO
        IF(SMALLLINE(IENTRY:IENTRY) .EQ. ',')
     1   SMALLLINE(IENTRY:IENTRY) = ' '
        RETURN
        END
        SUBROUTINE CONDENSE(READLINE)
        CHARACTER READLINE*1000
	DO IEND = 1000,1,-1
	 IF(READLINE(IEND:IEND) .NE. ' ') GO TO 20
	END DO
   20   CONTINUE
	IF(IEND .LE. 26) THEN
	 WRITE(29,26) READLINE
   26    FORMAT(A26)
	 RETURN
	ENDIF
	IF(IEND .LE. 51) THEN
	 WRITE(29,51) READLINE
   51    FORMAT(A51)
	 RETURN
	ENDIF
	IF(IEND .LE. 76) THEN
	 WRITE(29,76) READLINE
   76    FORMAT(A76)
	 RETURN
	ENDIF
	IF(IEND .LE. 101) THEN
	 WRITE(29,101) READLINE
  101    FORMAT(A101)
	 RETURN
	ENDIF
	IF(IEND .LE. 126) THEN
	 WRITE(29,126) READLINE
  126    FORMAT(A126)
	 RETURN
	ENDIF
	IF(IEND .LE. 151) THEN
	 WRITE(29,151) READLINE
  151    FORMAT(A151)
	 RETURN
	ENDIF
	IF(IEND .LE. 176) THEN
	 WRITE(29,176) READLINE
  176    FORMAT(A176)
	 RETURN
	ENDIF
	IF(IEND .LE. 201) THEN
	 WRITE(29,201) READLINE
  201    FORMAT(A201)
	 RETURN
	ENDIF
	IF(IEND .LE. 226) THEN
	 WRITE(29,226) READLINE
  226    FORMAT(A226)
	 RETURN
	ENDIF
	IF(IEND .LE. 251) THEN
	 WRITE(29,251) READLINE
  251    FORMAT(A251)
	 RETURN
	ENDIF
	IF(IEND .LE. 276) THEN
	 WRITE(29,276) READLINE
  276    FORMAT(A276)
	 RETURN
	ENDIF
	IF(IEND .LE. 301) THEN
	 WRITE(29,301) READLINE
  301    FORMAT(A301)
	 RETURN
	ENDIF
	IF(IEND .LE. 326) THEN
	 WRITE(29,326) READLINE
  326    FORMAT(A326)
	 RETURN
	ENDIF
	IF(IEND .LE. 351) THEN
	 WRITE(29,351) READLINE
  351    FORMAT(A351)
	 RETURN
	ENDIF
	IF(IEND .LE. 376) THEN
	 WRITE(29,376) READLINE
  376    FORMAT(A376)
	 RETURN
	ENDIF
	IF(IEND .LE. 401) THEN
	 WRITE(29,401) READLINE
  401    FORMAT(A401)
	 RETURN
	ENDIF
	IF(IEND .LE. 426) THEN
	 WRITE(29,426) READLINE
  426    FORMAT(A426)
	 RETURN
	ENDIF
	IF(IEND .LE. 451) THEN
	 WRITE(29,451) READLINE
  451    FORMAT(A451)
	 RETURN
	ENDIF
	IF(IEND .LE. 476) THEN
	 WRITE(29,476) READLINE
  476    FORMAT(A476)
	 RETURN
	ENDIF
	IF(IEND .LE. 501) THEN
	 WRITE(29,501) READLINE
  501    FORMAT(A501)
	 RETURN
	ENDIF
	IF(IEND .LE. 526) THEN
	 WRITE(29,526) READLINE
  526    FORMAT(A526)
	 RETURN
	ENDIF
	IF(IEND .LE. 551) THEN
	 WRITE(29,551) READLINE
  551    FORMAT(A551)
	 RETURN
	ENDIF
	IF(IEND .LE. 576) THEN
	 WRITE(29,576) READLINE
  576    FORMAT(A576)
	 RETURN
	ENDIF
	IF(IEND .LE. 601) THEN
	 WRITE(29,601) READLINE
  601    FORMAT(A601)
	 RETURN
	ENDIF
	IF(IEND .LE. 626) THEN
	 WRITE(29,626) READLINE
  626    FORMAT(A626)
	 RETURN
	ENDIF
	IF(IEND .LE. 651) THEN
	 WRITE(29,651) READLINE
  651    FORMAT(A651)
	 RETURN
	ENDIF
	IF(IEND .LE. 676) THEN
	 WRITE(29,676) READLINE
  676    FORMAT(A676)
	 RETURN
	ENDIF
	IF(IEND .LE. 701) THEN
	 WRITE(29,701) READLINE
  701    FORMAT(A701)
	 RETURN
	ENDIF
	IF(IEND .LE. 726) THEN
	 WRITE(29,726) READLINE
  726    FORMAT(A726)
	 RETURN
	ENDIF
	IF(IEND .LE. 751) THEN
	 WRITE(29,751) READLINE
  751    FORMAT(A751)
	 RETURN
	ENDIF
	IF(IEND .LE. 776) THEN
	 WRITE(29,776) READLINE
  776    FORMAT(A776)
	 RETURN
	ENDIF
	IF(IEND .LE. 801) THEN
	 WRITE(29,801) READLINE
  801    FORMAT(A801)
	 RETURN
	ENDIF
	IF(IEND .LE. 826) THEN
	 WRITE(29,826) READLINE
  826    FORMAT(A826)
	 RETURN
	ENDIF
	IF(IEND .LE. 851) THEN
	 WRITE(29,851) READLINE
  851    FORMAT(A851)
	 RETURN
	ENDIF
	IF(IEND .LE. 876) THEN
	 WRITE(29,876) READLINE
  876    FORMAT(A876)
	 RETURN
	ENDIF
	IF(IEND .LE. 901) THEN
	 WRITE(29,901) READLINE
  901    FORMAT(A901)
	 RETURN
	ENDIF
	IF(IEND .LE. 926) THEN
	 WRITE(29,926) READLINE
  926    FORMAT(A926)
	 RETURN
	ENDIF
	IF(IEND .LE. 951) THEN
	 WRITE(29,951) READLINE
  951    FORMAT(A951)
	 RETURN
	ENDIF
	IF(IEND .LE. 976) THEN
	 WRITE(29,976) READLINE
  976    FORMAT(A976)
	 RETURN
	ENDIF
	WRITE(29,4) READLINE
    4    FORMAT(A1000)
        RETURN
        END
        SUBROUTINE COVSTRING(NCOVA,DESCR,COVTIGHT,NCOVTIGHT)
        CHARACTER DESCR(26)*20,COVTIGHT*550,BIGLINE*1000
        DO I = 1,1000
         BIGLINE(I:I) = ' '
        END DO
        BIGLINE(1:21) = ','//DESCR(1)
        IF(NCOVA .GT. 1) THEN
        DO I = 2,NCOVA
         CALL CALCSTART(BIGLINE,ILAST)
         BIGLINE = BIGLINE(1:ILAST)//','//DESCR(I)
        END DO
        ENDIF
        NCOVTIGHT = ILAST + 20
        COVTIGHT = BIGLINE(1:NCOVTIGHT)
        RETURN
        END
        SUBROUTINE CALCSTART(BIGLINE,ILAST)
        CHARACTER BIGLINE*1000
        DO I = 1000,1,-1
         IF(BIGLINE(I:I) .NE. ' ') GO TO 10
        END DO
        ILAST = 0
        RETURN
   10   ILAST = I
        RETURN
        END
      SUBROUTINE CSVCHANGE
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION TIMENTRY(99999),IDENTRY(99999)
      CHARACTER READLINE*1000,CODEPAT*15,
     1 READLINE2*1000,HOLDMAT(99999)*1000,TIMCHAR*50,SUBID*11,
     2 SUBIDPREV*11,ERRFIL*20
      COMMON/ERROR/ERRFIL
    1 FORMAT(A1000)
    2 FORMAT(A20)
      OPEN(66)
      ICODEPAT = 0
    6 FORMAT(A15)
      ICODEPAT = -1
      READ(67,6) CODEPAT
      IF(CODEPAT .EQ. '"POPDATA DEC_11') ICODEPAT = 1
      IF(CODEPAT(1:14) .EQ. 'POPDATA DEC_11') ICODEPAT = 1
      IF(CODEPAT .EQ. '"POPDATA APR_11') ICODEPAT = 0
      IF(CODEPAT(1:14) .EQ. 'POPDATA APR_11') ICODEPAT = 0
      IF(ICODEPAT .EQ. -1) THEN
       WRITE(*,7)
    7  FORMAT(//' YOUR PATIENT DATA BLOCK FILE IS NOT FROM THE'/
     1' ALLOWABLE SET OF SUCH FILES.'//
     2' A PATIENT DATA BLOCK FILE MUST HAVE "POPDATA XXX_XX IN'/
     3' COLUMNS 1 THROUGH 15 ON LINE 1, WHERE  XXX_XX  IS APR_11 OR A '/
     4' MORE RECENT DATE.'//)
       WRITE(*,*)' THE PROGRAM STOPS.'
        OPEN(42,FILE=ERRFIL)
         WRITE(42,7)
         WRITE(42,*)' THE PROGRAM STOPS.'
        CLOSE(42)
       CALL PAUSE
       STOP
      ENDIF
      IF(ICODEPAT .EQ. 0) THEN
       CODEPAT = 'POPDATA APR_11'
       WRITE(66,6) CODEPAT
 1020  READ(67,1,IOSTAT=IEND) READLINE
        IF(IEND .LT. 0) THEN
         CLOSE(67)
         RETURN
        ENDIF
       WRITE(66,1) READLINE
       GO TO 1020
      ENDIF
      CODEPAT = 'POPDATA APR_11'
      WRITE(66,6) CODEPAT
      READ(67,1) READLINE
      DO I = 1,50
       IF(READLINE(I:I+7) .EQ. ',ADDL,II') THEN
        ISS = I
        GO TO 10
       ENDIF
      END DO
       WRITE(*,8)
    8  FORMAT(//' YOUR PATIENT DATA BLOCK FILE IS NOT FROM THE '/
     1' ALLOWABLE SET OF SUCH FILES.'//
     2' A PATIENT DATA BLOCK FILE MUST HAVE ",ADDL,II" AS THE 6TH AND'/
     3' 7TH COLUMN HEADINGS ON LINE 2.'//)
       WRITE(*,*)' THE PROGRAM STOPS.'
        OPEN(42,FILE=ERRFIL)
         WRITE(42,8)
         WRITE(42,*)' THE PROGRAM STOPS.'
        CLOSE(42)
       CALL PAUSE
       STOP
   10 CONTINUE
      READLINE2(1:ISS-1) = READLINE(1:ISS-1)
      READLINE2(ISS:992) = READLINE(ISS+8:1000)
      WRITE(66,1) READLINE2
        NCOMMA = 0
        DO ISTART = 1,1000
         IF(READLINE(ISTART:ISTART) .EQ. ',') THEN
          NCOMMA = NCOMMA + 1
         ENDIF
        END DO
        NCOVA = NCOMMA - 13
	SUBIDPREV = '%^&*'
	SUBID = '%^&*'
      NROW = 0
   20 READ(67,1,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) GO TO 100
      IF(READLINE(1:1) .EQ. '#') GO TO 20
	CALL AFTERCOMMA(NCOVA,READLINE,0)
	BACKSPACE(57)
	READ(57,222) SUBID
  222 FORMAT(A11)
	CLOSE(57)
	CALL GETID(SUBID)
      IF(SUBID .NE. SUBIDPREV) GO TO 100
	CALL AFTERCOMMA(NCOVA,READLINE,1)
	BACKSPACE(57)
	READ(57,*,ERR=470) IDEVENT
	CLOSE(57)
      GO TO 480
  470  WRITE(*,471) READLINE(1:75)
  471  FORMAT(/' THERE IS AN ERROR IN YOUR BLOCK FORMAT FILE FOR '/
     1' ONE OF YOUR SUBJECTS. THE EVENT ID IS MISSING. THE 1ST 75'/
     2' CHARACTERS OF THE LINE ARE: '/
     2A75//
     3' THE PROGRAM STOPS.'/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,471) READLINE(1:75)
        CLOSE(42)
  	 CALL PAUSE
	 STOP
 480  CONTINUE
      IF(IDEVENT .EQ. 0) THEN
       NROW = NROW + 1
       CALL GETCOM(NCOMMA,READLINE,I5,I7)
       HOLDMAT(NROW) = READLINE(1:I5)//READLINE(I7+1:1000)
      ENDIF
      IF(IDEVENT .EQ. 1 .OR. IDEVENT .EQ. 4) THEN
       CALL AFTERCOMMA(NCOVA,READLINE,5)
       BACKSPACE(57)
       READ(57,*,ERR=25) IADDL
       CLOSE(57)
       GO TO 30
   25  IADDL = 0
   30  CONTINUE
       IF(IADDL .GE. 0) THEN
        NROW = NROW + 1
        CALL GETCOM(NCOMMA,READLINE,I5,I7)
        HOLDMAT(NROW) = READLINE(1:I5)//READLINE(I7+1:1000)
       ENDIF
       IF(IADDL .GT. 0) THEN
	  CALL AFTERCOMMA(NCOVA,READLINE,6)
	  BACKSPACE(57)
	  READ(57,*,ERR=35) XII
	  CLOSE(57)
        GO TO 40
   35   WRITE(*,36) NROW + 3
   36   FORMAT(/' THE INTERDOSE INTERVAL IS MISSING ON LINE NO. ',I6//
     1' PLEASE CORRECT YOUR .csv FILE AND RERUN THE PROGRAM.'/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,36) NROW + 3
        CLOSE(42)
        CALL PAUSE
        STOP
   40   CONTINUE
	  CALL AFTERCOMMA(NCOVA,READLINE,2)
	  BACKSPACE(57)
	  READ(57,*) TIM
	  CLOSE(57)
        DO IADD = 1,IADDL
         READLINE(1:1000) = HOLDMAT(NROW)
   	  OPEN(57,STATUS='SCRATCH')
         WRITE(57,*) TIM + XII*IADD
         BACKSPACE(57)
         READ(57,41) TIMCHAR
   41    FORMAT(A50)
        CLOSE(57)
         DO IEND = 50,1,-1
          IF(TIMCHAR(IEND:IEND) .NE. ' ') GO TO 50
         END DO
   50    CONTINUE
         ICOMMA = 0
         DO I = 1,1000
          IF(READLINE(I:I) .EQ. ',') THEN
           ICOMMA = ICOMMA + 1
           IF(ICOMMA .EQ. 1) I1 = I
           IF(ICOMMA .EQ. 2) I2 = I
           IF(ICOMMA .EQ. 3) THEN
            I3 = I
            GO TO 60
           ENDIF
          ENDIF
         END DO
   60    READLINE2 =
     1    READLINE(1:I1)//'1,'//TIMCHAR(1:IEND)//READLINE(I3:1000)
         NROW = NROW + 1
         HOLDMAT(NROW) = READLINE2(1:1000)
        END DO
       ENDIF
       IF(IADDL .EQ. -1) THEN
	  CALL AFTERCOMMA(NCOVA,READLINE,6)
	  BACKSPACE(57)
	  READ(57,*,ERR=65) XII
	  CLOSE(57)
        GO TO 70
   65   WRITE(*,36) NROW + 3
        OPEN(42,FILE=ERRFIL)
         WRITE(42,36) NROW + 3
        CLOSE(42)
        CALL PAUSE
        STOP
   70   CONTINUE
        NROW = NROW + 1
        CALL GETCOM(NCOMMA,READLINE,I5,I7)
        HOLDMAT(NROW) = READLINE(1:I5)//READLINE(I7+1:1000)
        READLINE(1:1000) = HOLDMAT(NROW)
   	  OPEN(57,STATUS='SCRATCH')
         WRITE(57,*) -XII
         BACKSPACE(57)
         READ(57,41) TIMCHAR
        CLOSE(57)
         DO IEND = 50,1,-1
          IF(TIMCHAR(IEND:IEND) .NE. ' ') GO TO 80
         END DO
   80    CONTINUE
         ICOMMA = 0
         DO I = 1,1000
          IF(READLINE(I:I) .EQ. ',') THEN
           ICOMMA = ICOMMA + 1
           IF(ICOMMA .EQ. 2) I2 = I
           IF(ICOMMA .EQ. 3) THEN
            I3 = I
            GO TO 90
           ENDIF
          ENDIF
         END DO
   90    READLINE2 =
     1    READLINE(1:I2)//TIMCHAR(1:IEND)//READLINE(I3:1000)
         HOLDMAT(NROW) = READLINE2(1:1000)
       ENDIF
      ENDIF
      GO TO 20
  100 CONTINUE
      WRITE(*,103) SUBID
  103 FORMAT(' EXAMINING .CSV FORMAT FOR SUBJECT  ',A11)
      DO I = 1,NROW
       READLINE(1:1000) = HOLDMAT(I)
       CALL AFTERCOMMA(NCOVA,READLINE,1)
	 BACKSPACE(57)
	 READ(57,*,ERR=570) IDEVENT
       CLOSE(57)
       GO TO 580
  570  WRITE(*,471) READLINE(1:75)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,471) READLINE(1:75)
        CLOSE(42)
  	 CALL PAUSE
	 STOP
 580  CONTINUE
       IDENTRY(I) = IDEVENT
	 CLOSE(57)
       CALL AFTERCOMMA(NCOVA,READLINE,2)
	 BACKSPACE(57)
	 READ(57,*) TIM
       TIMENTRY(I) = TIM
	 CLOSE(57)
      END DO
      NN = 0
      NFIRST = 1
  150 CONTINUE
      NN = NN + 1
      IF(NN .GT. NROW) GO TO 200
      IF(IDENTRY(NN) .NE. 4 .AND. NN .LT. NROW) GO TO 150
      IF(NN .EQ. NROW) NLAST = NROW
      IF(IDENTRY(NN) .EQ. 4) NLAST = NN - 1
      CALL ORDERHOLD(HOLDMAT,NFIRST,NLAST,IDENTRY,TIMENTRY)
      DO I = NFIRST,NLAST
       CALL CONDENSE2(HOLDMAT(I))
      END DO
      NFIRST = NLAST + 1
      GO TO 150
  200 CONTINUE
	IF(IEND .LT. 0) THEN
       CLOSE(67)
       RETURN
      ENDIF
      SUBIDPREV = SUBID
      NROW = 0
      BACKSPACE(67)
      GO TO 20
      END
      SUBROUTINE GETCOM(NCOMMA,READLINE,I5,I7)
      CHARACTER READLINE*1000,ERRFIL*20
      COMMON/ERROR/ERRFIL
    1 FORMAT(A1000)
      ICOMMA = 0
      DO I = 1,300
       IF(READLINE(I:I) .EQ. ',') THEN
        ICOMMA = ICOMMA + 1
         IF(ICOMMA .EQ. 5) I5 = I
          IF(ICOMMA .EQ. 7) THEN
           I7 = I
           RETURN
          ENDIF
       ENDIF
      END DO
      WRITE(*,2) NCOMMA,READLINE(1:70)
    2 FORMAT(/' ONE OF THE LINES IN YOUR .cvs FILE HAS AN ERROR.'/
     1' IT IS SUPPOSED TO HAVE ',I2,' COMMAS, BUT IT HAS FEWER THAN'/
     2' 7. THE FOLLOWING LINE SHOWS THE 1ST 70 CHARACTERS OF THE LINE:'/
     3' ',A70//
     4' THE PROGRAM STOPS.'/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,2) NCOMMA,READLINE(1:70)
        CLOSE(42)
      CALL PAUSE
      STOP
      END
      SUBROUTINE ORDERHOLD(HOLDMAT,NFIRST,NLAST,IDENTRY,TIMENTRY)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION TIMENTRY(99999),IDENTRY(99999),IZ(99999),IZZ(99999),
     1 DOSTIME(99999)
      CHARACTER HOLDMAT(99999)*1000,HOLDMAT2(99999)*1000
      NDOSE = 0
      DO I = NFIRST,NLAST
       IF(IDENTRY(I) .EQ. 1 .OR. IDENTRY(I) .EQ. 4) THEN
        NDOSE = NDOSE + 1
        HOLDMAT2(NDOSE) = HOLDMAT(I)
        DOSTIME(NDOSE) = TIMENTRY(I)
        IZ(NDOSE) = -99
       ENDIF
      END DO
      NEXT = NDOSE
      DO I = NFIRST,NLAST
       IF(IDENTRY(I) .EQ. 0) THEN
        NEXT = NEXT + 1
        HOLDMAT2(NEXT) = HOLDMAT(I)
       ENDIF
      END DO
	 DO IPLACE = 1,NDOSE
	  TEMP = 1.D50
	  DO I=1,NDOSE
	   IF(DOSTIME(I) .LT. TEMP .AND. IZ(I) .EQ. -99) THEN
	    TEMP = DOSTIME(I)
	    IND = I
	   ENDIF
	  END DO
	  IZZ(IPLACE) = IND
	  IZ(IND) = 0
	 END DO
      DO IDOSE = 1,NDOSE
       HOLDMAT(NFIRST-1+IDOSE) = HOLDMAT2(IZZ(IDOSE))
      END DO
      NEXT = NDOSE
      DO IOBS = NFIRST + NDOSE,NLAST
       NEXT = NEXT + 1
       HOLDMAT(IOBS) = HOLDMAT2(NEXT)
      END DO
      RETURN
      END
      SUBROUTINE CONVERTCSV
      IMPLICIT REAL*8(A-H,O-Z)
      CHARACTER READLINE*1000,ERRFIL*20
      COMMON/ERROR/ERRFIL
        READ(87,*)
        READ(87,4) READLINE
        ICOMMA = 0
        ISEMICOLON = 0
        DO I = 1,20
         IF(READLINE(I:I) .EQ. ',') ICOMMA = 1
         IF(READLINE(I:I) .EQ. ';') ISEMICOLON = 1
        END DO
        IF(ICOMMA .EQ. 1 .AND. ISEMICOLON .EQ. 1) THEN
         WRITE(*,121)
  121    FORMAT(/' YOUR .CSV FILE HAS BOTH COMMAS AND SEMICOLONS IN '/
     1' THE SECOND LINE. THIS IS A CONFLICT. IF YOU ARE USING THE '/
     2' "EUROPEAN" VERSION OF A .CSV FILE, WITH SEMICOLONS AS FIELD'/
     3' SEPARATORS AND COMMAS TO SEPARATE THE WHOLE AND FRACTIONAL'/
     4' PARTS OF NUMBERS, THERE SHOULD BE NO COMMAS IN THE SECOND'/
     5' LINE.'//
     6' SIMILARLY IF YOU ARE USING THE "AMERICAN" VERSION OF A .CSV'/
     7' FILE, WITH COMMAS AS FIELD SEPARATORS, AND PERIODS TO SEPARTE'/
     8' THE WHOLE AND FRACTIONAL PARTS OF NUMBERS, THERE SHOULD BE NO'/
     9' SEMICOLONS IN THE SECOND LINE.'//
     1' PLEASE CORRECT YOUR .CSV FILE AND RERUN THE PROGRAM.'//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,121)
        CLOSE(42)
         CALL PAUSE
         STOP
        ENDIF
        IF(ICOMMA .EQ. 1 .AND. ISEMICOLON .EQ. 0) ICONVERT = 0
        IF(ICOMMA .EQ. 0 .AND. ISEMICOLON .EQ. 1) ICONVERT = 1
        REWIND(87)
        OPEN(77)
   10   READ(87,4,IOSTAT=IEND) READLINE
    4   FORMAT(A1000)
        IF(IEND .LT. 0) GO TO 100
        DO IENDL = 1000,1,-1
         IF(READLINE(IENDL:IENDL) .NE. ' ') GO TO 20
        END DO
   20   CONTINUE
        DO I = 1,IENDL
         IF(ICONVERT .EQ. 1) THEN
          IF(READLINE(I:I) .EQ. ',') READLINE(I:I) = '.'
          IF(READLINE(I:I) .EQ. ';') READLINE(I:I) = ','
         ENDIF
        END DO
	IF(IENDL .LE. 26) THEN
	 WRITE(77,26) READLINE
   26    FORMAT(A26)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 51) THEN
	 WRITE(77,51) READLINE
   51    FORMAT(A51)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 76) THEN
	 WRITE(77,76) READLINE
   76    FORMAT(A76)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 101) THEN
	 WRITE(77,101) READLINE
  101    FORMAT(A101)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 126) THEN
	 WRITE(77,126) READLINE
  126    FORMAT(A126)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 151) THEN
	 WRITE(77,151) READLINE
  151    FORMAT(A151)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 176) THEN
	 WRITE(77,176) READLINE
  176    FORMAT(A176)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 201) THEN
	 WRITE(77,201) READLINE
  201    FORMAT(A201)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 226) THEN
	 WRITE(77,226) READLINE
  226    FORMAT(A226)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 251) THEN
	 WRITE(77,251) READLINE
  251    FORMAT(A251)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 276) THEN
	 WRITE(77,276) READLINE
  276    FORMAT(A276)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 301) THEN
	 WRITE(77,301) READLINE
  301    FORMAT(A301)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 326) THEN
	 WRITE(77,326) READLINE
  326    FORMAT(A326)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 351) THEN
	 WRITE(77,351) READLINE
  351    FORMAT(A351)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 376) THEN
	 WRITE(77,376) READLINE
  376    FORMAT(A376)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 401) THEN
	 WRITE(77,401) READLINE
  401    FORMAT(A401)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 426) THEN
	 WRITE(77,426) READLINE
  426    FORMAT(A426)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 451) THEN
	 WRITE(77,451) READLINE
  451    FORMAT(A451)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 476) THEN
	 WRITE(77,476) READLINE
  476    FORMAT(A476)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 501) THEN
	 WRITE(77,501) READLINE
  501    FORMAT(A501)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 526) THEN
	 WRITE(77,526) READLINE
  526    FORMAT(A526)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 551) THEN
	 WRITE(77,551) READLINE
  551    FORMAT(A551)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 576) THEN
	 WRITE(77,576) READLINE
  576    FORMAT(A576)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 601) THEN
	 WRITE(77,601) READLINE
  601    FORMAT(A601)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 626) THEN
	 WRITE(77,626) READLINE
  626    FORMAT(A626)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 651) THEN
	 WRITE(77,651) READLINE
  651    FORMAT(A651)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 676) THEN
	 WRITE(77,676) READLINE
  676    FORMAT(A676)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 701) THEN
	 WRITE(77,701) READLINE
  701    FORMAT(A701)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 726) THEN
	 WRITE(77,726) READLINE
  726    FORMAT(A726)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 751) THEN
	 WRITE(77,751) READLINE
  751    FORMAT(A751)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 776) THEN
	 WRITE(77,776) READLINE
  776    FORMAT(A776)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 801) THEN
	 WRITE(77,801) READLINE
  801    FORMAT(A801)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 826) THEN
	 WRITE(77,826) READLINE
  826    FORMAT(A826)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 851) THEN
	 WRITE(77,851) READLINE
  851    FORMAT(A851)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 876) THEN
	 WRITE(77,876) READLINE
  876    FORMAT(A876)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 901) THEN
	 WRITE(77,901) READLINE
  901    FORMAT(A901)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 926) THEN
	 WRITE(77,926) READLINE
  926    FORMAT(A926)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 951) THEN
	 WRITE(77,951) READLINE
  951    FORMAT(A951)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 976) THEN
	 WRITE(77,976) READLINE
  976    FORMAT(A976)
	 GO TO 10
	ENDIF
	WRITE(77,4) READLINE
	GO TO 10
  100   CLOSE(87)
        REWIND(77)
        RETURN
        END
        SUBROUTINE CONDENSE2(READLINE)
        CHARACTER READLINE*1000
	DO IEND = 1000,1,-1
	 IF(READLINE(IEND:IEND) .NE. ' ') GO TO 20
	END DO
   20   CONTINUE
	IF(IEND .LE. 26) THEN
	 WRITE(66,26) READLINE
   26    FORMAT(A26)
	 RETURN
	ENDIF
	IF(IEND .LE. 51) THEN
	 WRITE(66,51) READLINE
   51    FORMAT(A51)
	 RETURN
	ENDIF
	IF(IEND .LE. 76) THEN
	 WRITE(66,76) READLINE
   76    FORMAT(A76)
	 RETURN
	ENDIF
	IF(IEND .LE. 101) THEN
	 WRITE(66,101) READLINE
  101    FORMAT(A101)
	 RETURN
	ENDIF
	IF(IEND .LE. 126) THEN
	 WRITE(66,126) READLINE
  126    FORMAT(A126)
	 RETURN
	ENDIF
	IF(IEND .LE. 151) THEN
	 WRITE(66,151) READLINE
  151    FORMAT(A151)
	 RETURN
	ENDIF
	IF(IEND .LE. 176) THEN
	 WRITE(66,176) READLINE
  176    FORMAT(A176)
	 RETURN
	ENDIF
	IF(IEND .LE. 201) THEN
	 WRITE(66,201) READLINE
  201    FORMAT(A201)
	 RETURN
	ENDIF
	IF(IEND .LE. 226) THEN
	 WRITE(66,226) READLINE
  226    FORMAT(A226)
	 RETURN
	ENDIF
	IF(IEND .LE. 251) THEN
	 WRITE(66,251) READLINE
  251    FORMAT(A251)
	 RETURN
	ENDIF
	IF(IEND .LE. 276) THEN
	 WRITE(66,276) READLINE
  276    FORMAT(A276)
	 RETURN
	ENDIF
	IF(IEND .LE. 301) THEN
	 WRITE(66,301) READLINE
  301    FORMAT(A301)
	 RETURN
	ENDIF
	IF(IEND .LE. 326) THEN
	 WRITE(66,326) READLINE
  326    FORMAT(A326)
	 RETURN
	ENDIF
	IF(IEND .LE. 351) THEN
	 WRITE(66,351) READLINE
  351    FORMAT(A351)
	 RETURN
	ENDIF
	IF(IEND .LE. 376) THEN
	 WRITE(66,376) READLINE
  376    FORMAT(A376)
	 RETURN
	ENDIF
	IF(IEND .LE. 401) THEN
	 WRITE(66,401) READLINE
  401    FORMAT(A401)
	 RETURN
	ENDIF
	IF(IEND .LE. 426) THEN
	 WRITE(66,426) READLINE
  426    FORMAT(A426)
	 RETURN
	ENDIF
	IF(IEND .LE. 451) THEN
	 WRITE(66,451) READLINE
  451    FORMAT(A451)
	 RETURN
	ENDIF
	IF(IEND .LE. 476) THEN
	 WRITE(66,476) READLINE
  476    FORMAT(A476)
	 RETURN
	ENDIF
	IF(IEND .LE. 501) THEN
	 WRITE(66,501) READLINE
  501    FORMAT(A501)
	 RETURN
	ENDIF
	IF(IEND .LE. 526) THEN
	 WRITE(66,526) READLINE
  526    FORMAT(A526)
	 RETURN
	ENDIF
	IF(IEND .LE. 551) THEN
	 WRITE(66,551) READLINE
  551    FORMAT(A551)
	 RETURN
	ENDIF
	IF(IEND .LE. 576) THEN
	 WRITE(66,576) READLINE
  576    FORMAT(A576)
	 RETURN
	ENDIF
	IF(IEND .LE. 601) THEN
	 WRITE(66,601) READLINE
  601    FORMAT(A601)
	 RETURN
	ENDIF
	IF(IEND .LE. 626) THEN
	 WRITE(66,626) READLINE
  626    FORMAT(A626)
	 RETURN
	ENDIF
	IF(IEND .LE. 651) THEN
	 WRITE(66,651) READLINE
  651    FORMAT(A651)
	 RETURN
	ENDIF
	IF(IEND .LE. 676) THEN
	 WRITE(66,676) READLINE
  676    FORMAT(A676)
	 RETURN
	ENDIF
	IF(IEND .LE. 701) THEN
	 WRITE(66,701) READLINE
  701    FORMAT(A701)
	 RETURN
	ENDIF
	IF(IEND .LE. 726) THEN
	 WRITE(66,726) READLINE
  726    FORMAT(A726)
	 RETURN
	ENDIF
	IF(IEND .LE. 751) THEN
	 WRITE(66,751) READLINE
  751    FORMAT(A751)
	 RETURN
	ENDIF
	IF(IEND .LE. 776) THEN
	 WRITE(66,776) READLINE
  776    FORMAT(A776)
	 RETURN
	ENDIF
	IF(IEND .LE. 801) THEN
	 WRITE(66,801) READLINE
  801    FORMAT(A801)
	 RETURN
	ENDIF
	IF(IEND .LE. 826) THEN
	 WRITE(66,826) READLINE
  826    FORMAT(A826)
	 RETURN
	ENDIF
	IF(IEND .LE. 851) THEN
	 WRITE(66,851) READLINE
  851    FORMAT(A851)
	 RETURN
	ENDIF
	IF(IEND .LE. 876) THEN
	 WRITE(66,876) READLINE
  876    FORMAT(A876)
	 RETURN
	ENDIF
	IF(IEND .LE. 901) THEN
	 WRITE(66,901) READLINE
  901    FORMAT(A901)
	 RETURN
	ENDIF
	IF(IEND .LE. 926) THEN
	 WRITE(66,926) READLINE
  926    FORMAT(A926)
	 RETURN
	ENDIF
	IF(IEND .LE. 951) THEN
	 WRITE(66,951) READLINE
  951    FORMAT(A951)
	 RETURN
	ENDIF
	IF(IEND .LE. 976) THEN
	 WRITE(66,976) READLINE
  976    FORMAT(A976)
	 RETURN
	ENDIF
	WRITE(66,4) READLINE
    4    FORMAT(A1000)
        RETURN
        END
 	SUBROUTINE SCATPLOT(IMETH,ICENTER,IOUT,IQUAL,JSUB,IPUT,N,X,Y,
     1  C0,C1,C2,C3,AMIN,AMAX,ISCALE,IERRMOD,GAMLAM)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION COEFF(999,5)
        REAL X(150000),Y(150000)
	REAL XMIN,XMAX,YMIN,YMAX,XX(200),YY(200),AMIN,AMAX
	CHARACTER CHARSUB*3,TIT*70,XLAB*59
	COMMON/TOSCAT/MAXSER,MINSER,SERMEN,SERSD,COEFF
	COMMON/BEEP/IBEEP
	IF(IPUT .EQ. 1) THEN
	WRITE(31,2)
    2   FORMAT(//' THE FOLLOWING RESULTS ARE FOR PREDICTED VALUES'/
     1' WHICH WERE GENERATED BY PARAMETER VALUES EQUAL TO ')
	IF(IMETH .EQ. 1 .AND. ICENTER .EQ. 1) THEN
	WRITE(31,*)' FINAL CYCLE POPULATION MEANS.'
	WRITE(31,*)
	ENDIF
	IF(IMETH .EQ. 1 .AND. ICENTER .EQ. 2) THEN
	WRITE(31,*)' FINAL CYCLE POPULATION MEDIANS.'
	WRITE(31,*)
	ENDIF
	IF(IMETH .EQ. 1 .AND. ICENTER .EQ. 3) THEN
	WRITE(31,*)' FINAL CYCLE POPULATION MODES.'
	WRITE(31,*)
	ENDIF
	IF(IMETH .EQ. 2 .AND. ICENTER .EQ. 1) THEN
	WRITE(31,*)' INDIVIDUAL POSTERIOR PARAMETER VALUES BASED ON '
	WRITE(31,*)' POPULATION MEANS.'
	WRITE(31,*)
	ENDIF
	IF(IMETH .EQ. 2 .AND. ICENTER .EQ. 2) THEN
	WRITE(31,*)' INDIVIDUAL POSTERIOR PARAMETER VALUES BASED ON'
	WRITE(31,*)' POPULATION MEDIANS.'
	WRITE(31,*)
	ENDIF
	IF(IMETH .EQ. 3 .AND. ICENTER .EQ. 1) THEN
	WRITE(31,*)' PARAMETER MEANS FROM INDIVIDUAL POSTERIOR'
	WRITE(31,*)' DISTRIBUTIONS.'
	WRITE(31,*)
	ENDIF
	IF(IMETH .EQ. 3 .AND. ICENTER .EQ. 2) THEN
	WRITE(31,*)' PARAMETER MEDIANS FROM INDIVIDUAL POSTERIOR'
	WRITE(31,*)' DISTRIBUTIONS.'
	WRITE(31,*)
	ENDIF
	IF(IMETH .EQ. 3 .AND. ICENTER .EQ. 3) THEN
	WRITE(31,*)' PARAMETER MODES FROM INDIVIDUAL POSTERIOR'
	WRITE(31,*)' DISTRIBUTIONS.'
	WRITE(31,*)
	ENDIF
	ENDIF
	IF(N .EQ. 0) THEN
	 WRITE(*,*)' THERE ARE NO OBSERVATIONS TO PLOT. '
	 WRITE(*,*)
	 CALL PAUSE
	 RETURN
	ENDIF
	SUMX=0.D0
	SUMY=0.D0
	SUMXX=0.D0
	SUMYY=0.D0
	SUMXY=0.D0
	DO I=1,N
	 SUMX=SUMX+X(I)
	 SUMY=SUMY+Y(I)
	 SUMXX=SUMXX+X(I)*X(I)
	 SUMYY=SUMYY+Y(I)*Y(I)
	 SUMXY=SUMXY+X(I)*Y(I)
	END DO
	XBAR = SUMX/N
	YBAR = SUMY/N
	SXX = SUMXX - N*XBAR*XBAR
	SYY = SUMYY - N*YBAR*YBAR
	SXY = SUMXY - N*XBAR*YBAR
	IREG = 1
	IF(SXX .EQ. 0.D0) THEN
	 IF(JSUB .GT. 0) WRITE(*,17) JSUB
   17    FORMAT(/' ALL PREDICTED VALUES ARE THE SAME --> NO REGRESSION'/
     1' LINE STATISTICS FOR SUBJECT NO. ',I4,/)
	 IF(IPUT .EQ. 1 .AND. JSUB .GT. 0) WRITE(31,17) JSUB
	 IF(JSUB .LT. 0) WRITE(*,177)
  177    FORMAT(/' ALL PREDICTED VALUES ARE THE SAME --> NO REGRESSION'/
     1' LINE STATISTICS FOR THE POPULATION. '/)
	 IF(IPUT .EQ. 1 .AND. JSUB .LT. 0) WRITE(31,177)
	 CALL PAUSE
	 IREG=0
	 GO TO 10
	ENDIF
	IF(SYY .EQ. 0.D0) THEN
	 IF(JSUB .GT. 0) WRITE(*,18) JSUB
   18    FORMAT(/' ALL OBSERVED VALUES ARE THE SAME --> NO REGRESSION'/
     1' LINE STATISTICS FOR SUBJECT NO. ',I4,/)
	 IF(IPUT .EQ. 1 .AND. JSUB .GT. 0) WRITE(31,18) JSUB
	 IF(JSUB .LT. 0) WRITE(*,188)
  188    FORMAT(/' ALL OBSERVED VALUES ARE THE SAME --> NO REGRESSION'/
     1' LINE STATISTICS FOR FOR THE POPULATION.'/)
	 IF(IPUT .EQ. 1 .AND. JSUB .LT. 0) WRITE(31,188)
	 CALL PAUSE
	 IREG=0
	 GO TO 10
	ENDIF
	B = SXY/SXX
	A = YBAR - B*XBAR
	RSQUAR = B*B*SXX/SYY
	R = DSQRT(RSQUAR)
   10   CONTINUE
	IF(JSUB .LT. 0) WRITE(*,11) -JSUB
   11   FORMAT(//' FOR THE ENTIRE POPULATION OF ',I3,' SUBJECTS: ')
	IF(JSUB .GE. 1) WRITE(*,12) JSUB
   12   FORMAT(//' FOR SUBJECT NO. ',I4,': ')
	CALL PAUSE
	IF(IREG	.EQ. 1) THEN
	 WRITE(*,13)
   13    FORMAT(/' THE BEST LEAST SQUARES LINE IS  YOBS = A + B*YPRED,'/
     1' WHERE A AND B ARE: ')
	 WRITE(*,*) A,B
	 WRITE(*,*)' R-SQUARED = ',RSQUAR,'     R = ',R
  	ENDIF
	IF(JSUB .LT. 0 .AND. IPUT .EQ. 1) WRITE(31,11) -JSUB
	IF(JSUB .GE. 1 .AND. IPUT .EQ. 1) WRITE(31,12) JSUB
	IF(IREG .EQ. 1) THEN
	 IF(IPUT .EQ. 1) WRITE(31,13)
	 IF(IPUT .EQ. 1) WRITE(31,*) A,B
	 IF(IPUT .EQ. 1) WRITE(31,*)' R-SQUARED = ',RSQUAR,'     R = ',R
	ENDIF
	IF(RSQUAR .NE. 1.D0 .AND. N .NE. 2 .AND. IREG .EQ. 1) THEN
	 FACT = (N - 2.D0)/(1.D0 - RSQUAR)
	 T = R*DSQRT(FACT)
	 WRITE(*,14) T,N-2
   14    FORMAT(' ',' T = ',F10.5,' ... DEG. OF FREEDOM = ',I7)
	 IF(IPUT .EQ. 1) WRITE(31,14) T,N-2
	DF = N-2.D0
	CALL TDIST(DF,T,P)
	IF(P .GT. 1.D0) P=1.D0
	PVALUE=1.D0-P
	IF(PVALUE .GT. 5.D-10) THEN
	 WRITE(*,16) PVALUE
	 IF(IPUT .EQ. 1) WRITE(31,16) PVALUE
   16   FORMAT(' ',' THE ASSOCIATED P-VALUE IS ',F11.9/)
	ENDIF
	IF(PVALUE .LE. 5.D-10 .AND. PVALUE .GE. 1.D-300) THEN
	 WRITE(*,21) PVALUE
	 IF(IPUT .EQ. 1) WRITE(31,21) PVALUE
   21   FORMAT(' ',' THE ASSOCIATED P-VALUE IS ',G16.9/)
	ENDIF
	IF(PVALUE .LT. 1.D-300) THEN
	 WRITE(*,22)
	 IF(IPUT .EQ. 1) WRITE(31,22)
   22    FORMAT(' ',' THE ASSOCIATED P-VALUE IS LESS THAN 10 TO THE '/
     1' POWER OF -300.'/)
	ENDIF
	CALL PAUSE
	ENDIF
	IF(JSUB .LT. 0) THEN
	WRITE(*,32) -JSUB
   32   FORMAT(' ','NO. OF SERUM LEVELS -- STATISTICS OVER ALL ',I3,' SU
     1BJECTS: ')
	WRITE(*,33) N,SERMEN,MAXSER,MINSER,SERSD
   33   FORMAT(' ',' TOTAL = ',I4,'  MEAN = ',F6.2,'  MAX = ',I3,'  MIN
     1= ',I3,'  S.D. = ',F6.2)
	IF(IPUT .EQ. 1) WRITE(31,32) -JSUB
	IF(IPUT .EQ. 1) WRITE(31,33) N,SERMEN,MAXSER,MINSER,SERSD
	ENDIF
	IF(IPUT .EQ. 1) WRITE(31,71)
   71 FORMAT(//'   PREDICTED    OBSERVED   PRED.-OBS.   (PRED.-OBS.)^2'/
     1'   ---------    --------   ----------   --------------')
	SUMD=0.0
	SUMDS=0.D0
	SUMWD=0.D0
	SUMWDS=0.D0
	 NNOW = 0
	 ISUB = 0
	 NOBSER = 0
	DO I=1,N
	 D = X(I)-Y(I)
	 DS = D*D
	 SUMD = SUMD + D
	 SUMDS = SUMDS + DS
	 YI = Y(I)
	 IF(JSUB .LT. 0) THEN
	  NNOW = NNOW+1
	  IF(NNOW .GT. NOBSER) THEN
	   NNOW = 1
	   ISUB = ISUB + 1
	   NOBSER = COEFF(ISUB,1)
	   C0 = COEFF(ISUB,2)
	   C1 = COEFF(ISUB,3)
	   C2 = COEFF(ISUB,4)
	   C3 = COEFF(ISUB,5)
	  ENDIF
	ENDIF
	 SDI1 = C0 + C1*YI + C2*YI*YI + C3*YI**3
	 IF(IERRMOD .EQ. 1) SDI = SDI1
	 IF(IERRMOD .EQ. 2) SDI = SDI1*GAMLAM
	 IF(IERRMOD .EQ. 3) SDI = DSQRT(SDI1*SDI1 + GAMLAM*GAMLAM)
	 IF(IERRMOD .EQ. 4) SDI = GAMLAM
	 SUMWD = SUMWD + D/SDI
	 SUMWDS = SUMWDS + (D/SDI)**2
	 IF(IPUT .EQ. 1) WRITE(31,72) X(I),Y(I),D,DS
	END DO
   72   FORMAT(3X,3(F9.4,3X),F12.4)
	WRITE(*,23)
   23   FORMAT(/' MEASURES OF BIAS: ')
	WRITE(*,24) SUMD/N
   24   FORMAT('  MEAN ERROR (PRED. - OBS.) = ',F15.6)
	WRITE(*,26) SUMWD/N
   26   FORMAT('  MEAN WEIGHTED ERROR (PRED. - OBS.) = ',F15.6)
	WRITE(*,27)
   27   FORMAT(/' MEASURES OF PRECISION: ')
	WRITE(*,28) SUMDS/N
   28   FORMAT('  MEAN SQUARED ERROR (PRED. - OBS.) = ',F15.6)
	WRITE(*,281) SUMDS/N - (SUMD/N)**2.D0
  281   FORMAT('  BIAS-ADJUSTED MEAN SQUARED ERROR = ',F15.6)
	WRITE(*,29) SUMWDS/N
   29   FORMAT('  MEAN WEIGHTED SQUARED ERROR (PRED. - OBS.) = ',F15.6)
	WRITE(*,291) SUMWDS/N - (SUMWD/N)**2.D0
  291   FORMAT('  BIAS-ADJUSTED MEAN WEIGHTED SQUARED ERROR = ',F15.6)
	IF(IPUT .EQ. 1) THEN
	 WRITE(31,*)
	 WRITE(31,23)
	 WRITE(31,24) SUMD/N
	 WRITE(31,26) SUMWD/N
	 WRITE(31,27)
	 WRITE(31,28) SUMDS/N
	 WRITE(31,281) SUMDS/N - (SUMD/N)**2.D0
	 WRITE(31,29) SUMWDS/N
	 WRITE(31,291) SUMWDS/N - (SUMWD/N)**2.D0
	ENDIF
	RETURN
	END
	SUBROUTINE TDIST(DF,U,P)
	IMPLICIT REAL*8(A-H,O-Z)
	COMMON/TOSUB/IR
	EXTERNAL GOFT
	IR=DF
	N=1000
	CALL CALCGAM(GAMRAT)
      DEL=U/N/2.D0
      CALL INTEG(N,DEL,GOFT,VALUE)
      P = .5D0 + GAMRAT*VALUE/DSQRT(3.14159D0*IR)
      RETURN
      END
	SUBROUTINE CALCGAM(GAMRAT)
	IMPLICIT REAL*8(A-H,O-Z)
	COMMON/TOSUB/IR
	SQRTPI = 1.77245385090552
	IF(IR .EQ. 1) GAMRAT = 1.D0/SQRTPI
	IF(IR .EQ. 2) GAMRAT = SQRTPI/2.D0
	IF(IR .EQ. 3) GAMRAT = 2.D0/SQRTPI
	IF(IR .LE. 3) RETURN
	IHALF=IR/2
	IH2 = IHALF*2
	IF(IH2 .EQ. IR) THEN
	FACT = SQRTPI/2.D0
	DO I=1,IHALF-1
	 FACT = FACT*(2.D0*I+1.D0)/2.D0/I
	END DO
	GAMRAT = FACT
	RETURN
	ENDIF
	FACT = 2.D0/SQRTPI
	DO I=1,(IR-3)/2
	 FACT = FACT*(2.D0*I+2.D0)/(2.D0*I+1.D0)
	END DO
	GAMRAT = FACT
	RETURN
	END
      	SUBROUTINE GOFT(ARG,OUT)
	IMPLICIT REAL*8(A-H,O-Z)
      	COMMON /TOSUB/ IR
      EX=-(IR+1.D0)/2.D0
      OUT=(1.D0+ARG*ARG/IR)**EX
      RETURN
      END
	SUBROUTINE INTEG(N,D,FUNC,RSLT)
	IMPLICIT REAL*8(A-H,O-Z)
        EXTERNAL FUNC
      CALL FUNC(0.D0,V1)
      B=2.D0*N*D
      CALL FUNC(B,V2)
      SUM=V1+V2
      IFAC=4
      DO 10 I=1,2*N-1
      ARGMNT=I*D
      CALL FUNC(ARGMNT,V)
      SUM=SUM+V*IFAC
      IFAC=IFAC/2
      IF(IFAC .EQ. 1) IFAC=4
   10 CONTINUE
      RSLT=D*SUM/3.D0
      RETURN
      END
	SUBROUTINE GETCHAR(JSUB,CHARSUB)
	CHARACTER CHARSUB*3
	CHARACTER*1 B,C,D
	ILEFT = JSUB
	I3 = ILEFT/100
	ILEFT = ILEFT - I3*100
	I2 = ILEFT/10
 	ILEFT = ILEFT - I2*10
	I1 = ILEFT
	IF(I3 .EQ. 1) B='1'
	IF(I3 .EQ. 2) B='2'
	IF(I3 .EQ. 3) B='3'
	IF(I3 .EQ. 4) B='4'
	IF(I3 .EQ. 5) B='5'
	IF(I3 .EQ. 6) B='6'
	IF(I3 .EQ. 7) B='7'
	IF(I3 .EQ. 8) B='8'
	IF(I3 .EQ. 9) B='9'
	IF(I3 .EQ. 0) B='0'
	IF(I2 .EQ. 1) C='1'
	IF(I2 .EQ. 2) C='2'
	IF(I2 .EQ. 3) C='3'
	IF(I2 .EQ. 4) C='4'
	IF(I2 .EQ. 5) C='5'
	IF(I2 .EQ. 6) C='6'
	IF(I2 .EQ. 7) C='7'
	IF(I2 .EQ. 8) C='8'
	IF(I2 .EQ. 9) C='9'
	IF(I2 .EQ. 0) C='0'
	IF(I1 .EQ. 1) D='1'
	IF(I1 .EQ. 2) D='2'
	IF(I1 .EQ. 3) D='3'
	IF(I1 .EQ. 4) D='4'
	IF(I1 .EQ. 5) D='5'
	IF(I1 .EQ. 6) D='6'
	IF(I1 .EQ. 7) D='7'
	IF(I1 .EQ. 8) D='8'
	IF(I1 .EQ. 9) D='9'
	IF(I1 .EQ. 0) D='0'
	CHARSUB = B//C//D
	RETURN
	END
	SUBROUTINE SCATGRAM(IOUT,IQUAL,N,XLABEL,YLABEL,XLABEL2,YLABEL2,
     1  X,Y,ILOWER,ICONF,IPUT)
	IMPLICIT REAL*8(A-H,O-Z)
        REAL X(999),Y(999)
	REAL XMIN,XMAX,YMIN,YMAX,XX(200),YY(200),AMIN,AMAX,
     1  YYU(200),YYL(200)
	CHARACTER CHARSUB*3,TIT*70,XLAB*59,YLAB*59
	CHARACTER XLABEL*20,YLABEL*20,XLABEL2*10,YLABEL2*10
	COMMON/BEEP/IBEEP
	IF(IPUT .EQ. 1)	WRITE(35,2) YLABEL2, YLABEL, XLABEL2, XLABEL,N
    2   FORMAT(//' THE FOLLOWING RESULTS ARE FOR THE LINEAR REGRESSION'/
     1' LINE OF ',A10,1X,A20,' AS A FUNCTION OF '/
     2' ',A10,1X,A20/
     2' ... OVER ALL ',I4,' SUBJECT(S). ')
	IF(N .EQ. 0) THEN
	 WRITE(*,*)' THERE ARE NO VALUES TO PLOT. '
	 WRITE(*,*)
	 CALL PAUSE
	 RETURN
	ENDIF
	SUMX=0.D0
	SUMY=0.D0
	SUMXX=0.D0
	SUMYY=0.D0
	SUMXY=0.D0
	DO I=1,N
	 SUMX=SUMX+X(I)
	 SUMY=SUMY+Y(I)
	 SUMXX=SUMXX+X(I)*X(I)
	 SUMYY=SUMYY+Y(I)*Y(I)
	 SUMXY=SUMXY+X(I)*Y(I)
	END DO
	XBAR = SUMX/N
	YBAR = SUMY/N
	SXX = SUMXX - N*XBAR*XBAR
	SYY = SUMYY - N*YBAR*YBAR
	SXY = SUMXY - N*XBAR*YBAR
	IREG = 1
	IF(SXX .EQ. 0.D0) THEN
	 WRITE(*,17)  XLABEL2,XLABEL, N
	 IF(IPUT .EQ. 1) WRITE(35,17) XLABEL2,XLABEL, N
   17    FORMAT(/' ALL THE VALUES FOR ',A10,1X,A20/
     1' ARE THE SAME ACROSS ALL ',I4,' SUBJECT(S).'//
     2' THERE WILL BE NO REGRESSION LINE STATISTICS. '/)
	 IREG=0
	 GO TO 10
	ENDIF
	IF(SYY .EQ. 0.D0) THEN
	 WRITE(*,17)  YLABEL2,YLABEL, N
	 IF(IPUT .EQ. 1) WRITE(35,17) YLABEL2,YLABEL, N
	 IREG=0
	 GO TO 10
	ENDIF
	B = SXY/SXX
	A = YBAR - B*XBAR
	RSQUAR = B*B*SXX/SYY
	R = DSQRT(RSQUAR)
	IF(N .GE. 3) SE = DSQRT(SYY*(1.D0 - RSQUAR)/(N - 2.D0))
   10   CONTINUE
	IF(IREG	.EQ. 1) THEN
	 CALL SYSTEM('CLS')
	 WRITE(*,13)
   13    FORMAT(/' THE BEST LEAST SQUARES LINE IS  Y = A + B*X,'/
     1' WHERE A AND B ARE: ')
	 WRITE(*,*) A,B
	 WRITE(*,*)' R-SQUARED = ',RSQUAR,'     R = ',R
	  IF(IPUT .EQ. 1) THEN
	   WRITE(35,13)
	   WRITE(35,*) A,B
	   WRITE(35,*)' R-SQUARED = ',RSQUAR,'     R = ',R
	  ENDIF
	ENDIF
	IF(RSQUAR .NE. 1.D0 .AND. N .NE. 2 .AND. IREG .EQ. 1) THEN
	 FACT = (N - 2.D0)/(1.D0 - RSQUAR)
	 T = R*DSQRT(FACT)
	 WRITE(*,14) T,N-2
   14    FORMAT(' ',' T = ',F10.5,' ... DEG. OF FREEDOM = ',I7)
	 IF(IPUT .EQ. 1) WRITE(35,14) T,N-2
	DF = N-2.D0
	CALL TDIST(DF,T,P)
	IF(P .GT. 1.D0) P=1.D0
	PVALUE=1.D0-P
	IF(PVALUE .GT. 5.D-10) THEN
	 WRITE(*,16) PVALUE
	 IF(IPUT .EQ. 1) WRITE(35,16) PVALUE
   16   FORMAT(' ',' THE ASSOCIATED P-VALUE IS ',F11.9/)
	ENDIF
	IF(PVALUE .LE. 5.D-10 .AND. PVALUE .GE. 1.D-300) THEN
	 WRITE(*,21) PVALUE
	 IF(IPUT .EQ. 1) WRITE(35,21) PVALUE
   21   FORMAT(' ',' THE ASSOCIATED P-VALUE IS ',G16.9/)
	ENDIF
	IF(PVALUE .LT. 1.D-300) THEN
	 WRITE(*,22)
	 IF(IPUT .EQ. 1) WRITE(35,22)
   22    FORMAT(' ',' THE ASSOCIATED P-VALUE IS LESS THAN 10 TO THE '/
     1' POWER OF -300.'/)
	ENDIF
	 CALL GETT995(DF,T995)
	 CALL GETT975(DF,T975)
	 CALL GETT900(DF,T900)
	 IF(ICONF .EQ. 1) PAREN = 1.D0/N + XBAR*XBAR/SXX
	 IF(ICONF .EQ. 0) PAREN = 1.D0 + 1.D0/N + XBAR*XBAR/SXX
	 DELTA1 = SE*DSQRT(PAREN)
	 YINT = A
	 YUP1 = A + T900*DELTA1
	 YDN1 = A - T900*DELTA1
	 YUP2 = A + T975*DELTA1
	 YDN2 = A - T975*DELTA1
	 YUP3 = A + T995*DELTA1
	 YDN3 = A - T995*DELTA1
	 IF(ICONF .EQ. 1) THEN
	  WRITE(*,101)
	  IF(IPUT .EQ. 1) WRITE(35,101)
	 ENDIF
  101    FORMAT(/' FOR THIS CASE (THE EXPECTED VALUE OF Y GIVEN X), AT X
     1 = 0:')
	 IF(ICONF .EQ. 0) THEN
	  WRITE(*,102)
	  IF(IPUT .EQ. 1) WRITE(35,102)
	 ENDIF
  102    FORMAT(/' FOR THIS CASE (AN ADDITIONAL VALUE OF Y GIVEN X), AT
     1X = 0:')
	 WRITE(*,107) YINT
	 IF(IPUT .EQ. 1) WRITE(35,107) YINT
  107    FORMAT(' THE POINT ESTIMATE IS ',G11.4)
	 WRITE(*,103) YDN3,YUP3
	 IF(IPUT .EQ. 1) WRITE(35,103) YDN3,YUP3
  103    FORMAT('  A 99% CONFIDENCE INTERVAL IS [',G11.4,', ',G11.4,']')
	 WRITE(*,104) YDN2,YUP2
	 IF(IPUT .EQ. 1) WRITE(35,104) YDN2,YUP2
  104    FORMAT('  A 95% CONFIDENCE INTERVAL IS [',G11.4,', ',G11.4,']')
	 WRITE(*,106) YDN1,YUP1
	 IF(IPUT .EQ. 1) WRITE(35,106) YDN1,YUP1
  106    FORMAT(' AN 80% CONFIDENCE INTERVAL IS [',G11.4,', ',G11.4,']')
	ENDIF
	RETURN
	END
	SUBROUTINE GETT975(DF,T975)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION TVAL(34)
	DATA (TVAL(K),K=1,34)/12.71,4.30,3.18,2.78,2.57,2.45,2.36,2.31,
     1   2.26,2.23,2.20,2.18,2.16,2.14,2.13,2.12,2.11,2.10,2.09,2.09,
     2   2.08,2.07,2.07,2.06,2.06,2.06,2.05,2.05,2.04,2.04,2.02,2.00,
     3   1.98,1.96/
	IDF = DF
	IF(IDF .GE. 1 .AND. IDF .LE. 30) T975 = TVAL(IDF)
	IF(IDF .GT. 30 .AND. IDF .LT. 40) T975 = TVAL(30)
	IF(IDF .GE. 40 .AND. IDF .LT. 60) T975 = TVAL(31)
	IF(IDF .GE. 60 .AND. IDF .LT. 120) T975 = TVAL(32)
	IF(IDF .GE. 120 .AND. IDF .LT. 500) T975 = TVAL(33)
	IF(IDF .GE. 500) T975 = TVAL(34)
	RETURN
	END
	SUBROUTINE GETT995(DF,T995)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION TVAL(34)
	DATA (TVAL(K),K=1,34)/63.66,9.92,5.84,4.60,4.03,3.71,3.50,3.36,
     1   3.25,3.17,3.11,3.06,3.01,2.98,2.95,2.92,2.90,2.88,2.86,2.84,
     2   2.83,2.82,2.81,2.80,2.79,2.78,2.77,2.76,2.76,2.75,2.70,2.66,
     3   2.62,2.58/
	IDF = DF
	IF(IDF .GE. 1 .AND. IDF .LE. 30) T995 = TVAL(IDF)
	IF(IDF .GT. 30 .AND. IDF .LT. 40) T995 = TVAL(30)
	IF(IDF .GE. 40 .AND. IDF .LT. 60) T995 = TVAL(31)
	IF(IDF .GE. 60 .AND. IDF .LT. 120) T995 = TVAL(32)
	IF(IDF .GE. 120 .AND. IDF .LT. 500) T995 = TVAL(33)
	IF(IDF .GE. 500) T995 = TVAL(34)
	RETURN
	END
	SUBROUTINE GETT900(DF,T900)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION TVAL(34)
	DATA (TVAL(K),K=1,34)/ 3.08,1.89,1.64,1.53,1.48,1.44,1.42,1.40,
     1   1.38,1.37,1.36,1.36,1.35,1.34,1.34,1.34,1.33,1.33,1.33,1.32,
     2   1.32,1.32,1.32,1.32,1.32,1.32,1.31,1.31,1.31,1.31,1.30,1.30,
     3   1.29,1.28/
	IDF = DF
	IF(IDF .GE. 1 .AND. IDF .LE. 30) T900 = TVAL(IDF)
	IF(IDF .GT. 30 .AND. IDF .LT. 40) T900 = TVAL(30)
	IF(IDF .GE. 40 .AND. IDF .LT. 60) T900 = TVAL(31)
	IF(IDF .GE. 60 .AND. IDF .LT. 120) T900 = TVAL(32)
	IF(IDF .GE. 120 .AND. IDF .LT. 500) T900 = TVAL(33)
	IF(IDF .GE. 500) T900 = TVAL(34)
	RETURN
	END
