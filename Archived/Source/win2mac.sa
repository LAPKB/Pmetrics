#!/bin/bash
# Yamada 4/5/2010
#
# Usage:
# Darwin$ ./win2mac.sa DOS_file
#
# Output is printed to a MAC text file: newfile.txt
#
# Symptom: Input file is text w/lines that have trailing
# ^M or 100s of spaces.  This command gets rid of the ^M
# or trailing spaces.
#    for e.g.
#       "This line, right here                          "
#    is converted to
#       "This line, right here"
#    and
#       "This line^M"
#    is converted to
#       "This line" 
#
# 4/30/2010 tr is used to delete DOS EOF (cntrl-Z, or \032)
#
# 5/4/2010 idm1x4.f had an Illegal character, <8a>,
#   that causes tr to exit w/status = 1 and the output
#   error: 'tr: Illegal byte sequence'.  The result is a
#   truncated file. The following env variable allows
#   tr to pass the offending sequence on MAC systems.
export LC_ALL=C
#
# 5/5/2010 The offending byte sequence seems to be a "e`"
#   so, as a hack, how about deleting all diacritical marks
#   before doing anything else:
sed \
-e 's/[äáàâ]/a/g'  \
-e 's/[ëéèê]/e/g'  \
-e 's/[ïíìî]/i/g'  \
-e 's/[öóòôø]/o/g' \
-e 's/[üúùû]/u/g'  \
-e 's/[ÿý]/y/g'    \
-e 's/ñ/n/g'       \
\
-e 's/[ÄÁÀÂ]/A/g'  \
-e 's/[ËÉÈÊ]/E/g'  \
-e 's/[ÏÍÌÎ]/I/g'  \
-e 's/[ÖÓÒÔØ]/O/g' \
-e 's/[ÜÚÙÛ]/U/g'  \
-e 's/Ý/Y/g'       \
-e 's/Ñ/n/g'       \
\
"$1" > tmp.txt
# The above works! Line 568 of idm1x4.f is now,
# CECCCCCCC...EOL, instead of C<8a>CCCCCCC...EOL

# Convert DOS style CR-LF (\015\032) to just a CR by deleting the LF
# next, get rid of sequential spaces at the end of each line
# finally, clean up
tr -d '\032' < tmp.txt | gzip | gunzip > tmp2.txt
sed 's/[[:space:]]*$//' tmp2.txt > newfile.txt
rm tmp.txt tmp2.txt

#
# end
#
# Notes and Important References:
#   1. http://www.real-world-systems.com/docs/tr.1.html
#   2. http://www.linuxquestions.org/questions/programming-9/converting-extended-ascii-%EB-%F4-in-bash-script-253627/
#

