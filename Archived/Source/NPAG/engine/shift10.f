c  shift10.f                                               11/21/14

c  shift10 has the following changes from shift9:

c  It has the Threadprivate and Save statements to make it compatible
c  with the new npageng28.f program. These statements allow the 
c  program to be run in parallel.

c-----------------------------------------------------------------------

c  shift9.f                                                9/28/12

c  shift9 has the following subtle change from shift8:

c  In step 4, the logic to assign the bolus time, BOL(I,IND,1) is
c  simplified in the case where a steady state dose set begins as a
c  time reset event. In this case, the bolus time will be TAU(I) only
c  if both TAU(I) and the bolus value (RR) are not 0. See the reason
c  in the code. 

c-----------------------------------------------------------------------

c  shift8.f                                                9/20/12

c  shift8 has changes from shift7 in Step 4 to correct the code in the
c  case where bolus inputs are used in steady state dose sets. In 
c  shift7.f, a timelag for a bolus which was part of a steady state
c  dose set would not be applied properly. Now it will.

c-----------------------------------------------------------------------

c  shift7.f                                                11/6/11

c  shift7 differs from shift6 as follows:

c  1. The dimensions related to the no. of dose events are changed from
c  500 to 5000. This is needed as shift7 is compiled with idm1x7.f, 
c  idm2x7.f, and idm3x7.f (part of the npageng16.f "engine"), which
c  accommodates steady state dose sets.

c  2. 3 lines testing for IF(SIG(IDOSE) .EQ. 0 .AND. IDOSE .GT. 1)
c  are replaced by 	  IF(SIG(IDOSE) .LE. 0 .AND. IDOSE .GT. 1)
c  since now a dose reset occurs when a dose time is 0 (a regular
c  time reset) or < 0 (a time reset occurring with a steady state
c  dose set indicator).

c-----------------------------------------------------------------------

C  SHIFT6.F                                                4/26/11

C  SHIFT5 HAS THE FOLLOWING CHANGES TO SHIFT5:

C  WT AND CCR ARE NO LONGER ASSUMED TO BE SPECIAL COVARIATES IN EACH
C  PATIENT'S WORKING COPY PATIENT DATA FILE. SO ALL DO LOOPS THAT 
C  START WITH  DO I = 1, 2+NADD ARE CHANGED TO START WITH DO I = 1,NADD,
C  BUT ONLY IF NADD .GT. 0.

C-----------------------------------------------------------------------

C  SHIFT5.F							9/11/09

C  SHIFT5 HAS THE FOLLOWING CHANGES TO SHIFT4.F.


C  THE ARGUMENT LIST CONTAINS TAU(.) RATHER THAN NTLAG(.). THIS
C  MEANS THAT TAU(I) IS INPUT DIRECTLY AS THE TIMELAG FOR DRUG I.
C  I.E., IT NO LONGER HAS TO BE CALCULATED AS A FUNCTION OF THE
C  PARAMETER ARRAY, P. BECAUSE OF THIS, P IS REMOVED FROM THE ARGUMENT
C  LIST AND THE DIMENSION STATEMENT. ALSO, NTLAG IS REMOVED FROM 
C  THT DIMENSION STATEMENT.

C  THE FIRST SET OF ID MODULES TO CALL SHIFT5.F ARE idm1x3.f, 
C  idm2x3.f, AND idm3x3.f

C-----------------------------------------------------------------------

C  SHIFT4.FOR							9/1/09

C  SHIFT4 HAS THE FOLLOWING CHANGES FROM SHIFT3:

C  1. NTLAG(I) CAN NOW BE NEGATIVE. IF THIS OCCURS, IT MEANS THAT THE
C  TIMELAG PARAMETER FOR DRUG I WILL BE EXP(P(-NTLAG(I)).

C  2. A BUG IS CORRECTED RELATED TO TIME "RESETS". PREVIOUSLY, IF THE
C  USER HAD A TIME "RESET" IN HIS DOSAGE REGIMEN, THIS ROUTINE WOULD
C  NOT WORK. THE REASON IS THAT IN THE CODE BELOW, EACH NEXT TIME
C  FOR AN IV, COVARIATE, OR BOLUS IS COMPARED TO THE PREVIOUSLY
C  ESTABLISHED TIME IN THE DOSAGE ARRAY (TIMNXT) AND IS A CANDIDATE
C  TO BE THE NEXT TIMNXT IF IT IS .GE. TIMNXT. SO IF A TIME RESET
C  VALUE OF 0 OCCURS, IT WILL NEVER BE A CANDIATE SINCE IT IS NOT
C  .GE. THE LAST TIMNXT. TO FIX THIS, AND MAKE SURE THAT A TIME
C  RESET VALUE OF 0 IS INCLUDED IN THE ADJUSTED DOSAGE BLOCK, THE
C  CODE WILL ADD TO EACH IV, BOLUS, AND COVARIATE ARRAY AN EXTRA
C  LINE WHEN A TIME RESET OCCURS. THIS LINE WILL HAVE A TIME OF
C  1.D19 (I.E., A LARGE VALUE WHICH REPRSENTS INFINITY); AND IT
C  WILL BE FOLLOWED BY A LINE WITH THE ADJUSTED RESET TIME (0 FOR
C  IVs AND COVARIATES, AND 0 + TAU(I) FOR BOLI.

C-----------------------------------------------------------------------

C  SHIFT3.FOR							5-23-02

C  SHIFT3 HAS MAJOR CHANGES FROM SHIFT2 TO ALLOW FOR MULTIPLE TIMELAGS,
C  ONE POTENTIALLY FOR EACH BOLUS INPUT OF UP TO 7 DRUGS.

	SUBROUTINE SHIFT(TAU,ND,SIG,NDRUG,NADD,RS)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION SIG(5000),RS(5000,34),TAU(7),XIV(7,5000,2),
     1  BOL(7,5000,2),COV(20,5000,2),INDIV(7),INDBOL(7),INDCOV(20),
     2  TIMCAN(34)

! NEW PARALLEL CODE BELOW AS OF npageng28.f.
        Save XIV,BOL,COV
!$omp   Threadprivate(XIV,BOL,COV)


C  INPUT ARE:

C  TAU(I) =  THE VALUE OF THE TIMELAG FOR DRUG I.
C  ND = ORIGINAL NO. OF DOSE EVENTS. 
C  SIG(I) = TIME FOR ITH DOSE EVENT IN THE ORIGINAL DOSAGE REGIMEN,
C           I=1,ND.
C  NDRUG = NO. OF DRUGS (EACH HAS AN IV, FOLLOWED BY A BOLUS COLUMN).
C  NADD = NO. OF ADDITIONAL COVARIATES (EACH IS IN ITS OWN COLUMN
C         FOLLOWING THE IV/BOLUS COLUMNS.
C  RS(I,J) = "RATE" J FOR THE ITH DOSE EVENT IN THE ORIGINAL DOSAGE
C            REGIMEN; J=1,NI, I=1,ND, WHERE NI = 2*NDRUG + NADD
C            BECAUSE THE "RATES" CONTAIN, IN ORDER, 2 ENTRIES FOR
C            EACH DRUG (1 FOR THE IV AND 1 FOR THE BOLUS) AND 1 EACH
C            FOR THE NADD ADDITIONAL COVARIATES.


C  OUTPUT ARE:

C  ND, SIG, RS, AS ABOVE, EXCEPT FOR THE ALTERED DOSAGE REGIMEN.

C-----------------------------------------------------------------------

C  SHIFT2.FOR							11-16-99

C  SHIFT2 HAS THE FOLLOWING CHANGE FROM SHIFT. AT THE END OF THE 
C  FORMATION OF ARRAY XMAT, ALL ROWS WHICH HAVE 0 BOLUS INPUT AND THE
C  SAME OTHER DATA VALUES (EXCEPT TIME) AS THE PREVIOUS ROW ARE NOT
C  USED IN THE NEW ARRAY XMAT2 WHICH HAS ONLY NON-REDUNDANT ROWS.
C  THIS, THEORETICALLY, SHOULDN'T HAVE ANY EFFECT ON CALCULATIONS, BUT 
C  NUMERICALLY IT DOES SINCE WHEN THE DVODE ROUTINE SOLVES D.E.'S, IT 
C  INTEGRATES OVER DIFFERENT INTERVALS IF EXTRA DOSAGE LINES ARE 
C  INCLUDED.

C  EX: TIME   IV   BOLUS	TIME   IV   BOLUS
C       0    100     0		 0    100     0
C       5    100   1000		 2    100   1000  

C  NOTE THAT BOTH ABOVE CASES SHOULD GIVE THE SAME RESULTS IF THERE IS
C  A TIME-LAG = 3 IN THE 2ND CASE. BUT, AS THE CODE IS WRITTEN IN
C  SHIFT.FOR, THE 2ND CASE WOULD TRANSLATE TO THE FOLLOWING:

C	 TIME   IV   BOLUS 
C         0    100     0   
C         2    100     0
C         5    100   1000

C  ... AND THIS WOULD MEAN THAT THE 1ST INTEGRATION BY DVODE WOULD END
C      AT T = 2, RATHER THAN 5 (OR, E.G., 3 IF 3 WAS THE
C      FIRST OBSERVATION TIME). THIS CREATES NUMERICAL DIFFERENCES DUE
C      TO SMALL ROUNDOFF ERRORS WHICH CAN GROW SIGNIFICANTLY.

C-----------------------------------------------------------------------

C  SHIFT.FOR							7-27-99

C  SHIFT.FOR IS A MODULE WHICH INCLUDES SUBROUTINE SHIFT. SHIFT WILL BE
C  CALLED BY ROUTINES OF THE "BIG" NPEM AND IT2B PROGRAMS WHICH HAVE
C  SUBROUTINES FUNC, FUNC1, FUNC2, OR FUNC3 IN THEM.

C  SHIFT INPUTS THE DOSAGE REGIMEN VIA THE INPUT ARGUMENTS (SEE BELOW),
C  AND RETURNS AN ALTERED DOSAGE REGIMEN, WHICH HAS EACH BOLUS INPUT 
C  TIME INCREASED BY THE INPUT VALUE OF TAU (THE TIME LAG). NOTE THAT
C  EACH ROW WITH A NON-0 BOLUS INPUT VALUE WILL RESULT IN A NEW ROW IN
C  THE DOSAGE REGIMEN.

C-----------------------------------------------------------------------

C  PROCEDURE FOR THE DOSAGE REGIMEN MODIFICATION:

C  1. ESTABLISH TAU(I) AS THE TIMELAG FOR DRUG I'S BOLUS COLUMN.
C     NO. AS OF SHIFT5.F, THIS VALUE IS INPUT AS AN ARGUMENT.

C  2. ESTABLISH THE IV VALUES AND TIMES INTO XIV(I,J,K). IN PARTICULAR,
C     XIV(I,J,2) IS THE JTH IV VALUE FOR DRUG I, AND XIV(I,J,1) IS THE 
C     TIME THIS IV VALUE FIRST OCCURRED. SET THE LAST TIME TO 1.D29 AS
C     AN INDICATOR THAT THERE ARE NO MORE ENTRIES IN THE ARRAY.

C  3. ESTABLISH THE COVARIATE VALUES AND TIMES INTO COV(I,J,K). IN 
C     PARTICULAR, COV(I,J,2) IS THE JTH VALUE FOR COVARIATE I, AND 
C     COV(I,J,1) IS THE TIME THIS COV VALUE FIRST OCCURRED. SET THE 
C     LAST TIME TO 1.D29 AS AN INDICATOR THAT THERE ARE NO MORE ENTRIES
C     IN THE ARRAY.

C  4. ESTABLISH THE BOLUS VALUES AND TIMES INTO BOL(I,J,K).
C     IN PARTICULAR, BOL(I,J,2) IS THE JTH BOLUS VALUE FOR DRUG I, AND
C     BOL(I,J,1) IS THE TIME THIS BOLUS OCCURRED. THE TIMES FOR EACH
C     BOLUS VALUE ARE THOSE ADJUSTED TIMES FROM THE ASSOCIATED TIMELAGS
C     TAU(I),I=1,NDRUG, FROM STEP 1. SET THE LAST TIME TO 1.D29 AS AN
C     INDICATOR THAT THERE ARE NO MORE ENTRIES IN THE ARRAY.

C  5. REASSIGN THE VALUES IN IV, BOL, AND COV TO THE APPROPRIATE ENTRIES
C     OF RS, KEEPING TRACK OF THE RUNNING INDEX, ND, OF DOSE EVENTS. IF
C     ND EXCEEDS 5000, STOP THE PROGRAM WITH A MESSAGE TO THE USER. ALSO
C     REASSIGN THE CORRESPONDING TIME VALUES TO ARRAY SIG.


C  STEP 1.

C  NOTHING TO DO. AS OF SHIFT5.F, TAU(I), I=1,NDRUG, IS INPUT AS
C  AN ARGUMENT TO THIS ROUTINE.


C  STEP 2:

C  ESTABLISH THE IV VALUES AND TIMES INTO XIV(I,J,K). IN PARTICULAR,
C  XIV(I,J,2) IS THE JTH IV VALUE FOR DRUG I, AND XIV(I,J,1) IS THE 
C  TIME THIS IV VALUE FIRST OCCURRED.

	DO I = 1,NDRUG

C  ESTABLISH XIV(I,J,K) FOR DRUG I'S IV. PRESET THE LAST VALUE TO
C  -99 SO THAT THE FIRST VALUE WILL BE DIFFERENT AND THEREFORE ENGAGE 
C  THE LOGIC (WHICH ONLY WRITES A ROW INTO THE ARRAY IF THE VALUE IS
C  DIFFERENT THAN THE PREVIOUS VALUE). 

C*** MODIFICATION IN SHIFT4.F: IF A TIME RESET OCCURS (I.E., A
C    SIG(IDOSE) = 0, WHERE IDOSE > 1), IT WILL BE HANDLED BY ASSIGNING 
C    AN EXTRA TIME VALUE OF 1.D19 (I.E., A LARGE VALUE REPRESENTING
C    TIME = INFINITY) TO THE IV TIME ARRAY. THEN THE REST OF THE
C    THE IV TIME ARRAY WILL BE ESTABLISHED WITH THE REST OF THE VALUES
C    IN SIG, STARTING, OF COURSE, WITH THE TIME RESET VALUE OF 0.

C    THE SAME LOGIC WILL APPLY TO THE COVARIATES AND THE BOLI.

C  NOTE THAT IND WILL BE THE RUNNING INDEX OF THE LATEST ENTRY INTO 
C  THE ARRAY. PLACE 1.D29 INTO THE LAST TIME ENTRY OF EACH SUB-ARRAY 
C  AS AN INDICATOR THAT THERE ARE NO MORE ENTRIES.

	 XIV(I,1,1) = 1.D29
	 IND = 0
	 VALAST = -99.D0

C  FOR DRUG I, THE IV VALUE IS IN COLUMN 2*I-1 OF ARRAY RS.
	  
	DO IDOSE = 1,ND

	  RR = RS(IDOSE,2*I-1)

C*** MODIFICATION IN SHIFT7.F: A TIME RESET IS NOW DESIGNATED BY A
C  SIG(IDOSE) .LE. 0, RATHER THAN JUST .EQ. 0 (SINCE A STEADY STATE
C  DOSE INDICATOR HAS A NEGATIVE DOSE TIME).

	  IF(SIG(IDOSE) .LE. 0 .AND. IDOSE .GT. 1) THEN

C  THIS REPRESENTS A TIME "RESET". IN THIS CASE, AS INDICATED ABOVE,
C  PUT IN AN EXTRA ROW FOR THE IV REPRESENTING A VERY LARGE TIME
C  AND THE SAME IV VALUE AS THE PREVIOUS VALUE. THEN PUT IN THE
C  LINE REPRESENTING THE RESET TIME OF 0.
	
	    IND = IND + 1
	    XIV(I,IND,1) = 1.D19
	    XIV(I,IND,2) = XIV(I,IND-1,2)

	    IND = IND + 1

C*** MODIFICATION IN SHIFT7.F. SET THE NEXT XIV(I,IND,1) TO BE
C  SIG(IDOSE), NOT 0, SINCE SIG(IDOSE) MAY BE < 0 (SINCE A STEADY STATE
C  DOSE INDICATOR HAS A NEGATIVE DOSE TIME).
 
	    XIV(I,IND,1) = SIG(IDOSE)
	    XIV(I,IND,2) = RR
	    XIV(I,IND+1,1) = 1.D29
	    VALAST = RR

	    GO TO 200

	  ENDIF

C  TO GET HERE, THIS DOSE LINE DOES NOT REPRESENT A TIME RESET.

	  IF(RR .NE. VALAST) THEN
         IND = IND + 1
	   XIV(I,IND,1) = SIG(IDOSE)
	   XIV(I,IND,2) = RR
	   XIV(I,IND+1,1) = 1.D29
	   VALAST = RR
	  ENDIF

  200     CONTINUE

	 END DO

C  THE ABOVE END DO IS FOR THE  DO IDOSE = 1,ND  LOOP.


	END DO

C  THE ABOVE END DO IS FOR THE 	DO I = 1,NDRUG  LOOP.


C  STEP 3:

C  ESTABLISH THE COVARIATE VALUES AND TIMES INTO COV(I,J,K). IN 
C  PARTICULAR, COV(I,J,2) IS THE JTH VALUE FOR COVARIATE I, AND 
C  COV(I,J,1) IS THE TIME THIS COV VALUE FIRST OCCURRED. SET THE 
C  LAST TIME TO 1.D29 AS AN INDICATOR THAT THERE ARE NO MORE ENTRIES
C  IN THE ARRAY.

        IF(NADD .GT. 0) THEN

	DO I = 1, NADD

C  ESTABLISH COV(I,J,K) FOR COVARIATE NO. I.
C  PRESET THE LAST VALUE TO -99 SO THAT THE FIRST VALUE WILL BE 
C  DIFFERENT AND THEREFORE ENGAGE THE LOGIC (WHICH ONLY WRITES A ROW 
C  INTO THE ARRAY IF THE VALUE IS DIFFERENT THAN THE PREVIOUS VALUE). 
C  NOTE THAT IND WILL BE THE RUNNING INDEX OF THE LATEST ENTRY INTO THE 
C  ARRAY. PLACE 1.D29 INTO THE LAST TIME ENTRY OF EACH SUB-ARRAY AS AN 
C  INDICATOR THAT THERE ARE NO MORE ENTRIES.

	 COV(I,1,1) = 1.D29
	 IND = 0
	 VALAST = -99.D0

C  FOR COVARIATE I, THE VALUE IS IN COLUMN 2*NDRUG+I OF ARRAY RS.	  

	 DO IDOSE = 1,ND

	  RR = RS(IDOSE,2*NDRUG+I)

C*** MODIFICATION IN SHIFT7.F: A TIME RESET IS NOW DESIGNATED BY A
C  SIG(IDOSE) .LE. 0, RATHER THAN JUST .EQ. 0 (SINCE A STEADY STATE
C  DOSE INDICATOR HAS A NEGATIVE DOSE TIME).

	  IF(SIG(IDOSE) .LE. 0 .AND. IDOSE .GT. 1) THEN

C  THIS REPRESENTS A TIME "RESET". IN THIS CASE, AS INDICATED ABOVE,
C  PUT IN AN EXTRA ROW FOR THE COVARIATE REPRESENTING A VERY LARGE TIME
C  AND THE SAME COV VALUE AS THE PREVIOUS VALUE. THEN PUT IN THE
C  LINE REPRESENTING THE RESET TIME OF 0.
	
	    IND = IND + 1
	    COV(I,IND,1) = 1.D19
	    COV(I,IND,2) = COV(I,IND-1,2)

	    IND = IND + 1

C*** MODIFICATION IN SHIFT7.F. SET THE NEXT COV(I,IND,1) TO BE
C  SIG(IDOSE), NOT 0, SINCE SIG(IDOSE) MAY BE < 0 (SINCE A STEADY STATE
C  DOSE INDICATOR HAS A NEGATIVE DOSE TIME).

	    COV(I,IND,1) = SIG(IDOSE) 
	    COV(I,IND,2) = RR
	    COV(I,IND+1,1) = 1.D29
	    VALAST = RR

	    GO TO 300

	  ENDIF

C  TO GET HERE, THIS DOSE LINE DOES NOT REPRESENT A TIME RESET.

	  IF(RR .NE. VALAST) THEN
           IND = IND + 1
	   COV(I,IND,1) = SIG(IDOSE)
	   COV(I,IND,2) = RR
	   COV(I,IND+1,1) = 1.D29
	   VALAST = RR
	  ENDIF

  300     CONTINUE

	 END DO

C  THE ABOVE END DO IS FOR THE   DO IDOSE = 1,ND  LOOP.

	END DO

C  THE ABOVE END DO IS FOR THE  DO I = 1, NADD  LOOP.

        ENDIF

C  THE ABOVE ENDIF IS FOR THE   IF(NADD .GT. 0)  CONDITION.



C  STEP 4:

C  ESTABLISH THE BOLUS VALUES AND TIMES INTO BOL(I,J,K). IN PARTICULAR, 
C  BOL(I,J,2) IS THE JTH BOLUS VALUE FOR DRUG I, AND BOL(I,J,1) IS THE
C  ADJUSTED (USING THE ASSOCIATED TIMELAGS TAU(I),I=1,NDRUG) TIME THIS 
C  BOLUS OCCURRED. 

	DO I = 1,NDRUG

C  ESTABLISH BOL(I,J,K) FOR DRUG I'S BOLUS. EACH ARRAY IS FILLED ONLY
C  WITH NON-0 BOLUS VALUES. NOTE THAT IND WILL BE THE RUNNING INDEX OF 
C  THE LATEST ENTRY INTO THE ARRAY. PLACE 1.D29 INTO THE LAST TIME ENTRY 
C  OF EACH SUB-ARRAY AS AN INDICATOR THAT THERE ARE NO MORE ENTRIES.

	 BOL(I,1,1) = 1.D29
	 IND = 0

C  FOR DRUG I, THE BOLUS VALUE IS IN COLUMN 2*I OF ARRAY RS.	  

	 DO IDOSE = 1,ND

	  RR = RS(IDOSE,2*I)

C*** MODIFICATION IN SHIFT7.F: A TIME RESET IS NOW DESIGNATED BY A
C  SIG(IDOSE) .LE. 0, RATHER THAN JUST .EQ. 0 (SINCE A STEADY STATE
C  DOSE INDICATOR HAS A NEGATIVE DOSE TIME).

	  IF(SIG(IDOSE) .LE. 0 .AND. IDOSE .GT. 1) THEN

C  THIS REPRESENTS A TIME "RESET". IN THIS CASE, AS INDICATED ABOVE,
C  PUT IN AN EXTRA ROW FOR THE BOLUS REPRESENTING A VERY LARGE TIME
C  AND AN ACCOMPANYING BOLUS VALUE OF 0. THEN PUT IN THE
C  LINE REPRESENTING THE RESET TIME OF 0 + THE TIMELAG ... IF
C  RR .NE. 0.
	
	    IND = IND + 1
	    BOL(I,IND,1) = 1.D19
	    BOL(I,IND,2) = 0.D0

	    IND = IND + 1


C*** THE FOLLOWING CODE IS CHANGED IN SHIFT8.F. NOW BOLUS VALUES 
C  WORK PROPERLY EVEN WITH TIMELAGS. AND AN ADDITIONAL SUBTLE CHANGE
C  WAS ADDED IN shift9.f (SEE THE COMMENTS AT THE TOP OF shift9.f),
C  AND THE EXTRA COMMENTS BELOW.


C  LOGIC IS NOW AS FOLLOWS:

C  IF SIG(IDOSE) = 0, THIS IS A TIME RESET WHICH IS NOT THE START OF
C     A STEADY STATE DOSE SET. IN THIS CASE, A BOLUS WITH A TIMELAG OF
C     TAU(I) WILL OCCUR AT SIG(IDOSE) + TAU(I) = TAU(I).

C  IF SIG(IDOSE) < 0, THIS IS A TIME RESET WHICH IS THE START OF A
C     STEADY STATE DOSE SET. IN THIS CASE:
C     THE BOLUS TIME WILL BE TAU(I) ONLY IF BOTH TAU(I) AND RR
C     ARE NOT 0. OTHERWISE, IT WILL BE SIG(IDOSE).
C     REASON: IF RR = 0, THERE IS NO BOLUS TO BE GIVEN, SO IT WOULD
C     BE SILLY TO INCLUDE AN EXTRA LINE IN THE DOSAGE REGIMEN WITH
C     A 0 BOLUS (AND IT WOULD VERY SLIGHTLY CHANGE THE RESULTS SINCE
C     THE NUMERICAL INTEGRATION THEN HAS TO INTEGRATE THROUGH AN EXTRA
C     TIME). IN AN EXAMPLE (REMARK 4.b IN NPAG109.EXP, THIS CHANGED THE
C     VALUES IN THE LOG-LIKELIHOODS OUT IN THE 13TH DIGIT, BUT SOME 
C     VALUES IN THE DENSITY FILE WERE CHANGED IN THE 4TH DIGIT).

C     ALSO, IF TAU(I) = 0, THE BOLUS HAS NO TIMELAG AND THEREFORE
C     OCCURS AT SIG(IDOSE).

C  THE FOLLOWING EXAMPLE SHOWS WHY A NON-0 BOLUS IN A STEADY STATE DOSE
C  SET, WITH TAU(I) .NE. 0, MUST BE GIVEN AT TAU(I) AND NOT
C  SIG(IDOSE) + TAU(I).

C  EX: IF SIG(IDOSE) = -12, IT MEANS THAT A STEADY STATE DOSE SET IS
C      STARTING WITH AN INTERDOSE INTERVAL OF 12 HOURS. SO, IF A 
C      BOLUS WITH A TLAG OF 1.5 HOURS IS GIVEN, ITS TIME MUST BE
C      1.5, NOT -12 + 1.5 = -10.5. REASON: AFTER THE SIG(IDOSE) OF
C      -12 IS CONVERTED IN SUBROUTINE FUNC2 TO 0, THE 1.5 WILL CORRECTLY
C      INDICATE THAT THE BOLUS IS GIVEN 1.5 HOURS AFTER THE START OF THE
C      STEADY STATE DOSE SET. ALSO, A TIME OF -10.5 WOULD COMPLETELY
C      SCREW UP THE FUNC2 LOGIC WHICH WOULD INTERPRET IT AS THE START
C      OF ANOTHER STEADY STATE DOSE SEST.

C      ON THE OTHER HAND, IF A DRUG HAS A TAU(I) = 0, IT CANNOT SHOW
C      UP AS OCCURRING AT TAU(I) = 0 SINCE THIS WILL COMPLETELY SCREW
C      UP FUNC2'S LOGIC, WHICH WILL INTERPRET THE TIME OF 0 AS A
C      TIME RESET EVENT. IN THIS CASE, THE BOLUS OCCURS AT THE START OF
C      THE STEADY STATE DOSE SET, I.E., AT SIG(IDOSE) = -12, WHICH WILL
C      BE CONVERTED TO 0 BY FUNC2).


      CALL THESAME(SIG(IDOSE),0.D0,ISAME1)
      CALL THESAME(TAU(I),0.D0,ISAME2)
      CALL THESAME(RR,0.D0,ISAME3)

      IF(ISAME1 .EQ. 1) BOL(I,IND,1) = TAU(I)
C  NOTE THAT, TECHNICALLY, WE SHOULD SET BOL(I,IND,1) = SIG(IDOSE) = 0
C  IF RR = 0, SINCE THERE IS NO REASON TO HAVE AN EXTRA LINE IN THE
C  DOSAGE REGIMEN FOR A 0 BOLUS ... BUT CHANGING THIS WOULD CHANGE
C  VERY SLIGHTLY THE RESULTS IN A 0 BOLUS CASE SINCE THERE WOULD BE ONE
C  LESS DOSAGE LINE FOR THE NUMERICAL INTEGRATOR TO INTEGRATE THROUGH,
C  SO THE CODE WILL BE LEFT AS IS, FOR CONSISTENCY SAKE.


      IF(ISAME1 .EQ. 0) THEN
       BOL(I,IND,1) = SIG(IDOSE)
       IF(ISAME2 .EQ. 0 .AND. ISAME3 .EQ. 0) BOL(I,IND,1) = TAU(I)
      ENDIF



	    BOL(I,IND,2) = RR
	    BOL(I,IND+1,1) = 1.D29
	    VALAST = RR

	    GO TO 400

	  ENDIF

C  TO GET HERE, THIS DOSE LINE DOES NOT REPRESENT A TIME RESET.


	  IF(RR .NE. 0.D0) THEN

           IND = IND + 1

C  *** CHANGE FOR SHIFT8.F.
C  NOW BOLUS VALUES CAN OCCUR IN STEADY STATE DOSES. AND IF THEY DO,
C  THE FIRST ONE MUST OCCUR AT TIME TAU(I), NOT SIG(IDOSE) + TAU(I)
C  AS THE FOLLOWING EXAMPLE ILLUSTRATES:
C  EX: SIG(1) = -12 INDICATING THAT THE STEADY STATE DOSE SET HAS
C      AN INTERDOSE INTERVAL OF 12 HOURS. TAU(1) = 1.5 -->
C      DRUG 1 HAS A TIMELAG OF 1.5 HOURS. SO, IF THE FIRST BOLUS TIME IS
C      SET =  SIG(1) + TAU(1) = -12 + 1.5 = -10.5, THIS WILL SCREW
C      UP THE FUNC2 LOGIC SINCE IN THAT CODE, THE FIRST TIME OF
C      -12 WILL BE RESET TO BE 0, AND THIS WILL BE FOLLOWED BY -10.5,
C      WHICH WILL LOOK LIKE THE START OF ANOTHER STEADY STATE DOSE
C      SET. INSTEAD, SET FIRST BOLUS TIME = TAU(1) = 1.5, WHICH IS
C      CORRECT SINCE IT OCCURS 1.5 HOURS AFTER THE STEADY STATE DOSE
C      STARTS.

         IF(SIG(IDOSE) .GE. 0.D0) BOL(I,IND,1) = SIG(IDOSE) + TAU(I)
         IF(SIG(IDOSE) .LT. 0.D0) BOL(I,IND,1) = TAU(I)

	   BOL(I,IND,2) = RR
	   BOL(I,IND+1,1) = 1.D29
	  ENDIF

  400     CONTINUE

	 END DO

C  THE ABOVE END DO IS FOR THE  DO IDOSE = 1,ND  LOOP.


	END DO


C  THE ABOVE END DO IS FOR THE  DO I = 1,NDRUG  LOOP.



C  STEP 5:

C  REASSIGN THE VALUES IN IV, BOL, AND COV TO THE APPROPRIATE ENTRIES
C  OF RS, KEEPING TRACK OF THE RUNNING INDEX, ND, OF DOSE EVENTS. IF
C  ND EXCEEDS 5000, STOP THE PROGRAM WITH A MESSAGE TO THE USER. ALSO,
C  REASSIGN THE CORRESPONDING TIME VALUES TO ARRAY SIG.

	NI = 2*NDRUG + NADD
	ND = 0

C  GO THROUGH THE ARRAYS IV, BOL, AND COV TO DETERMINE THE NEXT
C  LOWEST DOSE TIME. PUT THIS VALUE INTO RS, ALONG WITH THE 
C  CORRESPONDING VALUES FOR THE IV'S, THE BOLI, AND THE COVARIATES.

C  IN THE LOOP BELOW, IT IS NECESSARY TO KNOW TO WHAT POINT IN THE
C  IV, BOL, AND COV ARRAYS THE TIMES AND VALUES HAVE ALREADY BEEN 
C  STORED INTO RS. THESE INDICES ARE INDIV(I), I=1,NDRUG; INDBOL(I),
C  I=1,NDRUG; AND INDCOV(I), I=1,NADD, RESPECTIVELY. E.G., 
C  INDIV(2) = 4 MEANS THAT ALL VALUES IN THE IV, BOL, AND COV ARRAYS, 
C  THROUGH THE 4TH TIME FOR IV DRUG 2 (I.E., THROUGH TIME = XIV(2,4,1))
C  HAVE BEEN OR ARE ABOUT TO BE STORED INTO THE RS ARRAY.

C  SO PRESET ALL THESE INDEX INDICATORS = 1, AND INITIALIZE THE 
C  CURRENT DOSE TIME TO A NEGATIVE NO. SO THAT THE FIRST TIME
C  THROUGH THE FOLLOWING LOOP WILL ENGAGE THE LOGIC.

	DO I = 1,NDRUG
	 INDIV(I) = 1
	 INDBOL(I) = 1
	END DO

        IF(NADD .GT. 0) THEN
         DO I = 1,NADD
          INDCOV(I) = 1
         END DO
        ENDIF

	TIMNXT = -9999999.D0


  100   CONTINUE

C  FIND THE NEXT LOWEST TIME AMONG THE IV, BOL, AND COV ARRAYS.

C  ESTABLISH INTO TIMCAN(J) THE CANDIDATES FOR THE NEXT DOSE TIME
C  (AND CORRESPONDING VALUES FOR THE IV'S, BOLI, AND COVARIATES) TO
C  BE PUT INTO RS.


        DO I = 1,NDRUG
	 IF(XIV(I,INDIV(I),1) .GT. TIMNXT) TIMCAN(I)=XIV(I,INDIV(I),1)
	 IF(XIV(I,INDIV(I),1) .EQ. TIMNXT) TIMCAN(I)=XIV(I,INDIV(I)+1,1)
	END DO

        DO I = 1,NDRUG
	 IF(BOL(I,INDBOL(I),1) .GT. TIMNXT) TIMCAN(NDRUG+I) = 
     1    BOL(I,INDBOL(I),1)
	 IF(BOL(I,INDBOL(I),1) .EQ. TIMNXT) TIMCAN(NDRUG+I) = 
     1    BOL(I,INDBOL(I)+1,1)
	END DO


        IF(NADD .GT. 0) THEN
         DO I = 1,NADD
          IF(COV(I,INDCOV(I),1) .GT. TIMNXT) TIMCAN(2*NDRUG+I) = 
     1     COV(I,INDCOV(I),1)
          IF(COV(I,INDCOV(I),1) .EQ. TIMNXT) TIMCAN(2*NDRUG+I) = 
     1     COV(I,INDCOV(I)+1,1)
         END DO
        ENDIF

C  FIND THE NEXT TIMNXT, THE MINIMUM VALUE AMONG THE NI ENTRIES IN 
C  TIMCAN. TIMNXT WILL BE THE NEXT TIME TO BE PUT INTO ARRAY RS (ALONG 
C  WITH ALL THE CORRESPONDING IV'S, BOLI, AND COVARIATE VALUES). IF 
C  TIMNXT = 1.D29, IT IS BECAUSE THERE ARE NO FURTHER VALUES TO BE PUT 
C  INTO RS (I.E, THE PROCESS IS FINISHED).

	TIMNXT = TIMCAN(1)
	DO I = 2,NI
	 IF(TIMCAN(I) .LT. TIMNXT) TIMNXT = TIMCAN(I)
	END DO

	IF(TIMNXT .EQ. 1.D29) RETURN

C  SINCE TIMNXT < 1.D29, THERE ARE MORE VALUES TO BE PUT INTO RS.
C  GO THROUGH ALL THE SUBARRAYS AND PUT IN VALUES AS FOLLOWS. IF THE
C  CURRENT TIME FOR AN IV, BOLUS, OR COVARIATE IS THE SAME AS TIMNXT, 
C  PUT THE CORRESPONDING IV, BOLUS, OR COVARIATE VALUE INTO RS, AND 
C  INCREASE THE INDEX FOR THAT SUB-ARRAY TO THE NEXT VALUE. IF THE
C  CURRENT TIME FOR AN IV OR A COVARIATE IS .GT. TIMNXT, PUT THE IV OR 
C  COVARIATE VALUE FROM THE PREVIOUS ROW INTO RS, AND LEAVE THE INDEX 
C  UNCHANGED. IF THE CURRENT TIME FOR A BOLUS IS .GT. TIMNXT, PUT 0.0 
C  INTO RS (I.E., BOLUS VALUES ARE INSTANTANEOUS, WHEREAS IV AND 
C  COVARIATE VALUES CONTINUE UNTIL CHANGED), AND LEAVE THE INDEX
C  UNCHANGED.


C  TEST FOR TIMNXT = 1.D19, WHICH INDICATES A TIME RESET.

	IF(TIMNXT .EQ. 1.D19) THEN

C  TIMNXT = 1.D19 MEANS THAT THE NEXT TIME IN EACH ARRAY IS THE
C  TIME AT OR AFTER THE RESET. SO INCRASE ALL THE ARRAY INDICES BY
C  1, RESET TIMNXT TO A NEGATIVE NO. AND RETURN TO LABEL 100.

       DO I = 1,NDRUG
	  INDIV(I) = INDIV(I) + 1
	  INDBOL(I) = INDBOL(I) + 1
	 END DO


        IF(NADD .GT. 0) THEN
         DO I = 1,NADD
          INDCOV(I) = INDCOV(I) + 1
         END DO
        ENDIF

	 TIMNXT = -9999999.D0
	
	 GO TO 100

	ENDIF


	ND = ND+1

	IF(ND .GT. 5000) THEN

C  IF ND > 5000, STOP WITH A MESSAGE TO THE USER THAT THE
C  PROGRAM ONLY ALLOWS A TOTAL OF 5000 DOSE EVENTS.

   10	 WRITE(*,1) ND
    1    FORMAT(/' THE NUMBER OF DOSE EVENTS, AFTER TAKING INTO'/
     1' ACCOUNT DIFFERING TIMES DUE TO TIMELAGS IS ',I6,', MORE THAN'/
     2' THE ALLOWABLE MAXIMUM OF 5000. THE PROGRAM IS STOPPING. PLEASE'/
     3' RERUN WITH PATIENTS HAVING FEWER DOSE EVENTS, OR WITH FEWER'/
     4' TIMELAG VALUES SELECTED AS FIXED OR RANDOM PARAMETERS.'//)
	 STOP

	ENDIF

C  ND .LE. 5000, SO CONTINUE. FOR THIS DOSE EVENT, PUT IN THE CURRENT 
C  TIME, AND THE CORRESPONDING IV, BOLUS, AND COVARIATE VALUES. 


	SIG(ND) = TIMNXT

        DO I = 1,NDRUG

	 IF(TIMNXT .LT. XIV(I,INDIV(I),1)) THEN
	  RS(ND,2*I-1) = RS(ND-1,2*I-1)
	 ENDIF

	 IF(TIMNXT .EQ. XIV(I,INDIV(I),1)) THEN
	  RS(ND,2*I-1) = XIV(I,INDIV(I),2)
	  INDIV(I) = INDIV(I) + 1
	 ENDIF

	 IF(TIMNXT .LT. BOL(I,INDBOL(I),1)) THEN
	  RS(ND,2*I) = 0.D0
	 ENDIF

	 IF(TIMNXT .EQ. BOL(I,INDBOL(I),1)) THEN
	  RS(ND,2*I) = BOL(I,INDBOL(I),2)
	  INDBOL(I) = INDBOL(I) + 1
	 ENDIF

	END DO


        IF(NADD .GT. 0) THEN
         DO I = 1,NADD
          IF(TIMNXT .LT. COV(I,INDCOV(I),1))
     1     RS(ND,2*NDRUG+I) = RS(ND-1,2*NDRUG+I)
          IF(TIMNXT .EQ. COV(I,INDCOV(I),1)) THEN
           RS(ND,2*NDRUG+I) = COV(I,INDCOV(I),2)
           INDCOV(I) = INDCOV(I) + 1
          ENDIF
         END DO
        ENDIF


	GO TO 100


	END


