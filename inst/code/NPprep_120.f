	BLOCK DATA
	IMPLICIT REAL*8(A-H,O-Z)
	COMMON/TOBLK/NUMBER
	CHARACTER NUMBER(999)*3
      DATA(NUMBER(I),I=1,170)/'001','002','003','004','005','006','007',
     X'008','009',
     1'010','011','012','013','014','015','016','017','018','019','020',
     2'021','022','023','024','025','026','027','028','029','030',
     3'031','032','033','034','035','036','037','038','039','040',
     4'041','042','043','044','045','046','047','048','049','050',
     5'051','052','053','054','055','056','057','058','059','060',
     6'061','062','063','064','065','066','067','068','069','070',
     7'071','072','073','074','075','076','077','078','079','080',
     8'081','082','083','084','085','086','087','088','089','090',
     9'091','092','093','094','095','096','097','098','099','100',
     X'101','102','103','104','105','106','107','108','109','110',
     1'111','112','113','114','115','116','117','118','119','120',
     2'121','122','123','124','125','126','127','128','129','130',
     3'131','132','133','134','135','136','137','138','139','140',
     4'141','142','143','144','145','146','147','148','149','150',
     5'151','152','153','154','155','156','157','158','159','160',
     6'161','162','163','164','165','166','167','168','169','170'/
	DATA(NUMBER(I),I=171,340)/'171','172','173','174','175','176',
     X'177','178','179','180',
     8'181','182','183','184','185','186','187','188','189','190',
     9'191','192','193','194','195','196','197','198','199','200',
     X'201','202','203','204','205','206','207','208','209','210',
     1'211','212','213','214','215','216','217','218','219','220',
     2'221','222','223','224','225','226','227','228','229','230',
     3'231','232','233','234','235','236','237','238','239','240',
     4'241','242','243','244','245','246','247','248','249','250',
     5'251','252','253','254','255','256','257','258','259','260',
     6'261','262','263','264','265','266','267','268','269','270',
     7'271','272','273','274','275','276','277','278','279','280',
     8'281','282','283','284','285','286','287','288','289','290',
     9'291','292','293','294','295','296','297','298','299','300',
     X'301','302','303','304','305','306','307','308','309','310',
     1'311','312','313','314','315','316','317','318','319','320',
     2'321','322','323','324','325','326','327','328','329','330',
     3'331','332','333','334','335','336','337','338','339','340'/
	DATA(NUMBER(I),I=341,510)/'341','342','343','344','345','346',
     X'347','348','349','350',
     5'351','352','353','354','355','356','357','358','359','360',
     6'361','362','363','364','365','366','367','368','369','370',
     7'371','372','373','374','375','376','377','378','379','380',
     8'381','382','383','384','385','386','387','388','389','390',
     9'391','392','393','394','395','396','397','398','399','400',
     X'401','402','403','404','405','406','407','408','409','410',
     1'411','412','413','414','415','416','417','418','419','420',
     2'421','422','423','424','425','426','427','428','429','430',
     3'431','432','433','434','435','436','437','438','439','440',
     4'441','442','443','444','445','446','447','448','449','450',
     5'451','452','453','454','455','456','457','458','459','460',
     6'461','462','463','464','465','466','467','468','469','470',
     7'471','472','473','474','475','476','477','478','479','480',
     8'481','482','483','484','485','486','487','488','489','490',
     9'491','492','493','494','495','496','497','498','499','500',
     X'501','502','503','504','505','506','507','508','509','510'/
	DATA(NUMBER(I),I=511,680)/'511','512','513','514','515','516',
     X'517','518','519','520',
     2'521','522','523','524','525','526','527','528','529','530',
     3'531','532','533','534','535','536','537','538','539','540',
     4'541','542','543','544','545','546','547','548','549','550',
     5'551','552','553','554','555','556','557','558','559','560',
     6'561','562','563','564','565','566','567','568','569','570',
     7'571','572','573','574','575','576','577','578','579','580',
     8'581','582','583','584','585','586','587','588','589','590',
     9'591','592','593','594','595','596','597','598','599','600',
     X'601','602','603','604','605','606','607','608','609','610',
     1'611','612','613','614','615','616','617','618','619','620',
     2'621','622','623','624','625','626','627','628','629','630',
     3'631','632','633','634','635','636','637','638','639','640',
     4'641','642','643','644','645','646','647','648','649','650',
     5'651','652','653','654','655','656','657','658','659','660',
     6'661','662','663','664','665','666','667','668','669','670',
     7'671','672','673','674','675','676','677','678','679','680'/
	DATA(NUMBER(I),I=681,850)/'681','682','683','684','685','686',
     X'687','688','689','690',
     9'691','692','693','694','695','696','697','698','699','700',
     X'701','702','703','704','705','706','707','708','709','710',
     1'711','712','713','714','715','716','717','718','719','720',
     2'721','722','723','724','725','726','727','728','729','730',
     3'731','732','733','734','735','736','737','738','739','740',
     4'741','742','743','744','745','746','747','748','749','750',
     5'751','752','753','754','755','756','757','758','759','760',
     6'761','762','763','764','765','766','767','768','769','770',
     7'771','772','773','774','775','776','777','778','779','780',
     8'781','782','783','784','785','786','787','788','789','790',
     9'791','792','793','794','795','796','797','798','799','800',
     X'801','802','803','804','805','806','807','808','809','810',
     1'811','812','813','814','815','816','817','818','819','820',
     2'821','822','823','824','825','826','827','828','829','830',
     3'831','832','833','834','835','836','837','838','839','840',
     4'841','842','843','844','845','846','847','848','849','850'/
	DATA(NUMBER(I),I=851,999)/'851','852','853','854','855','856',
     X'857','858','859','860',
     6'861','862','863','864','865','866','867','868','869','870',
     7'871','872','873','874','875','876','877','878','879','880',
     8'881','882','883','884','885','886','887','888','889','890',
     9'891','892','893','894','895','896','897','898','899','900',
     X'901','902','903','904','905','906','907','908','909','910',
     1'911','912','913','914','915','916','917','918','919','920',
     2'921','922','923','924','925','926','927','928','929','930',
     3'931','932','933','934','935','936','937','938','939','940',
     4'941','942','943','944','945','946','947','948','949','950',
     5'951','952','953','954','955','956','957','958','959','960',
     6'961','962','963','964','965','966','967','968','969','970',
     7'971','972','973','974','975','976','977','978','979','980',
     8'981','982','983','984','985','986','987','988','989','990',
     9'991','992','993','994','995','996','997','998','999'/
	END
      IMPLICIT REAL*8(A-H,O-Z)
	PARAMETER(MAXDIM=30, MAXGRD=1500, MAXSUB = 800, MAXOBDIM=150,
     1          MAXNUMEQ = 7)
      COMMON/TOWRITE/IALLIN,IVERIFY,NCOVA,ICOVTYPE,COVNAME
      DIMENSION WORK(MAXGRD),IRAN(32),AB(30,2),VALFIX(20),
     1PYJGX(MAXSUB,MAXGRD),
     4AAB(30,2),IJUNK(MAXGRD),VVALFX(20),PYJGXX(MAXGRD),
     5CORDEN(MAXGRD,MAXDIM+1),CORHOLD(MAXGRD,MAXDIM+1),ATOL(20),
     6EXX(MAXSUB,3,30),YPREDPOP(MAXSUB,MAXNUMEQ,MAXOBDIM,3),
     7YPREDBAY(MAXSUB,MAXNUMEQ,MAXOBDIM,3),SERNUM(MAXSUB),
     8IASS(MAXNUMEQ),C0P(MAXNUMEQ),C1P(MAXNUMEQ),C2P(MAXNUMEQ),
     9C3P(MAXNUMEQ),YO(MAXOBDIM,MAXNUMEQ),IALLPAT(MAXNUMEQ),
     1ASSMULT(MAXNUMEQ),NCSTORE(MAXNUMEQ),GENCOEF(MAXNUMEQ,5,4),
     2IPATVEC(MAXSUB),YPREDPOPT(MAXSUB,MAXNUMEQ,7201,3),AF(7),
     4ICOVTYPE(26),RANFIXEST(20),RRANFIXEST(20)
      CHARACTER NUMBER(999)*3,PATFIL*20,PREFIX*5,PAR(30)*11,PPAR(30)*11,
     1 FROMFIL*20,READLINE*1000,EXT*3,PPARFX(20)*11,PRIFIL2*20,
     2 PARFIX(20)*11,FROMLAST*20,CODE*14,FORFILE*20,PATH*60,TMPFILE*13,
     3 PATHFILE*73,ESTNAM*6,BLOCKPAT*20,CODEPAT*15,PATHFILAST*73,
     4 PATHFIL2*73,ALLINSTRUCT*20,COVNAME(26)*11,ERRFIL*20,
     5 PARRANFIX(20)*11,PPARRANFIX(20)*11
      CHARACTER(LEN=20) :: OSName
      CHARACTER(LEN=5) :: CopyFile
      CHARACTER(LEN=4) :: DeleteFile
      CHARACTER(LEN=6) :: ClearScreen
      CHARACTER(LEN=10) :: ListDir
	COMMON/TOBLK/NUMBER
      COMMON/ERROR/ERRFIL
      ERRFIL = 'ERRORLOG'
	WRITE(*,3214) MAXSUB,MAXOBDIM,MAXDIM,MAXGRD,MAXNUMEQ
 3214   FORMAT(//' IN THIS "PC" PROGRAM, BECAUSE OF PC SPACE LIMITATIONS
     1,'/
     1' THE NUMBER OF POPULATION SUBJECTS IS CURRENTLY LIMITED TO ',I4,'
     2,'//
     2' THE NUMBER OF OBSERVATIONS PER SUBJECT IS LIMITED TO ',I4,','//
     2' THE NUMBER OF RANDOM PARAMETERS IS LIMITED TO ',I2,','//
     3' THE NUMBER OF ACTIVE GRID POINTS IN THE JOINT DENSITY RESULTS'/
     4' 	   FILE IS LIMITED TO ',I10,','//
     5' THE NUMBER OF OUTPUT EQUATIONS IS LIMITED TO ',I2,'.'//)
       CALL GET_COMMAND_ARGUMENT(1,OSName)
       IF ((INDEX(OSName,"MacOSX",.TRUE.).EQ.1)
     $ .OR.(INDEX(OSName,"Darwin",.TRUE.).EQ.1)
     $ .OR.(INDEX(OSName,"BSD",.TRUE.).EQ.1)) THEN
          PRINT *,"Requested OS is ", OSName
          OSName="UNIX"
          PRINT *,"Setting OS to ", OSName
          PRINT *,""
          CopyFile="cp "
          DeleteFile="rm "
          ClearScreen="clear "
          ListDir="ls -tp "
       ELSE IF ((INDEX(OSName,"DOS",.TRUE.).EQ.1)
     $ .OR.(INDEX(OSName,"WinXP",.TRUE.).EQ.1)
     $ .OR.(INDEX(OSName,"XP",.TRUE.).EQ.1)
     $ .OR.(INDEX(OSName,"WinXP",.TRUE.).EQ.1)
     $ .OR.(INDEX(OSName,"Vista",.TRUE.).EQ.1)
     $ .OR.(INDEX(OSName,"Win7",.TRUE.).EQ.1)) THEN
          PRINT *,"Requested OS is ", OSName
          OSName="DOS"
          PRINT *,"Setting OS to ", OSName
          CopyFile="COPY "
          DeleteFile="DEL "
          ClearScreen="CLS "
          ListDir="DIR /OD "
       ELSE
          PRINT *,"WARNING: Operating system not declared."
          PRINT *,"WARNING: Can not initialize system calls."
          PRINT *,""
          PRINT *,"Possible command line error, try:"
          PRINT *,"C:\> npbig.exe <DOS,Win,XP,Vista,or Win7>"
          PRINT *,"unix$ npbig <MacOSX,Darwin,BSD>"
          PRINT *,""
          PRINT *,"NPAG Exiting with status 2"
          PRINT *,""
          CALL EXIT(2)
       END IF
      IVERIFY = 1
 9880 WRITE(*,9876)
 9876 FORMAT(//' ENTER 1 IF YOU HAVE AN INSTRUCTION FILE IN THE '/
     1'         CURRENT DIRECTORY WHICH HAS ALL THE INSTRUCTIONS FOR'/
     2'         AN NPAG ANALYSIS (THIS FILE MUST HAVE "REM_BAK JUN_13"'/
     3'         OR A LATER DATE ON THE FIRST LINE). AND NOTE THAT IF'/
     4'         YOU USE THIS OPTION, AND THE ENTRY ON THE SECOND LINE'/
     5'         IS 0, THE PROGRAM WILL RUN WITH NO FURTHER USER INPUT.'/
     6'         BUT IF THE ENTRY ON THE 2ND LINE IS 1, YOU WILL HAVE'/
     7'         THE CHANCE TO EDIT YOUR INSTRUCTIONS BELOW.'//
     8' ENTER 0 OTHERWISE (THIS INCLUDES THE OPTION OF USING AN '/
     9'         OLDER INSTRUCTION FILE): ')
      READ(*,*,ERR=9880) IALLIN
      IF(IALLIN .NE. 1 .AND. IALLIN .NE. 0) GO TO 9880
	IF(IALLIN .EQ. 1) THEN
       PATH = ' '
       NOB = 0
       WRITE(*,*)
       WRITE(*,*)' ENTER THE NAME OF THE INSTRUCTION FILE; '
       WRITE(*,*)' ENTER -99 TO SEE ALL OR A PART OF YOUR DIRECTORY: '
       READ(*,2) ALLINSTRUCT
       IF(ALLINSTRUCT(1:3) .EQ. '-99')
     1  CALL SEEDIR(PATH,NOB,ALLINSTRUCT,OSName,ListDir)
     	 TMPFILE = ' '
       TMPFILE = ALLINSTRUCT
       CALL FULLNAME(PATH,TMPFILE,PATHFILE)
       OPEN(25,FILE=PATHFILE,ERR=9810,STATUS='OLD')
       GO TO 9820
 9810  WRITE(*,5316) PATHFILE
       GO TO 9880
 9820   CONTINUE
       READ(25,7123) CODE
	 ICODE1 = 0
       IF(CODE .EQ. 'REM_BAK JUN_13') ICODE1 = 1
       IF(CODE .EQ. 'REM_BAK OCT_15') ICODE1 = 2
       IF(ICODE1 .EQ. 0) THEN
        WRITE(*,9821)
 9821   FORMAT(//' YOUR INSTRUCTION FILE IS NOT FROM THE ALLOWABLE '/
     1' SET OF INSTRUCTION FILES.'//
     2' FOR THIS OPTION, YOU MUST USE A FILE WITH REM_BAK XXX_XX IN '/
     3' COLUMNS 1 THROUGH 14 ON LINE 1, WHERE  XXX_XX  IS JUN_13 OR'/
     4' A MORE RECENT DATE.'//)
        GO TO 9880
       ENDIF
      READ(25,*)
      READ(25,*) IVERIFY
      IF(IVERIFY .EQ. 1) THEN
       FROMLAST = 'SAVEINST.TMP'
     	 TMPFILE = ' '
	 TMPFILE = FROMLAST
	 CALL FULLNAME(PATH,TMPFILE,PATHFILAST)
       IFIL = 1
       INOPT1 = 0
      ENDIF
      READ(25,*)
      READ(25,2) FORFILE
      READ(25,*)
      READ(25,*) NDIM
      READ(25,*)
      READ(25,*) NP
      READ(25,*)
      READ(25,*) (IRAN(I),I=1,NP)
      READ(25,*)
      READ(25,*) NVAR
      IF(NVAR .GT. MAXDIM) THEN
	 WRITE(*,111) NVAR,MAXDIM
  111    FORMAT(//' YOUR INSTRUCTION FILE, SHOWS ',I2,' PARAMETERS TO'/
     1' BE RANDOM VARIABLES. THE LIMIT IS CURRENTLY ',I2,'. PLEASE'/
     2' RERUN THIS PROGRAM AFTER EDITING YOUR INSTRUCTION FILE AND'/
     3' MAKING THE CORRECTION. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,111) NVAR,MAXDIM
        CLOSE(42)
       CALL PAUSE
       STOP
      ENDIF
      READ(25,*)
      DO I = 1,NVAR
       READ(25,1717) PAR(I)
      END DO
         READ(25,*)
      DO I=1,NVAR
       READ(25,*) (AB(I,J),J=1,2)
      END DO
      READ(25,*)
      READ(25,*) NOFIX
      IF(NOFIX .GT. 20) THEN
       WRITE(*,112) NOFIX
  112  FORMAT(//' YOUR INSTRUCTION FILE SHOWS ',I2,' PARAMETERS TO BE'/
     1' FIXED PARAMETERS. THE LIMIT IS CURRENTLY 20. PLEASE RERUN'/
     2' THIS PROGRAM AFTER EDITING YOUR INSTRUCTION FILE AND MAKING'/
     3' THE CORRECTION. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,112) NOFIX
        CLOSE(42)
       CALL PAUSE
       STOP
      ENDIF
      READ(25,*)
      IF(NOFIX .GT. 0) THEN
       DO I = 1,NOFIX
        READ(25,1717) PARFIX(I)
       END DO
      ENDIF
      READ(25,*)
      IF(NOFIX .GT. 0) READ(25,*) (VALFIX(I),I=1,NOFIX)
      IF(ICODE1 .EQ. 1) NRANFIX = 0
      IF(ICODE1 .EQ. 2) THEN
       READ(25,*)
       READ(25,*) NRANFIX
      IF(NRANFIX .GT. 20) THEN
        WRITE(*,3112) NRANFIX
 3112  FORMAT(//' YOUR INSTRUCTION FILE SHOWS ',I2,' PARAMETERS TO BE'/
     1' RANFIX PARAMETERS. THE LIMIT IS CURRENTLY 20. PLEASE RERUN'/
     2' THIS PROGRAM AFTER EDITING YOUR INSTRUCTION FILE AND MAKING'/
     3' THE CORRECTION. '//)
         OPEN(42,FILE=ERRFIL)
          WRITE(42,3112) NRANFIX
         CLOSE(42)
        CALL PAUSE
        STOP
       ENDIF
      READ(25,*)
      IF(NRANFIX .GT. 0) THEN
       DO I = 1,NRANFIX
        READ(25,1717) PARRANFIX(I)
       END DO
      ENDIF
       READ(25,*)
       IF(NRANFIX .GT. 0) READ(25,*) (RANFIXEST(I),I=1,NRANFIX)
      ENDIF
	IF(NVAR + NOFIX + NRANFIX .GT. 32) THEN
	 WRITE(*,113) NVAR + NOFIX + NRANFIX
  113    FORMAT(//' YOUR INSTRUCTION FILE SHOWS A TOTAL OF ',I2/
     1' PARAMETERS. THE LIMIT IS CURRENTLY 32. PLEASE RERUN THIS '/
     2' PROGRAM AFTER EDITING YOUR INSTRUCTION FILE (AND MODEL FILE IF'/
     3' NECESSARY) AND MAKING THE CORRECTION. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,113) NVAR+NOFIX+NRANFIX
        CLOSE(42)
       CALL PAUSE
       STOP
      ENDIF
      READ(25,*)
      READ(25,*) TOLER
      RTOL = TOLER
      DO I = 1,NDIM
       ATOL(I) = TOLER
      END DO
      MF = 22
         READ(25,*)
         READ(25,*) IFORMTT
         IF(IFORMTT .EQ. 1) IFORMT = 3
         IF(IFORMTT .EQ. 2) IFORMT = 1
         IF(IFORMT .EQ. 2) THEN
          WRITE(*,1231)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,1231)
        CLOSE(42)
          CALL PAUSE
          STOP
         ENDIF
         IF(IFORMT .EQ. 1) THEN
          IDIRCT = 0
          READ(25,*)
          READ(25,2222) PREFIX
          READ(25,*)
          READ(25,222) EXT
         ENDIF
         IF(IFORMT .EQ. 3) THEN
          READ(25,*)
          READ(25,2) BLOCKPAT
          TMPFILE = ' '
          TMPFILE = BLOCKPAT
          CALL FULLNAME(PATH,TMPFILE,PATHFILE)
          OPEN(67,FILE=PATHFILE,STATUS='OLD')
          ICODE1PAT = 0
          READ(67,7126) CODEPAT
          IF(CODEPAT .EQ. '"POPDATA APR_11') ICODE1PAT = 1
          IF(CODEPAT(1:14) .EQ. 'POPDATA APR_11') ICODE1PAT = 1
          IF(CODEPAT .EQ. '"POPDATA DEC_11') ICODE1PAT = 1
          IF(CODEPAT(1:14) .EQ. 'POPDATA DEC_11') ICODE1PAT = 1
          IF(ICODE1PAT .EQ. 0) THEN
           WRITE(*,3131)
           WRITE(*,*)' THE PROGRAM STOPS.'
           CLOSE(67)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3131)
         WRITE(42,*)' THE PROGRAM STOPS.'
        CLOSE(42)
           CALL PAUSE
           STOP
          ENDIF
          CLOSE(67)
          READ(25,*)
          READ(25,*) NCOVA
      READ(25,*)
      IF(NCOVA .GT. 0) THEN
       DO I = 1,NCOVA
        READ(25,1717) COVNAME(I)
       END DO
      ENDIF
         READ(25,*)
         IF(NCOVA .GT. 0) READ(25,*) (ICOVTYPE(I),I=1,NCOVA)
         ENDIF
         READ(25,*)
         READ(25,*) NSUBTOT
         READ(25,*)
         READ(25,*) NSUB
         READ(25,*)
         CALL GETIPATF(25,NSUBTOT,NSUB,MAXSUB,IPATVEC,IERRR)
        IF(IERRR .EQ. -1) THEN
          WRITE(*,2127)
 2127     FORMAT(/' ... OR EDIT THE INSTRUCTION FILE USED IN THIS'/
     1'     RUN, AND MAKE THE INDICATED CORRECTION.'/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,2128)
 2128   FORMAT(//' THERE WAS AN ERROR IN THE READING OF PATIENT NOS.'/
     1' TO BE USED FOR THIS ANALYSIS. PLEASE ENTER DATA VIA THE '/
     2' KEYBOARD OR USING ANOTHER INSTRUCTION FILE.'/)
         WRITE(42,2127)
         CLOSE(42)
         CALL PAUSE
         STOP
        ENDIF
         READ(25,*)
         READ(25,*) NUMEQT
         READ(25,*)
         DO IEQ=1,NUMEQT
          READ(25,*) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
         END DO
         READ(25,*)
         READ(25,*) IERRMOD
         READ(25,*)
         READ(25,*) GAMLAM0
         READ(25,*)
         READ(25,*) (IASS(I),I=1,NUMEQT)
         DO IEQ=1,NUMEQT
          ASSMULT(IEQ) = 1.D0
          IALLPAT(IEQ) = 0
         END DO
         READ(25,*)
         READ(25,*) NDRUG
         READ(25,*)
         READ(25,*) (AF(I),I=1,NDRUG)
         IAF = 1
         READ(25,*)
         READ(25,*) INDPTS
         READ(25,*)
         READ(25,*) MAXCYC
         IF(MAXCYC .GT. 9997) MAXCYC = 9997
         READ(25,*)
         READ(25,*) JSTOP
         READ(25,*)
         IF(JSTOP .NE. 1) READ(25,*) TOLC
         IF(JSTOP .EQ. 1 .OR. JSTOP .EQ. 2) THEN
          JSTOP = 3
          TOLC = .01D0
         ENDIF
         NINT=100
         READ(25,*)
         READ(25,*) IDELTA
         READ(25,*)
         READ(25,*) XMIC
         READ(25,*)
         READ(25,*) ICENT
         READ(25,*)
	   READ(25,*) AUCINT
         READ(25,*)
         READ(25,*) INPRI
         READ(25,*)
         IF(INPRI .EQ. 0) READ(25,2) PRIFIL2
       CLOSE(25)
       GO TO 1230
      ENDIF
     	CALL GETPATH(PATH,NOB, OSName)
 6280   WRITE(*,6278)
 6278   FORMAT(//' ENTER 1 TO DO AN ANALYSIS; '/
     2' ENTER 2 TO EXAMINE THE RESULTS FROM A PREVIOUS RUN: ')
	READ(*,*,ERR=6280) IANAL
	IF(IANAL .NE. 1 .AND. IANAL .NE. 2) GO TO 6280
        IF(IANAL .EQ. 2) THEN
         CALL PREVRUN(PATH,NOB,MAXSUB,MAXDIM,MAXGRD,CORDEN,CORHOLD,WORK,
     1    IJUNK,PYJGX,PYJGXX,EXX,YPREDPOP,YPREDPOPT,YPREDBAY,
     2    SERNUM,MAXOBDIM,YO,IPATVEC,OSName,ClearScreen,ListDir,
     3    MAXNUMEQ)
         STOP
        ENDIF
        WRITE(*,919)
  919   FORMAT(//' ***************** VERY IMPORTANT *****************'//
     1' YOUR FORTRAN MODEL FILE MUST BE AN EDITED VERSION OF TSTMULTN.FO
     2R.'//
     3' IF THIS IS NOT SO, PLEASE STOP THE PROGRAM NOW. THEN CREATE '/
     4' YOUR MODEL FILE BY EDITING TSTMULTN.FOR AND PLACING YOUR CODE'/
     5' AS INSTRUCTED BY THE COMMENTS IN THAT FILE. AT THAT POINT, YOU'/
     6' WILL BE READY TO RERUN THIS PROGRAM.'//
     7' ***************** VERY IMPORTANT *****************'//)
        CALL PAUSE
        WRITE(*,5001)
 5001   FORMAT(/' ENTER THE NAME OF YOUR FORTRAN MODEL FILE: ')
     	  READ(*,2) FORFILE
 5010	TMPFILE = ' '
      TMPFILE = FORFILE
      CALL FULLNAME(PATH,TMPFILE,PATHFILE)
      OPEN(28,FILE=PATHFILE,ERR=50,STATUS='OLD',POSITION='APPEND')
      GO TO 30
   50   WRITE(*,4406) FORFILE
 4406    FORMAT(//' THE FOLLOWING FILE DOES NOT EXIST ... '/
     1'    ',A73/
     2' ENTER THE CORRECT FILENAME OR ... '/
     2' ENTER -99 TO SEE ALL OR A PART OF YOUR DIRECTORY: ')
	READ(*,2) FORFILE
	IF(FORFILE(1:3) .EQ. '-99') THEN
           CALL SEEDIR(PATH,NOB,FORFILE,OSName,ListDir)
	ENDIF
      GO TO 5010
   30	CALL USERPREP(NDIM,NP,NVAR,MAXDIM,PAR,NOFIX,PARFIX,NRANFIX,
     1 PARRANFIX,IRAN)
	CLOSE(28)
  915   WRITE(*,913)
  913   FORMAT(/' ENTER 1 TO SET ALL TOLERANCES (FOR THE O.D.E. '/
     1'         SOLVER) TO THE DEFAULT VALUE ... 1.D-4.'/
     2' ENTER 0 TO SELECT A DIFFERENT VALUE FOR THE TOLERANCES: ')
	READ(*,*,ERR=915) ITOL
	IF(ITOL .NE. 0 .AND. ITOL .NE. 1) GO TO 915
	TOLER=1.D-4
	IF(ITOL .EQ. 0) THEN
  910	WRITE(*,914)
  914  FORMAT(/' ENTER A POSITIVE VALUE FOR THE TOLERANCE PARAMETERS: ')
	READ(*,*,ERR=910) TOLER
	IF(TOLER .LE. 0.D0) GO TO 910
	ENDIF
	RTOL = TOLER
	DO I=1,NDIM
	 ATOL(I) = TOLER
	END DO
	MF = 22
 4076   FORMAT(/' SEE ABOVE; PLEASE ENTER A POSITIVE INTEGER: ')
 4035     FORMAT(/' SEE ABOVE; PLEASE ENTER 0 OR 1: ')
  138   FORMAT(/' PLEASE ENTER ONE OF THE REQUESTED VALUES: ')
    2 FORMAT(A20)
  222 FORMAT(A3)
 2222 FORMAT(A5)
	WRITE(*,4362)
 4362   FORMAT(/' BEFORE YOU ENTER INPUT INSTRUCTIONS BELOW, YOU MUST'/
     1' NOW SPECIFY A FILE TO SAVE THESE INSTRUCTIONS AS THEY ARE '/
     2' BEING ENTERED (IF YOU USE KEYBOARD ENTRY), OR AS THEY ARE'/
     3' BEING READ BACK TO YOU (REGARDLESS OF HOW YOU ENTER THE DATA).'/
     4/
     5' IF YOU INTEND TO USE AN INSTRUCTION FILE TO ENTER DATA, BE '/
     6' SURE NOT TO GIVE THIS CURRENT FILE THE SAME NAME AS YOUR'/
     7' INSTRUCTION FILE.'//)
 4360   WRITE(*,4361)
 4361   FORMAT(//' ALL THE USER-INPUT INFORMATION WILL BE SAVED TO'/
     1' A FILE AS IT IS ENTERED. BY DEFAULT THIS FILE WILL BE CALLED'/
     2' SAVEINST.TMP. '//
     3' ENTER 1 TO USE THIS DEFAULT FILENAME; '/
     4' ENTER 0 TO SAVE INPUT INFO TO A DIFFERENT FILE: ')
	READ(*,*,ERR=4360) ISAVE
	IF(ISAVE .NE. 0 .AND. ISAVE .NE. 1) GO TO 4360
	IF(ISAVE .EQ. 1) FROMLAST = 'SAVEINST.TMP'
	IF(ISAVE .EQ. 0) THEN
 4365   WRITE(*,*)' ENTER THE DESIRED FILENAME: '
	READ(*,2) FROMLAST
	ENDIF
     	TMPFILE = ' '
	TMPFILE = FROMLAST
	CALL FULLNAME(PATH,TMPFILE,PATHFILAST)
	OPEN(29,FILE=PATHFILAST,ERR=4375,STATUS='NEW')
	GO TO 4380
 4375   WRITE(*,9826) PATHFILAST
 9826   FORMAT(/' THE FOLLOWING FILE ALREADY EXISTS ....'/
     1'    ',A73/
     1' ENTER 0 TO ENTER A NEW FILENAME;'/
     2' ENTER 1 TO OVERWRITE THIS FILE: ')
	READ(*,*,ERR=4375) IFILE
	IF(IFILE .NE. 0 .AND. IFILE .NE. 1) GO TO 4375
	IF(IFILE .EQ. 0) GO TO 4360
	IF(IFILE .EQ. 1) OPEN(29,FILE=PATHFILAST)
 4380   CLOSE(29)
 6310 WRITE(*,38)
   38 FORMAT(//' ENTER 1 TO ENTER INSTRUCTIONS FROM THE OUTPUT OF AN'/
     1'         IT2B RUN;'/
     2' ENTER 0 TO ENTER INSTRUCTIONS WITHOUT FIRST RUNNING IT2B: ')
      READ(*,*,ERR=6310) INOPT1
      IF(INOPT1 .NE. 1 .AND. INOPT1 .NE. 0) GO TO 6310
      IF(INOPT1 .EQ. 1) THEN
 6340	WRITE(*,6341)
 6341   FORMAT(//' ENTER THE NAME OF THE FILE CREATED BY AN IT2B RUN'/
     2' WHICH CONTAINS INPUT INSTRUCTIONS FOR THIS PROGRAM.'/
     4' IT WILL BE OF THE FORM  FROMxxxx, WHERE xxxx WAS THE JOB'/
     5' NUMBER ASSIGNED TO THE RUN.'//)
      WRITE(*,*)' ENTER -99 TO SEE ALL OR A PART OF YOUR DIRECTORY: '
      READ(*,2) FROMFIL
      IF(FROMFIL(1:3) .EQ. '-99') THEN
       CALL SEEDIR(PATH,NOB,FROMFIL,OSName,ListDir)
      ENDIF
     	TMPFILE = ' '
	TMPFILE = FROMFIL
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
        OPEN(23,FILE=PATHFILE,ERR=5315,STATUS='OLD')
	GO TO 6350
 5315   WRITE(*,5316) PATHFILE
 5316   FORMAT(//' THE FOLLOWING FILE DOES NOT EXIST ... '/
     1'    ',A73)
	GO TO 6310
 6350	READ(23,*,ERR=6360) IFORMT
	IF(IFORMT .EQ. -1) THEN
	 WRITE(*,6352)
 6352  FORMAT(//' THIS FILE IS FROM AN IT2B RUN WHICH'/
     1' TERMINATED ABNORMALLY. IT CANNOT BE USED AS INPUT TO THIS'/
     2' PROGRAM.')
	 GO TO 6310
	ENDIF
	GO TO 6370
 6360   WRITE(*,6353) FROMFIL
 6353   FORMAT(//' FILE ',A20,' IS NOT A FILE CREATED BY AN '/
     1' IT2B RUN TO BE USED AS INPUT TO THIS PROGRAM.'//
     2' SUCH A FILE MUST HAVE THE NUMBER, 1, ON LINE 1.'/)
	GO TO 6310
    3 FORMAT(A1000)
 6370 READ(23,3) READLINE
	ICODE = -1
	IF(READLINE(1:14) .EQ. 'REM_FRN OCT_97') ICODE=14
	IF(READLINE(1:14) .EQ. 'REM_FRN JUN_98') ICODE=18
	IF(READLINE(1:14) .EQ. 'REM_FRN OCT_99') ICODE=101
	IF(READLINE(1:14) .EQ. 'REM_FRN FEB_04') ICODE=102
	IF(READLINE(1:14) .EQ. 'REM_FRN JUL_11') ICODE=103
	IF(READLINE(1:14) .EQ. 'REM_FRN MAR_16') ICODE=104
      IF(ICODE .EQ. -1) THEN
       WRITE(*,5311) FROMFIL
 5311  FORMAT(//' FILE ',A20,' IS NOT A FILE CREATED BY AN '/
     1' IT2B RUN TO BE USED AS INPUT TO THIS PROGRAM.'//
     2' SUCH A FILE MUST HAVE "REM_FRN OCT_97", OR A MORE RECENT DATE'/
     3' ON LINE 2, STARTING AT COLUMN 1.'/)
       GO TO 6310
      ENDIF
      IF(NRANFIX .GT. 0 .AND. ICODE .LT. 104) THEN
       WRITE(*,9197) FROMFIL
 9197  FORMAT(//' BECAUSE YOU SELECTED SOME PARAMETERS TO BE RANFIX,'/
     1' YOU MAY NOT USE ',A20,' AS AN INSTRUCTION FILE, SINCE THAT'/
     2' FILE CAME FROM AN IT2B RUN WHICH DID NOT ALLOW RANFIX '/
     3' PARAMETERS. '/)
       CALL PAUSE
       GO TO 6310
      ENDIF
        IF(ICODE .LE. 102) THEN
         READ(23,2222) PREFIX
         READ(23,222) EXT
        ENDIF
        IF(ICODE .GE. 103) THEN
         READ(23,2) BLOCKPAT
         IFORMT = 3
        ENDIF
	IF(ICODE .LE. 101) THEN
	 READ(23,*) NSUB
	 NSUBTOT = NSUB
	 DO I=1,NSUB
	  IPATVEC(I) = I
	 END DO
	ENDIF
	IF(ICODE .GE. 102) THEN
	 READ(23,*) NSUBTOT
	 READ(23,*) NSUB
	 CALL GETIPATF(23,NSUBTOT,NSUB,MAXSUB,IPATVEC,IERRR)
	 IF(IERRR .EQ. -1) GO TO 6310
	ENDIF
      IF(NOFIX .GT. 0) READ(23,*) (VALFIX(I),I=1,NOFIX)
      IF(NRANFIX .GT. 0) READ(23,*) (RANFIXEST(I),I=1,NRANFIX)
	DO I=1,NVAR
         READ(23,*) (AB(I,J),J=1,2)
	END DO
	IF(ICODE .EQ. 14) NUMEQT=1
	IF(ICODE .GT. 14) READ(23,*) NUMEQT
	 DO IEQ=1,NUMEQT
	  IF(ICODE .LT. 101) ASSMULT(IEQ) = 1.D0
	  IF(ICODE .GE. 101) READ(23,*) ASSMULT(IEQ)
	  READ(23,*) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	 END DO
	IERRMOD = 1
	DO IEQ=1,NUMEQT
	 IASS(IEQ) = 3
	 IALLPAT(IEQ) = 0
	END DO
        IF(ICODE .LE. 102) READ(23,*) AFSCALAR
        IAF = 0
        IF(ICODE .GE. 103) THEN
         READ(23,*) NDRUG
         READ(23,*) (AF(I),I=1,NDRUG)
         IAF = 1
        ENDIF
	CLOSE(23)
	INDPTS=6
	MAXCYC=9997
	JSTOP=3
	TOLC = .01D0
	NINT=100
	IDELTA=12
	XMIC=1.D0
	ICENT=2
	AUCINT = 24.D0
	ENDIF
 6315 IF(INOPT1 .EQ. 0) THEN
      IF(NRANFIX .GT. 0) THEN
       IFIL = 0
       GO TO 9700
      ENDIF
 6320   WRITE(*,6311)
 6311   FORMAT(//' ENTER 0 TO ENTER INSTRUCTIONS FROM THE KEYBOARD;'/
     1' ENTER 1 TO ENTER INSTRUCTIONS FROM A FILE CREATED BY A '/
     2'         PREVIOUS RUNNING OF THIS PROGRAM (UP THROUGH VERSION'/
     3'         NPAG111.FOR); THIS FILE MUST HAVE A DATE ON LINE 1'/
     4'         WHICH IS BETWEEN AUG_96 AND JAN_13: ')
	READ(*,*,ERR=6320) IFIL
	IF(IFIL .NE. 0 .AND. IFIL .NE. 1) GO TO 6320
	IF(IFIL .EQ. 1) THEN
	WRITE(*,*)
	WRITE(*,*)' ENTER THE NAME OF THE INSTRUCTION FILE; '
	WRITE(*,*)' ENTER -99 TO SEE ALL OR A PART OF YOUR DIRECTORY: '
      READ(*,2) FROMLAST
	IF(FROMLAST(1:3) .EQ. '-99') THEN
           CALL SEEDIR(PATH,NOB,FROMLAST,OSName,ListDir)
        ENDIF
     	TMPFILE = ' '
	TMPFILE = FROMLAST
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(25,FILE=PATHFILE,ERR=6330,STATUS='OLD')
	GO TO 6335
 6330   WRITE(*,5316) PATHFILE
	GO TO 6320
 6335   CONTINUE
	 READ(25,7123) CODE
 7123    FORMAT(A14)
	ICODE = 0
      IF(CODE .EQ. 'REM_BAK JAN_13') ICODE = 28
      IF(CODE .EQ. 'REM_BAK JUL_11') ICODE = 27
      IF(CODE .EQ. 'REM_BAK APR_11') ICODE = 26
      IF(CODE .EQ. 'REM_BAK MAR_11') ICODE = 25
	IF(CODE .EQ. 'REM_BAK MAY_09') ICODE = 24
	IF(CODE .EQ. 'REM_BAK FEB_08') ICODE = 23
	IF(CODE .EQ. 'REM_BAK AUG_02') ICODE = 22
	IF(CODE .EQ. 'REM_BAK JUN_98') ICODE = 18
	IF(CODE .EQ. 'REM_BAK APR_98') ICODE = 17
	IF(CODE .EQ. 'REM_BAK JUL_97') ICODE = 10
	IF(CODE .EQ. 'REM_BAK JUN_97') ICODE = 8
	IF(CODE .EQ. 'REM_BAK JAN_97') ICODE = 6
	IF(CODE .EQ. 'VER_BAK AUG_96') ICODE = 5
	IF(ICODE .EQ. 0) THEN
	 WRITE(*,7321)
 7321    FORMAT(//' YOUR INSTRUCTION FILE IS NOT FROM THE ALLOWABLE '/
     1' SET OF INSTRUCTION FILES.'//
     2' EITHER ENTER INSTRUCTIONS FROM THE KEYBOARD, OR USE A FILE '/
     3' WITH   REM_BAK XXX_XX   IN COLUMNS 1 THROUGH 14 ON LINE 1,'/
     4' WHERE  XXX_XX  IS AUG_96 UP TO JAN_13.'//)
	  GO TO 6320
	ENDIF
        IF(ICODE .GE. 25) THEN
         READ(25,*)
         READ(25,*) IFORMTT
        IF(ICODE .GE. 26) THEN
         IF(IFORMTT .EQ. 1) IFORMT = 3
         IF(IFORMTT .EQ. 2) IFORMT = 1
        ENDIF
        IF(ICODE .EQ. 25) IFORMT = IFORMTT
         IF(IFORMT .EQ. 2) THEN
          WRITE(*,1231)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,1231)
        CLOSE(42)
          CALL PAUSE
          STOP
         ENDIF
         IF(IFORMT .EQ. 1) THEN
          IDIRCT = 0
          READ(25,*)
          READ(25,2222) PREFIX
          READ(25,*)
          READ(25,222) EXT
         ENDIF
         IF(IFORMT .EQ. 3) THEN
          READ(25,*)
          READ(25,2) BLOCKPAT
          TMPFILE = ' '
          TMPFILE = BLOCKPAT
          CALL FULLNAME(PATH,TMPFILE,PATHFILE)
          OPEN(67,FILE=PATHFILE,STATUS='OLD')
          ICODEPAT = 0
          READ(67,7126) CODEPAT
          IF(CODEPAT .EQ. '"POPDATA APR_11') ICODEPAT = 1
          IF(CODEPAT(1:14) .EQ. 'POPDATA APR_11') ICODEPAT = 1
          IF(CODEPAT .EQ. '"POPDATA DEC_11') ICODEPAT = 1
          IF(CODEPAT(1:14) .EQ. 'POPDATA DEC_11') ICODEPAT = 1
          IF(ICODEPAT .EQ. 0) THEN
           WRITE(*,3131)
           WRITE(*,*)' THE PROGRAM STOPS.'
           CLOSE(67)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3131)
         WRITE(42,*)' THE PROGRAM STOPS.'
        CLOSE(42)
           CALL PAUSE
           STOP
          ENDIF
          CLOSE(67)
         ENDIF
         READ(25,*)
         READ(25,*) NSUBTOT
         READ(25,*)
         READ(25,*) NSUB
         READ(25,*)
         CALL GETIPATF(25,NSUBTOT,NSUB,MAXSUB,IPATVEC,IERRR)
         IF(IERRR .EQ. -1) GO TO 6310
         READ(25,*)
         READ(25,*)
         READ(25,*)
         IF(NOFIX .GT. 0) READ(25,*) (VALFIX(I),I=1,NOFIX)
         READ(25,*)
         READ(25,*)
         READ(25,*)
         DO I=1,NVAR
          READ(25,*) (AB(I,J),J=1,2)
         END DO
         READ(25,*)
         READ(25,*) NUMEQT
         READ(25,*)
         DO IEQ=1,NUMEQT
          READ(25,*) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
         END DO
         READ(25,*)
         READ(25,*) IERRMOD
         READ(25,*)
         READ(25,*) GAMLAM0
         READ(25,*)
         READ(25,*) (IASS(I),I=1,NUMEQT)
         DO IEQ=1,NUMEQT
          ASSMULT(IEQ) = 1.D0
          IALLPAT(IEQ) = 0
         END DO
        IF(ICODE .LT. 27) THEN
         READ(25,*)
         READ(25,*) AFSCALAR
         IAF = 0
        ENDIF
        IF(ICODE .GE. 27) THEN
         READ(25,*)
         READ(25,*) NDRUG
         READ(25,*)
         READ(25,*) (AF(I),I=1,NDRUG)
         IAF = 1
        ENDIF
         READ(25,*)
         READ(25,*) INDPTS
         READ(25,*)
         READ(25,*) MAXCYC
         IF(MAXCYC .GT. 9997) MAXCYC = 9997
         READ(25,*)
         READ(25,*) JSTOP
         READ(25,*)
         IF(JSTOP .NE. 1 .AND. ICODE .GE. 28) THEN
          READ(25,*) TOLC
         ENDIF
         IF(JSTOP .NE. 1 .AND. ICODE .EQ. 27) THEN
          READ(25,*) TOL
          TOLC = .01D0
         ENDIF
         IF(JSTOP .EQ. 1 .OR. JSTOP .EQ. 2) THEN
          JSTOP = 3
          TOLC = .01D0
         ENDIF
         NINT=100
         READ(25,*)
         READ(25,*) IDELTA
         READ(25,*)
         READ(25,*) XMIC
         READ(25,*)
         READ(25,*) ICENT
         READ(25,*)
	   READ(25,*) AUCINT
        ENDIF
        IF(ICODE .LT. 25) THEN
         READ(25,*) IFORMT
	IF(IFORMT .EQ. 2) THEN
	 WRITE(*,1231)
 1231    FORMAT(/' YOUR INSTRUCTION FILE INDICATES THAT YOUR PATIENT'/
     1' DATA FILES ARE IN USC*PACK FORMAT, WHICH IS NO LONGER ALLOWED'/
     2' BY THIS PROGRAM. '//
     3' PLEASE RERUN THE PROGRAM AND ENTER PATIENT DATA INFO EITHER'/
     4' IN THE NEW-STYLE WORKING COPY FORMAT FOR MULTIPLE DRUGS'/
     5' (IFORMT = 2), OR IN THE MATRIX STYLE BLOCK FORMAT'/
     6' (IFORMT = 1).'//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,1231)
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	IF(IFORMT .EQ. 1) THEN
	 IDIRCT = 0
	 READ(25,2222) PREFIX
	 READ(25,222) EXT
	ENDIF
	IF(IFORMT .EQ. 3) THEN
        READ(25,2) BLOCKPAT
     	TMPFILE = ' '
	TMPFILE = BLOCKPAT
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(67,FILE=PATHFILE,STATUS='OLD')
	 ICODEPAT = 0
 7126    FORMAT(A15)
	 READ(67,7126) CODEPAT
	 IF(CODEPAT .EQ. '"POPDATA APR_11') ICODEPAT = 1
	 IF(CODEPAT(1:14) .EQ. 'POPDATA APR_11') ICODEPAT = 1
       IF(CODEPAT .EQ. '"POPDATA DEC_11') ICODEPAT = 1
       IF(CODEPAT(1:14) .EQ. 'POPDATA DEC_11') ICODEPAT = 1
	IF(ICODEPAT .EQ. 0) THEN
	 WRITE(*,3131)
	 WRITE(*,*)' THE PROGRAM STOPS.'
	 CLOSE(67)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3131)
         WRITE(42,*)' THE PROGRAM STOPS.'
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	CLOSE(67)
	ENDIF
	IF(ICODE .LE. 22) THEN
	 READ(25,*) NSUB
	 NSUBTOT = NSUB
	 DO I=1,NSUB
	  IPATVEC(I) = I
	 END DO
	ENDIF
	IF(ICODE .GE. 23) THEN
	 READ(25,*) NSUBTOT
	 READ(25,*) NSUB
	 CALL GETIPATF(25,NSUBTOT,NSUB,MAXSUB,IPATVEC,IERRR)
	 IF(IERRR .EQ. -1) GO TO 6310
	ENDIF
	IF(NOFIX .GT. 0) READ(25,*) (VALFIX(I),I=1,NOFIX)
	DO I=1,NVAR
	 READ(25,*) (AB(I,J),J=1,2)
	END DO
	IF(ICODE .LT. 18) NUMEQT=1
	IF(ICODE .GE. 18) READ(25,*) NUMEQT
	DO IEQ=1,NUMEQT
	 READ(25,*) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	END DO
	IERRMOD = 1
	IF(ICODE .GE. 22) THEN
	 READ(25,*) IERRMOD
	 READ(25,*) GAMLAM0
	ENDIF
	IF(ICODE .GE. 6) READ(25,*) (IASS(I),I=1,NUMEQT)
	IF(ICODE .EQ. 5) IASS(1) = 1
	DO IEQ=1,NUMEQT
	 ASSMULT(IEQ) = 1.D0
	 IALLPAT(IEQ) = 0
	END DO
	READ(25,*) AFSCALAR
      IAF = 0
	READ(25,*) INDPTS
	READ(25,*) MAXCYC
	IF(MAXCYC .GT. 9997) MAXCYC = 9997
	READ(25,*) JSTOP
	IF(JSTOP .NE. 1) THEN
       READ(25,*) TOL
       TOLC = .01D0
      ENDIF
	 IF(JSTOP .EQ. 1 .OR. JSTOP .EQ. 2) THEN
	  JSTOP = 3
        TOLC = .01D0
	 ENDIF
	READ(25,*) IJUNKK
	READ(25,*) IJUNKK
	READ(25,*) IJUNKK
	NINT=100
	IF(ICODE .GE. 8) READ(25,*) IDELTA
	IF(ICODE .LE. 6) IDELTA = 12
	IF(ICODE .EQ. 8) READ(25,*) XJUNK
	IF(ICODE .GE. 8) READ(25,*) XMIC
	IF(ICODE .LE. 6) XMIC = 1.D0
	IF(ICODE .GE. 8) READ(25,*) ICENT
	IF(ICODE .LE. 6) ICENT = 2
	IF(ICODE .GE. 24) READ(25,*) AUCINT
	IF(ICODE .LE. 23) AUCINT = 24
        ENDIF
	CLOSE(25)
	ENDIF
 9700 CONTINUE
	IF(IFIL .EQ. 0) THEN
 4005	WRITE(*,141)
  141   FORMAT(/' ENTER 1 IF THE PATIENT DATA INFO WILL BE SUPPLIED'/
     1'         IN A MATRIX BLOCK FORMAT; '/
     2' ENTER 2 IF THE PATIENT DATA INFO WILL BE INPUT USING A'/
     3'         WORKING COPY FORMAT: ')
	READ(*,*,ERR=4005) IFORMTT
	IF(IFORMTT .NE. 1 .AND. IFORMTT .NE. 2) GO TO 4005
         IF(IFORMTT .EQ. 1) IFORMT = 3
         IF(IFORMTT .EQ. 2) IFORMT = 1
	IF(IFORMT .EQ. 3) THEN
         WRITE(*,3111)
 3111    FORMAT(/' ENTER THE NAME OF THE FILE WHICH CONTAINS ALL THE'/
     1' PATIENT DATA INFO IN BLOCK FORMAT (ENTER -99 TO SEE ALL OR A '/
     2' PART OF YOUR DIRECTORY: ')
        READ(*,2) BLOCKPAT
	IF(BLOCKPAT(1:3) .EQ. '-99') THEN
           CALL SEEDIR(PATH,NOB,BLOCKPAT,OSName,ListDir)
        ENDIF
     	TMPFILE = ' '
	TMPFILE = BLOCKPAT
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(67,FILE=PATHFILE,ERR=3120,STATUS='OLD')
	GO TO 3130
 3120   WRITE(*,5316) PATHFILE
	GO TO 4005
 3130   CONTINUE
	 ICODEPAT = 0
	 READ(67,7126) CODEPAT
	 IF(CODEPAT .EQ. '"POPDATA APR_11') ICODEPAT = 1
	 IF(CODEPAT(1:14) .EQ. 'POPDATA APR_11') ICODEPAT = 1
       IF(CODEPAT .EQ. '"POPDATA DEC_11') ICODEPAT = 1
       IF(CODEPAT(1:14) .EQ. 'POPDATA DEC_11') ICODEPAT = 1
	IF(ICODEPAT .EQ. 0) THEN
	 WRITE(*,3131)
 3131    FORMAT(//' YOUR PATIENT DATA BLOCK FORMAT FILE IS NOT FROM '/
     1' THE ALLOWABLE SET OF SUCH FILES.'//
     2' A PATIENT DATA BLOCK FORMAT FILE MUST HAVE "POPDATA XXX_XX IN'/
     3' COLUMNS 1 THROUGH 15 ON LINE 1, WHERE  XXX_XX  IS APR_11 OR A '/
     4' MORE RECENT DATE.'//)
	  CLOSE(67)
	  GO TO 4005
	ENDIF
	CLOSE(67)
	ENDIF
	IF(IFORMT .EQ. 1) THEN
 7505	  WRITE(*,4041)
 4041     FORMAT(/' ENTER THE 5-CHAR PREFIX FOR PATIENT FILENAMES: ')
	  READ(*,2222) PREFIX
	  WRITE(*,4043)
 4043     FORMAT(/' IF THERE IS A 3-CHAR EXTENSION FOR THE PATIENT '/
     1' FILENAMES, ENTER IT NOW; OTHERWISE, HIT CARRIAGE RETURN: ')
	  READ(*,222) EXT
	  IF(PREFIX(1:1) .EQ. ' ' .OR. PREFIX(2:2) .EQ. ' ' .OR.
     1       PREFIX(3:3) .EQ. ' ' .OR. PREFIX(4:4) .EQ. ' ' .OR.
     2       PREFIX(5:5) .EQ. ' ') THEN
     	PATFIL = PREFIX//'001.'//EXT
 7500   WRITE(*,7501) PATFIL(1:12)
 7501   FORMAT(/' ARE YOUR SUBJECT FILES REALLY CALLED ',A12,' ... ?'//
     1' ENTER 1 TO REENTER YOUR SUBJECT FILENAMES; '/
     2' ENTER 0 IF THESE NAMES ARE ACCURATE: ')
	READ(*,*,ERR=7500) IOK
	IF(IOK .NE. 0 .AND. IOK .NE. 1) GO TO 7500
	IF(IOK .EQ. 1) GO TO 7505
	   ENDIF
	ENDIF
      CALL WRITEINFILE(1,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
	CALL GETIPAT(NSUBTOT,NSUB,ISUBALL,MAXSUB,IPATVEC)
      CALL WRITEINFILE(2,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
        CALL GETNUMEQ(PATH,NOB,1,IFORMT,PREFIX,EXT,BLOCKPAT,NUMEQT,
     1   NDRUG,MAXSUB,MAXNUMEQ)
      IF(NUMEQT .GT. MAXNUMEQ) THEN
       WRITE(*,8317) NUMEQT,MAXNUMEQ
 8317  FORMAT(/' YOUR PATIENT FILES HAVE ',I3,' OUTPUT EQUATIONS. '/
     1' THIS IS MORE THAN THE MAXIMUM ALLOWED NO. OF ',I2,'.'//
     2' PLEASE CORRECT YOUR PATIENT FILES AND THEN RERUN THE PROGRAM.'/)
       OPEN(42,FILE=ERRFIL)
        WRITE(42,8317) NUMEQT,MAXNUMEQ
       CLOSE(42)
       CALL PAUSE
       STOP
      ENDIF
        WRITE(*,1117)
 1117   FORMAT(/' ENTER THE BOUNDS OF THE RANGE FOR EACH PARAMETER.'//
     1' CAUTION: IF ANY OF YOUR PARAMETERS CANNOT = 0, BE SURE TO MAKE'/
     2'		 ITS LOWER BOUNDARY A POSITIVE NUMBER, RATHER THAN 0.'/
     3' 	 (ONE SUCH EXAMPLE IS FOR VOL WHICH SHOWS UP IN THE'/
     4'		 DENOMINATOR OF THE OUTPUT EQUATION IN THE MODEL'/
     5'		 FILE.)'//)
	DO 6060 I=1,NVAR
	WRITE(*,34) PAR(I)
   34   FORMAT(/' ',A11,' : ')
 7110   READ(*,*,ERR=7115) (AB(I,J),J=1,2)
	GO TO 6060
 7115   WRITE(*,7116)
 7116   FORMAT(/' SEE ABOVE; PLEASE ENTER TWO REAL NUMBERS: ')
	GO TO 7110
 6060   CONTINUE
      IF(NOFIX .GT. 0) THEN
     	 WRITE(*,4836)
 4836  FORMAT(/' ENTER THE VALUE FOR EACH FIXED PARAMETER: ')
       DO 4855 I=1,NOFIX
       WRITE(*,34) PARFIX(I)
 4840  READ(*,*,ERR=4845) VALFIX(I)
       GO TO 4855
 4845  WRITE(*,4841)
 4841  FORMAT(/' SEE ABOVE; ENTER A POSITIVE VALUE: ')
       GO TO 4840
 4855  CONTINUE
      ENDIF
      IF(NRANFIX .GT. 0) THEN
     	  WRITE(*,5836)
 5836   FORMAT(/' ENTER THE INITIAL EST. FOR EACH RANFIX PARAMETER: ')
        DO 5855 I=1,NRANFIX
        WRITE(*,34) PARRANFIX(I)
 5840   READ(*,*,ERR=5845) RANFIXEST(I)
        GO TO 5855
 5845   WRITE(*,4841)
        GO TO 5840
 5855   CONTINUE
      ENDIF
      CALL WRITEINFILE(3,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
	CALL SYSTEM(ClearScreen)
 1110   WRITE(*,118)
  118 FORMAT(//' SELECT HOW YOU WOULD LIKE TO MODEL THE ASSAY ERROR'/
     1' FUNCTION, S.D. ASSUME SD1 = C0+C1*Y+C2*Y**2+C3*Y**3; THEN ...'//
     2' ENTER 1 IF S.D. = SD1;'/
     3' ENTER 2 IF S.D. = GAMMA*SD1, WITH GAMMA TO BE ESTIMATED;'/
     4' ENTER 3 IF S.D. = SQRT(SD1**2 + LAMBDA**2), WITH LAMBDA TO BE ES
     5TIMATED;'/
     6' ENTER 4 IF S.D. = GAMMA, WITH GAMMA TO BE ESTIMATED: ')
	READ(*,*,ERR=1110) IERRMOD
	IF(IERRMOD .LT. 1 .OR. IERRMOD .GT. 4) GO TO 1110
	IF(IERRMOD .GE. 2) THEN
	 ESTNAM = ' GAMMA'
	 IF(IERRMOD .EQ. 3) ESTNAM = 'LAMBDA'
  220	 WRITE(*,219) ESTNAM
  219    FORMAT(/' ENTER 1 TO START WITH AN INITIAL ESTIMATE OF 1 FOR ',
     1A6,';'/
     2' ENTER 0 TO ENTER A DIFFERENT INITIAL ESTIMATE FOR ',A6,': ')
	 READ(*,*,ERR=220) IGG
	 IF(IGG .NE. 1 .AND. IGG .NE. 0) GO TO 220
	 IF(IGG .EQ. 1) GAMLAM0 = 1.D0
	 IF(IGG .EQ. 0) THEN
  225     WRITE(*,223) ESTNAM
  223     FORMAT(/' ENTER THE INITIAL ESTIMATE FOR ',A6,' (A POSITIVE NO
     1.): ')
	  READ(*,*,ERR=220) GAMLAM0
	  IF(GAMLAM0 .LE. 0.D0) GO TO 225
	 ENDIF
	ENDIF
	IF(IERRMOD .EQ. 4) THEN
	 DO KK = 1,NUMEQT
	  IASS(KK) = 1
	  C0P(KK) = 1.D0
	  C1P(KK) = 1.D0
	  C2P(KK) = 1.D0
	  C3P(KK) = 1.D0
	 END DO
	 WRITE(*,218)
  218    FORMAT(/' NOTE THAT THIS RUN WILL NOT USE THE ASSAY'/
     1' COEFFICIENTS IN YOUR PATIENT DATA FILES, BUT ANY PATIENT DATA'/
     2' FILES WITHOUT ASSAY COEFFICIENTS WILL HAVE A "1" PLACED IN '/
     3' EACH ASSAY COEFFICIENT LOCATION (AS A PLACEHOLDER).')
	 GO TO 4150
	ENDIF
      CALL SYSTEM(ClearScreen)
      WRITE(*,119)
  119 FORMAT(//' NOW SELECT HOW TO ESTABLISH THE COEFFICIENTS FOR'/
     1' SD1 = C0 + C1*Y + C2*Y**2 + C3*Y**3.'//
     3' FOR EACH OF THE OUTPUT EQUATION(S), SELECT ONE OF THE FOLLOWING'
     4/
     5' OPTIONS FOR THE ASSAY COEFFICIENTS [C0,C1,C2,C3]: '//
     4' ENTER 1 FOR THE DEFAULT OPTION ...'/
     5'         FOR EACH PATIENT, IF THE DATA FILE ALREADY INCLUDES ASSA
     6Y'/
     7'         COEFFICIENTS, THOSE COEFFICIENTS WILL BE USED. OTHERWISE
     8 THE'/
     9'		COEFFICIENTS YOU ENTER BELOW WILL BE USED; '//
     8' ENTER 2 IF YOU WOULD LIKE THE ASSAY COEFFICIENTS YOU ENTER BELOW
     1 TO BE'/
     2'         USED FOR ALL PATIENTS, EVEN FOR THOSE WHOSE DATA FILES A
     3LREADY'/
     4'		INCLUDE COEFFICIENTS;'//
     2' ENTER 3 IF YOU WOULD LIKE THE ASSAY COEFFICIENTS ALREADY IN SOME
     3 OR ALL'/
     4'         OF THE PATIENT DATA FILES (OR THE GENERAL VALUES YOU ENT
     5ER BELOW)'/
     6'         TO BE MULTIPLIED BY A GIVEN CONSTANT;'//
     7' ENTER 4 IF YOU WOULD LIKE TO BE PROMPTED SO YOU MAY CHOOSE THE A
     8SSAY'/
     9'         COEFFICIENTS ON A PATIENT - BY - PATIENT BASIS. YOU MAY
     1CHOOSE'/
     2'         GENERAL VALUES (WHICH YOU WILL ENTER BELOW), COEFFICIENT
     3S ALREADY'/
     4'         IN THE PATIENT DATA FILE, IF ANY, OR ANY OTHER SET OF CO
     5EFFICIENTS. ')
	DO 2200 IEQ = 1,NUMEQT
 1120   WRITE(*,221) IEQ
  221   FORMAT(/' FOR OUTPUT EQUATION ',I1,':'//
     4' ENTER 1 FOR THE DEFAULT OPTION;'//
     8' ENTER 2 IF YOU WOULD LIKE THE ASSAY COEFFICIENTS YOU ENTER '/
     9' 	BELOW TO BE USED FOR ALL PATIENTS;'//
     1' ENTER 3 IF YOU WANT THE COEFFICIENTS IN SOME OR ALL OF YOUR '/
     2'		FILES MULITPLIED BY A SPECIFIED CONSTANT;'//
     7' ENTER 4 TO BE PROMPTED: ')
	READ(*,*,ERR=1120) IAS
	IF(IAS .LT. 1 .OR. IAS .GT. 4) GO TO 1120
	IASS(IEQ) = IAS
	WRITE(*,1119) IEQ
 1119   FORMAT(/' ENTER THE GENERAL VALUES FOR [C0,C1,C2,C3] FOR '/
     1' OUTPUT EQUATION ',I1,'. THESE ')
	IF(IAS .EQ. 1) WRITE(*,1121)
	IF(IAS .EQ. 2) WRITE(*,1122)
	IF(IAS .EQ. 4 .OR. IAS .EQ. 3) WRITE(*,1123)
 1121   FORMAT(' WILL BE USED FOR ALL PATIENTS WHOSE DATA FILES DO '/
     1' NOT ALREADY INCLUDE ASSAY COEFFICIENTS: ')
 1122   FORMAT(' WILL BE USED FOR ALL PATIENTS: ')
 1123   FORMAT(' WILL BE USED FOR THOSE PATIENTS YOU SELECT BELOW: ')
 4140   READ(*,*,ERR=4145) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
   	GO TO 2120
 4145   WRITE(*,4146)
 4146   FORMAT(/' SEE ABOVE; PLEASE ENTER FOUR REAL NUMBERS: ')
	GO TO 4140
 2120	IF(IAS .EQ. 3) THEN
	 IALLPAT(IEQ) = 0
 4260	 WRITE(*,4148)
 4148    FORMAT(/' ENTER THE ASSAY COEFFICIENT MULTIPLIER TO BE USED'/
     1' FOR THOSE PATIENTS YOU SELECT BELOW: ')
	 READ(*,*,ERR = 4260) ASSMULT(IEQ)
	ENDIF
 2200   CONTINUE
     	WRITE(*,2119)
 2119   FORMAT(//' NOTE: DURING THIS RUN, EACH SUBJECT WILL HAVE '/
     1'	      HIS/HER ASSAY COEFFICIENTS WRITTEN TO THE END OF HIS/HER'/
     2'       WORKING COPY PATIENT FILE. IF COEFFICIENTS ARE ALREADY '/
     3'	      THERE FROM A PREVIOUS RUN, THEY WILL BE OVERWRITTEN.'//)
      CALL WRITEINFILE(4,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
4150   WRITE(*,129)
  129   FORMAT(//' ENTER THE ACTIVE (SALT) FRACTION OF EACH DRUG. AS '/
     1' AN EXAMPLE, THE A.F. OF THEOPHYLLINE IS 1.0, WHILE THAT OF'/
     2' AMINOPHYLLINE IS TYPICALLY BETWEEN .79 AND .85, DEPENDING ON'/
     3' THE PREPARATION. '//
     4' EACH AF MUST BE A POSITIVE NUMBER LESS THAN OR EQUAL TO 1.0.'/)
        DO I = 1,NDRUG
         WRITE(*,1129) I
 1129    FORMAT(' AF FOR DRUG ',I1,': ')
         READ(*,*,ERR=4150) AF(I)
         IF(AF(I) .LE. 0.0 .OR. AF(I) .GT. 1.0) GO TO 4150
        END DO
        IAF = 1
	IF(NVAR .EQ. 1 .OR. NVAR .EQ. 2) INDSUG=1
	IF(NVAR .EQ. 3) INDSUG=3
	IF(NVAR .EQ. 4) INDSUG=4
	IF(NVAR .EQ. 5) INDSUG=6
	IF(NVAR .GE. 6) INDSUG=7
	WRITE(*,6063) NVAR,INDSUG
 6063   FORMAT(//' *****************      NOTE      *****************'//
     1' YOU HAVE SELECTED ',I2,' PARAMETERS FOR THIS RUN.'/
     1' IT IS LIKELY THAT YOU WILL NEED AT LEAST AN INDEX OF GRID'/
     2' POINTS EQUAL TO  ',I1,'  TO ANALYZE YOUR DATA ADEQUATELY. A '/
     3' SMALLER INDEX MAY LEAD TO SIGNIFICANTLY POORER ESTIMATIONS.'/
     4' THE DISADVANTAGE TO MORE POINTS, OF COURSE, IS THAT THE '/
     5' PROGRAM TAKES PROPORTIONATELY LONGER TO RUN, BUT ONLY IN THE'/
     6' EARLY CYCLES UNTIL IT HAS DISCARDED UNNEEDED POINTS.'//
     4' *****************      NOTE      *****************'//)
 6670   WRITE(*,6062)
 6062   FORMAT(/' ENTER THE INDEX FOR THE NO. OF GRID POINTS DESIRED.'/
     1' ENTER 1,2,3,4,5,6 OR 7, RESPECTIVELY, FOR, 2129, 5003, 10007,'/
     2' 20011, 40009, 80021, OR MULTIPLES OF 80021 POINTS: ')
 6065   READ(*,*,ERR=6670) INDPTS
	IF(INDPTS .LT. 1 .OR. INDPTS .GT. 7) GO TO 6670
	IF(INDPTS .EQ. 7) THEN
 6075	 WRITE(*,6064)
 6064    FORMAT(/' ENTER 2, 3, ...  FOR THE NO. OF MULTIPLES OF '/
     1' 80021 GRID POINTS YOU WOULD LIKE: ')
	 READ(*,*,ERR=6075) MULT
	 IF(MULT .LT. 1) GO TO 6075
	 INDPTS = 100+MULT
	ENDIF
 4160 	WRITE(*,123)
  123   FORMAT(/' ENTER THE MAX. NO. OF CYCLES DESIRED (LESS THAN OR'/
     1' EQUAL TO 9997)'//
     2' NOTE THAT IF YOU ENTER 0, IT MEANS THAT THE "engine" WILL DO'/
     3' NO CYCLE CALCULATIONS, BUT INSTEAD MOVE DIRECTLY TO THE '/
     4' END-OF-ANALYSIS SECTION TO CALCULATE VALUES NEEDED TO GIVE '/
     5' THE BAYESIAN POSTERIOR RESULTS FOR WHATEVER PATIENT DATA SET'/
     6' YOU CHOOSE, BASED ON THE PRIOR DENSITY YOU SELECT BELOW.'/
     7' THESE RESULTS CAN BE VIEWED BY RERUNNING THIS PROGRAM AND'/
     8' INPUTTING THE OUTPUT FILE FROM THE "engine". THIS IS'/
     9' SOMETIMES CALLED PROSPECTIVE ANALYSIS.'//
     1' ENTER THE MAX. NO. OF CYCLES NOW: ')
        READ(*,*,ERR=4160) MAXCYC
	IF(MAXCYC .LT. 0 .OR. MAXCYC .GT. 9997) GO TO 4160
	TOLC = .01D0
	IF(MAXCYC .GT. 0) THEN
         JSTOP = 3
 1250    WRITE(*,1247)
 1247    FORMAT(/' NOTE THAT THE ANALYSIS WILL STOP BEFORE THE MAX.'/
     1' NO. OF CYCLES HAVE BEEN RUN IF CONVERGENCE IS ACHIEVED, AND'/
     2' CONVERGENCE IS ACHIEVED BASED ON LOGIC AND PRE-SET TOLERANCE'/
     3' PARAMETERS WHICH ARE APPROPRIATE FOR THE "INTERIOR POINT'/
     4' ALGORITHM" USED BY THIS PROGRAM. THIS ALGORITM WAS DEVELOPED'/
     5' BY JIM BURKE AT THE UNIVERSITY OF WASHINGTON, AND ADAPTED FOR'/
     6' THIS PROGRAM BY BOB LEARY.'//
     1' BUT YOU MAY SET THE TOLERANCE PARAMETER, TOLC. THE NPAG '/
     2' ANALYSIS WILL BE CONVERGE IF THE LOG-LIK BETWEEN 2 CONSECUTIVE'/
     3' "MAJOR CYCLES" IS LESS THAN OR EQUAL TO TOLC.'//
     4' ENTER A POSITIVE VALUE FOR TOLC NOW; .01 IS A TYPICAL VALUE: ')
         READ(*,*,ERR= 1250) TOLC
         IF(TOLC .LE. 0.D0) GO TO 1250
	ENDIF
      CALL WRITEINFILE(5,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
	NINT=100
      ICENT = 2
	WRITE(*,2011) NSUB
 2011   FORMAT(/' ',I4,' TABLES OF PREDICTED CONCENTRATIONS, ONE FOR'/
     1' EACH SUBJECT, WILL BE GENERATED TO BE USED AS INPUTS FOR AN'/
     2' "EFFECTS" MODEL.'//
     2' EACH TABLE WILL GIVE THE PREDICTED CONCENTRATIONS OF THE DRUG'/
     3' FOR A GIVEN SUBJECT, ASSUMING PARAMETER VALUES EQUAL TO THE  '/
     4' MEANS OF THE BAYESIAN POSTERIOR DISTRIBUTION OF THAT SUBJECT.'
     5/
     6' THIS WILL BE REPEATED FOR BOTH THE MEDIANS AND THE MODES OF'/
     7' THE BAYESIAN POSTERIOR DISTRIBUTION FOR EACH SUBJECT.'//
     8' THE PREDICTED CONCENTRATIONS WILL BE AT THE TIMES YOU SELECT'/
     9' BELOW. IN ADDITION, AUC (AREA UNDER THE CURVE) AND AUC/MIC'/
     1' WILL BE CALCULATED FOR EACH USER SELECTED INTERVAL, AND FOR'/
     2' THE TOTAL TIME PERIOD.'//)
 2015   WRITE(*,2013)
 2013   FORMAT(/' ENTER THE TIME INTERVAL (IN MINUTES) BETWEEN'/
     1' PREDICTED CONCENTRATIONS. THIS VALUE MUST BE 2, 4, 6, OR 12:  ')
	READ(*,*,ERR=2015) IDELTA
	IF(IDELTA .NE. 2 .AND. IDELTA .NE. 4 .AND. IDELTA .NE. 6
     1  .AND. IDELTA .NE. 12) GO TO 2015
        WRITE(*,2014) NSUB
 2014   FORMAT(/' THE ENDING TIME (IN HOURS), FOR THE PREDICTED'/
     1' CONCENTRATIONS WILL BE 24 HOURS AFTER THE LAST OBSERVATION'/
     2' TIME AMONG ALL ',I4,' SUBJECTS.')
 2025   WRITE(*,2016)
 2016   FORMAT(/' THE DEFAULT FOR THE MIC (MINIMUM INHIBITORY '/
     1' CONCENTRATION) IS 1.0; '/
     2' ENTER 1 FOR THIS DEFAULT VALUE;'/
     3' ENTER 0 TO ENTER A DIFFERENT VALUE: ')
	READ(*,*,ERR=2025) IXMIC
	IF(IXMIC .NE. 1 .AND. IXMIC .NE. 0) GO TO 2025
	IF(IXMIC .EQ. 1) XMIC = 1.D0
	IF(IXMIC .EQ. 0) THEN
 2030	 WRITE(*,2023)
 2023    FORMAT(/' ENTER THE MIC (IT MUST BE A POSITIVE NUMBER):  ')
	 READ(*,*,ERR=2030) XMIC
	 IF(XMIC .LE. 0.D0) GO TO 2030
	ENDIF
 3025   WRITE(*,3016)
 3016   FORMAT(/' THE AUC (AREA UNDER THE CURVE) AND AUC/MIC WILL BE'/
     9' CALCULATED OVER EACH AUCINT-HOUR INTERVAL, AND FOR THE TOTAL '/
     1' TIME PERIOD.'//
     2' ENTER 1 FOR THE DEFAULT VALUE FOR AUCINT OF 24 HOURS;'/
     3' ENTER 0 TO ENTER A DIFFERENT VALUE FOR AUCINT: ')
	READ(*,*,ERR=3025) IAUCINT
	IF(IAUCINT .NE. 1 .AND. IAUCINT .NE. 0) GO TO 3025
	IF(IAUCINT .EQ. 1) AUCINT = 24.D0
	IF(IAUCINT .EQ. 0) THEN
 3030	 WRITE(*,3023)
 3023    FORMAT(/' ENTER THE DESIRED VALUE FOR AUCINT (IN HOURS):  ')
	 READ(*,*,ERR=3030) AUCINT
	 IF(AUCINT .LE. 0.D0) GO TO 3030
	ENDIF
      CALL WRITEINFILE(6,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
	ENDIF
	ENDIF
        IF(IAF .EQ. 0) THEN
         CALL GETNUMEQ(PATH,NOB,1,IFORMT,PREFIX,EXT,BLOCKPAT,NUMEQT,
     1    NDRUG,MAXSUB,MAXNUMEQ)
      IF(NUMEQT .GT. MAXNUMEQ) THEN
       WRITE(*,8317) NUMEQT,MAXNUMEQ
       OPEN(42,FILE=ERRFIL)
        WRITE(42,8317) NUMEQT,MAXNUMEQ
       CLOSE(42)
       CALL PAUSE
       STOP
      ENDIF
          DO I = 1,NDRUG
           AF(I) = AFSCALAR
          END DO
         ENDIF
        WRITE(*,4311) NVAR
 4311   FORMAT(///' THE APRIORI DENSITY IS DEFINED ON A ',I1,'  ' /
     1' DIMENSIONAL GRID BOUNDED BY THE LIMITS ENTERED ABOVE.'//
     2' ENTER 1 IF A UNIFORM PRIOR IS DESIRED;'/
     3' ENTER 0 IF A SPECIFIED PRIOR IS TO BE READ IN FROM A '/
     4'         USER-SUPPLIED FILE OF DENSITY VALUES '/
     5'         FROM THE OUTPUT OF A PREVIOUS RUN.'//
     6' (CAUTION: BEFORE USING A PREVIOUS JOINT DENSITY, THE USER'/
     7' SHOULD VERIFY THAT IT WAS DEFINED FOR THE SAME NO. OF GRID'/
     8' POINTS, AND FOR THE SAME PARAMETERS AND RANGES AS ENTERED'/
     9' ABOVE FOR THIS RUN):  ')
 4315   READ(*,*,ERR=4320) INPRI
        GO TO 4325
 4320   WRITE(*,4035)
        GO TO 4315
 4325   IF (INPRI .NE. 0 .AND. INPRI .NE. 1) THEN
         WRITE(*,138)
         GO TO 4315
        ENDIF
	IF(INPRI .EQ. 0) THEN
 4340	WRITE(*,4341)
 4341   FORMAT(/' ENTER THE NAME OF THE FILE HAVING THE '/
     1' DENSITY VALUES FROM THE END OF A PREVIOUS RUN (THIS'/
     2' FILE ALSO HAS ASSOCIATED INSTRUCTIONS); ')
	WRITE(*,*)' ENTER -99 TO SEE ALL OR A PART OF YOUR DIRECTORY: '
        READ(*,2) PRIFIL2
	IF(PRIFIL2(1:3) .EQ. '-99') THEN
       CALL SEEDIR(PATH,NOB,PRIFIL2,OSName,ListDir)
      ENDIF
      ENDIF
      CALL WRITEINFILE(7,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
1230   CONTINUE
      IF(IVERIFY .EQ. 1)
     1 CALL VERIF1(PATHFILAST,IDIRCT,PREFIX,EXT,IFORMT,NVAR,PAR,AB,C0P,
     1   C1P,C2P,C3P,IASS,AF,MAXCYC,JSTOP,TOLC,INDPTS,NOFIX,VALFIX,
     2   PARFIX,IDELTA,XMIC,ICENT,NUMEQT,IALLPAT,ASSMULT,PATH,NOB,
     3   IERRMOD,GAMLAM0,NSUBTOT,NSUB,ISUBALL,MAXSUB,IPATVEC,BLOCKPAT,
     4   AUCINT,OSName,ClearScreen,ListDir,NDRUG,TOLER,INPRI,PRIFIL2,
     5   NDIM,RTOL,ATOL,IRAN,FORFILE,MAXNUMEQ,NRANFIX,PARRANFIX,
     6   RANFIXEST)
	IF(IFORMT .EQ. 3) THEN
      DO ISUB = 1,NSUBTOT
       PATFIL="XQZPJ"//NUMBER(ISUB)//'.ZMQ'
       TMPFILE = ' '
       TMPFILE = PATFIL
       CALL FULLNAME(PATH,TMPFILE,PATHFILE)
       OPEN(81,FILE=PATHFILE,ERR=7770,STATUS='OLD')
       CLOSE(81)
      END DO
      IF(IALLIN .EQ. 1 .AND. IVERIFY .EQ. 0) GO TO 7770
 7780 WRITE(*,7771) NSUBTOT,BLOCKPAT,BLOCKPAT,BLOCKPAT,BLOCKPAT
 7771 FORMAT(//' THERE ARE ALREADY ',I6,' WORKING COPY FILES BY THE '/
     1' NAMES OF XQZPJ001.ZMQ,... IN THE CURRENT WORKING DIRECTORY.'//
     2' IF THESE WERE THE ONES CREATED BY THE PROGRAM FROM A PREVIOUS'/
     3' RUN WITH YOUR .csv FILE, ',A20,' YOU CAN SIMPLY USE THEM '/
     4' AGAIN, RATHER THAN RECREATE THEM FROM ',A20//
     5' THIS COULD SAVE A LOT OF TIME IF YOU HAVE A LARGE PATIENT '/
     6' POPULATION. OF COURSE IF THESE WORKING COPY FILES DID NOT COME'/
     7' FROM ',A20,' ENTER 1 BELOW.'//
     8' ENTER 1 TO CREATE ANOTHER SET OF WORKING COPY FILES FROM YOUR'/
     9'         .csv FILE, ',A20/
     1' ENTER 0 TO SAVE TIME BY USING THE XQZPJ001.ZMQ,... FILES WHICH'/
     2'         ALREADY EXIST IN YOUR WORKING DIRECTORY: ')
      READ(*,*,ERR=7780) ILONG
      IF(ILONG .NE. 1 .AND. ILONG .NE. 0) GO TO 7780
      IF(ILONG .EQ. 0) GO TO 7790
 7770  CONTINUE
      TMPFILE = ' '
	TMPFILE = BLOCKPAT
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(87,FILE=PATHFILE,STATUS='OLD')
        CALL CONVERTCSV
        OPEN(67)
        CALL NEWCSV
        CALL CSVCHANGE
        REWIND(66)
        CALL READBLOCK(1,NSUBR,MAXSUB,NOUT,NDRUG,PATH,C0P,C1P,C2P,C3P,
     1   MAXNUMEQ)
        CLOSE(66)
	 IF(NSUBTOT .NE. NSUBR) THEN
	  WRITE(*,1011) NSUBTOT,BLOCKPAT,NSUBR
 1011     FORMAT(/' THE NO. OF TOTAL SUBJECTS IN YOUR PATIENT DATA'/
     1' SET WAS READ IN AS ',I4,' BUT THE NO. OF SUBJECTS IN YOUR'/
     2' BLOCK PATIENT DATA FILE, ',A20,' IS ',I4,'. THESE NUMBERS'/
     3' MUST BE THE SAME. PLEASE CHECK YOUR PATIENT DATA AND RERUN'/
     4' THIS PROGRAM.'/)
	  CALL PAUSE
        OPEN(42,FILE=ERRFIL)
         WRITE(42,1011) NSUBTOT,BLOCKPAT,NSUBR
        CLOSE(42)
	  STOP
	 ENDIF
      IF(IALLIN .EQ. 0 .OR. IVERIFY .EQ. 1)
     1 CALL WRITEINFILE(8,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
	ENDIF
7790  CONTINUE
	WRITE(*,2401)
 2401   FORMAT(//' EXAMINING ALL WORKING COPY PATIENT DATA FILES TO '/
     1' MAKE SURE THEY ALL HAVE THE APPROPRIATE ASSAY COEFFICIENTS '/
     2' WRITTEN TO THEIR FILES ... '/)
	MAXOBS = 0
	DO I=1,NUMEQT
	 NCSTORE(IEQ) = 0
	END DO
      DO ISUB=1,NSUBTOT
       WRITE(*,8889) ISUB
 8889  FORMAT(' SUBJECT NO. ',I6)
       IF(IFORMT .EQ. 1) PATFIL=PREFIX//NUMBER(ISUB)//'.'//EXT
       IF(IFORMT .EQ. 3) PATFIL="XQZPJ"//NUMBER(ISUB)//'.ZMQ'
      TMPFILE = ' '
      TMPFILE = PATFIL
      CALL FULLNAME(PATH,TMPFILE,PATHFILE)
      CALL PUTASS(PATHFILE,IASS,C0P,C1P,C2P,C3P,MAXOBS,NUMEQT,
     1 IALLPAT,ASSMULT,GENCOEF,NCSTORE,MAXOBDIM,YO,MAXNUMEQ)
      END DO
 	IF(INDPTS .EQ. 1) NGRID=2129
	IF(INDPTS .EQ. 2) NGRID=5003
	IF(INDPTS .EQ. 3) NGRID=10007
	IF(INDPTS .EQ. 4) NGRID=20011
	IF(INDPTS .EQ. 5) NGRID=40009
	IF(INDPTS .EQ. 6) NGRID=80021
	IF(INDPTS .GT. 6) NGRID = 80021*(INDPTS - 100)
	CALL MAKEDRIV(PATH,NOB,FORFILE,NSUBTOT,NVAR,NGRID,NUMEQT,
     1MAXOBS,OSName,CopyFile,DeleteFile)
      IF(INPRI .EQ. 0) THEN
     	TMPFILE = ' '
	TMPFILE = PRIFIL2
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(34,FILE=PATHFILE,ERR=4345,STATUS='OLD')
	GO TO 4350
 4345 WRITE(*,5316) PATHFILE
      WRITE(*,7181)
      CALL PAUSE
      GO TO 7180
 4350   CONTINUE
      READ(34,7123) CODE
      ICODEPRI = 0
      IF(CODE .EQ. 'DENSITY FEB_97') ICODEPRI = 1
      IF(CODE .EQ. 'DENSITY JUN_09') ICODEPRI = 1
      IF(CODE .EQ. 'DENSITY APR_10') ICODEPRI = 1
      IF(CODE .EQ. 'DENSITY OCT_15') ICODEPRI = 2
      IF(CODE .EQ. 'DENSITY MAR_16') ICODEPRI = 2
      IF(ICODEPRI .EQ. 0) THEN
       WRITE(*,8181)
 8181  FORMAT(//' YOU ARE TRYING TO USE A DENSITY FILE MADE BY AN'/
     1' OBSOLETE VERSION OF THE PROGRAM.'//
     2' A SAVED DENSITY FILE MUST HAVE DENSITY XXX_XX ON LINE 1, WHERE'/
     3' XXX_XX IS FEB_97, JUN_09, APR_10, OR OCT_15.'/)
      WRITE(*,7181)
 7181 FORMAT(/' THIS RUN WILL BE CHANGED TO USE A UNIFORM DENSITY.'/
     1' IF THIS IS NOT WHAT YOU WANT, STOP THE PROGRAM NOW, AND RERUN'/
     2' WITH A DENSITY FILE WITH ONE OF THE ABOVE CODES ON THE 1ST'/
     3' LINE. '//)
      CALL PAUSE
      GO TO 7180
      ENDIF
	READ(34,*) NNDIM
	IF(NNDIM .NE. NDIM) THEN
	 NDIM=NNDIM
	  WRITE(*,4371) NDIM
 4371     FORMAT(/' THE NO. OF COMPARTMENTS ENTERED ABOVE DOES NOT'/
     1' MATCH THE NO. FROM THE PREVIOUS RUN. THE NO. OF COMPARTMENTS'/
     2' HAS BEEN CHANGED TO BE ',I5,'.')
	ENDIF
	READ(34,*) IIND
	IF(IIND .NE. INDPTS) THEN
	  INDPTS=IIND
	  IF(INDPTS .EQ. 1) NGRID=2129
	  IF(INDPTS .EQ. 2) NGRID=5003
	  IF(INDPTS .EQ. 3) NGRID=10007
	  IF(INDPTS .EQ. 4) NGRID=20011
	  IF(INDPTS .EQ. 5) NGRID=40009
	  IF(INDPTS .EQ. 6) NGRID=80021
	  IF(INDPTS .GT. 6) NGRID=80021*(INDPTS-100)
	  WRITE(*,4351) NGRID
 4351     FORMAT(/' THE NO. OF GRID POINTS ENTERED ABOVE DOES NOT'/
     1' MATCH THE NO. FROM THE PREVIOUS RUN. THE NO. OF GRID POINTS'/
     2' HAS BEEN CHANGED TO BE ',I5,'.')
	ENDIF
	READ(34,*) NACTVE
	IF(NACTVE .GT. MAXGRD) THEN
	 WRITE(*,1718) NACTVE,MAXGRD,MAXGRD
 1718    FORMAT(//' THE NO. OF ACTIVE GRID POINTS IS ',I7,' WHICH IS'/
     1' MORE THAN THE MAXIMUM ALLOWED FOR THIS PROGRAM (',I7,'). RERUN'/
     2' THIS PROGRAM AFTER YOU HAVE REDUCED THE NO. OF GRID POINTS IN'/
     3' THE DENSITY FILE TO NO MORE THAN ',I7//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,1718) NACTVE,MAXGRD,MAXGRD
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	READ(34,*) NNVA
	DO I=1,NNVA
	 READ(34,1717) PPAR(I)
	END DO
 1717   FORMAT(A11)
	ICHANG=0
	IF(NNVA .NE. NVAR) ICHANG=1
	DO I=1,NNVA
	IF(PPAR(I) .NE. PAR(I)) ICHANG=1
	END DO
	IF(ICHANG .EQ. 1) THEN
	WRITE(*,4352) (PPAR(I),I=1,NNVA)
 4352   FORMAT(/' THE RANDOM PARAMETERS DO NOT MATCH THOSE FROM THE'/
     1' PREVIOUS RUN. PLEASE ENSURE COMPATIBILITY BETWEEN THE APRIORI'/
     2' DENSITY FILE AND THE MODEL AND PARAMETERS YOU SELECT. THEN'//
     3' RERUN THIS PROGRAM.'//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,4352) (PPAR(I),I=1,NNVA)
        CLOSE(42)
	CALL PAUSE
	STOP
	ENDIF
	READ(34,*) NNOF
	DO I=1,NNOF
	 READ(34,1717) PPARFX(I)
	END DO
	ICHANG=0
	IF(NNOF .NE. NOFIX) ICHANG=1
	DO I=1,NNOF
	IF(PPARFX(I) .NE. PARFIX(I)) ICHANG=1
	END DO
	IF(ICHANG .EQ. 1) THEN
	WRITE(*,6426)
 6426   FORMAT(/' THE FIXED PARAMETERS DO NOT MATCH THE ONES FROM THE'/
     1' PREVIOUS RUN. PLEASE ENSURE COMPATIBILITY BETWEEN THE APRIORI'/
     2' DENSITY FILE AND THE MODEL AND PARAMETERS YOU SELECT. THEN '/
     3' RERUN THIS PROGRAM.'//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,6426)
        CLOSE(42)
	CALL PAUSE
	STOP
	ENDIF
      IF(ICODEPRI .EQ. 1) THEN
       IF(NRANFIX .GT. 0) THEN
        WRITE(*,8182) NRANFIX
 8182   FORMAT(/' THIS RUN IS SET TO HAVE ',I2,' RANFIX PARAMETERS, '/
     1' AND YET YOU HAVE JUST SPECIFIED A PRIOR DENSITY WHICH HAS NO'/
     2' RANFIX PARAMETERS. SO ...'/)
        WRITE(*,7181)
        CALL PAUSE
        GO TO 7180
       ENDIF
      ENDIF
      IF(ICODEPRI .EQ. 2) THEN
       READ(34,*) NNRANFIX
       DO I=1,NNRANFIX
        READ(34,1717) PPARRANFIX(I)
       END DO
       ICHANG=0
       IF(NNRANFIX .NE. NRANFIX) ICHANG=1
       DO I=1,NNRANFIX
        IF(PPARRANFIX(I) .NE. PARRANFIX(I)) ICHANG=1
       END DO
       IF(ICHANG .EQ. 1) THEN
        WRITE(*,7426)
 7426   FORMAT(/' THE RANFIX PARAMETERS DO NOT MATCH THE ONES FROM THE'/
     1' PREVIOUS RUN. PLEASE ENSURE COMPATIBILITY BETWEEN THE APRIORI'/
     2' DENSITY FILE AND THE MODEL AND PARAMETERS YOU SELECT. THEN'/
     3' RERUN THIS PROGRAM.'//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,7426)
        CLOSE(42)
        CALL PAUSE
        STOP
       ENDIF
      ENDIF
	ICHANG = 0
	DO I=1,NNVA
	READ(34,*) (AAB(I,J),J=1,2)
	IF(AAB(I,1) .NE. AB(I,1) .OR. AAB(I,2) .NE. AB(I,2)) THEN
	  AB(I,1)=AAB(I,1)
	  AB(I,2)=AAB(I,2)
	  ICHANG=1
	ENDIF
	END DO
	IF(ICHANG .EQ. 1) THEN
	  WRITE(*,4354)
 4354   FORMAT(/' THE RANDOM PARAMETER RANGES ENTERED ABOVE DO NOT '/
     1' MATCH THE ONES FROM THE PREVIOUS RUN. THE RANGES HAVE BEEN '/
     2' CHANGED TO THE FOLLOWING: ')
	DO I=1,NVAR
	WRITE(*,1217) PAR(I),AB(I,1),AB(I,2)
	END DO
 1217   FORMAT(/' ',A11,': ',G17.10,'   TO   ',G17.10)
	ENDIF
	ICHANG=0
	READ(34,*) (VVALFX(I),I=1,NOFIX)
	DO I=1,NOFIX
	IF(VALFIX(I) .NE. VVALFX(I)) THEN
	VALFIX(I)=VVALFX(I)
	ICHANG=1
	ENDIF
	END DO
	IF(ICHANG .EQ. 1) THEN
	WRITE(*,6422)
 6422   FORMAT(/' THE FIXED PARAMETER VALUES ENTERED ABOVE DO NOT '/
     1' MATCH THE ONES FROM THE PREVIOUS RUN. THE VALUES HAVE BEEN'/
     2' CHANGED TO THE FOLLOWING: ')
	DO I=1,NOFIX
	WRITE(*,6423) PARFIX(I),VALFIX(I)
	END DO
 6423   FORMAT(' ',A11,':  ',G17.10)
	ENDIF
      IF(ICODEPRI .EQ. 2) THEN
       ICHANG=0
       READ(34,*) (RRANFIXEST(I),I=1,NRANFIX)
       DO I=1,NRANFIX
        IF(RANFIXEST(I) .NE. RRANFIXEST(I)) THEN
         RANFIXEST(I) = RRANFIXEST(I)
         ICHANG=1
        ENDIF
       END DO
       IF(ICHANG .EQ. 1) THEN
        WRITE(*,7422)
 7422   FORMAT(/' THE RANFIX PARAMETER VALUES ENTERED ABOVE DO NOT '/
     1' MATCH THE ONES FROM THE PREVIOUS RUN. THE VALUES HAVE BEEN'/
     2' CHANGED TO THE FOLLOWING: ')
        DO I=1,NRANFIX
         WRITE(*,6423) PARRANFIX(I),RANFIXEST(I)
        END DO
       ENDIF
      ENDIF
	READ(34,*) NNINT
	IF(NINT .NE. NNINT) THEN
	NINT=NNINT
	WRITE(*,6424) NINT
 6424   FORMAT(' THE NUMBER OF INTERVALS TO BE USED IN CALCULATING THE'/
     1' MARGINAL DENSITIES DOES NOT MATCH THAT OF THE PREVIOUS RUN. '/
     2' THIS NUMBER HAS BEEN CHANGED TO: ',I3)
	ENDIF
	READ(34,*) ICYCLE
	READ(34,*) DORIG
	DO I=1,NACTVE
	READ(34,*) (CORDEN(I,J),J=1,NVAR+1)
	END DO
	CLOSE(34)
	WRITE(*,4356) ICYCLE,ICYCLE+1,MAXCYC+ICYCLE
 4356   FORMAT(/' THE PREVIOUS RUN COMPLETED ',I5,' CYCLES, SO THIS'/
     1' RUN WILL START WITH CYCLE NO. ',I5,', AND GO THROUGH CYCLE '/
     2' NO. ',I5,', UNLESS STOPPED FIRST BY THE TOLERANCE CRITERION.'//)
	IF(MAXCYC .GT. 0) MAXCYC = MAXCYC + ICYCLE
	ENDIF
      GO TO 7185
 7180 INPRI = 1
 7185 IF(INPRI .EQ. 1) ICYCLE=0
     	TMPFILE = ' '
	TMPFILE = 'npag103.inp'
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(27,FILE=PATHFILE,ERR=5375,STATUS='NEW')
	GO TO 5380
 5375   WRITE(*,5376)
 5376   FORMAT(/' FILE npag103.inp, WHICH WILL STORE THE NEW '/
     1' INSTRUCTIONS AND THE PATIENT DATA FILES TO BE READ BY THE '/
     2' NPAG "ENGINE", ALREADY EXISTS. npag103.inp WILL BE'/
     3' COPIED TO npag103.bak. THEN THE VALUES FOR THIS RUN WILL BE'/
     4' WRITTEN INTO npag103.inp.'/)
        CALL SYSTEM(CopyFile//PATH(1:NOB)//'npag103.inp '//
     1PATH(1:NOB)//'npag103.bak')
	OPEN(27,FILE=PATHFILE)
 5380   CONTINUE
		WRITE(27,*) NDIM
		WRITE(27,*) MF
		WRITE(27,*) RTOL
		WRITE(27,*) (ATOL(I),I=1,NDIM)
		WRITE(27,*) IFORMT
		IF(IFORMT .EQ. 1) THEN
		 WRITE(27,2222) PREFIX
		 WRITE(27,222) EXT
		ENDIF
		IF(IFORMT .EQ. 3) THEN
		 WRITE(27,2222) "XQZPJ"
		 WRITE(27,222) "ZMQ"
		ENDIF
		WRITE(27,*) NVAR
		WRITE(27,1717) (PAR(I),I=1,NVAR)
		WRITE(27,*) NOFIX
		WRITE(27,1717) (PARFIX(I),I=1,NOFIX)
            WRITE(27,*) NRANFIX
            WRITE(27,1717) (PARRANFIX(I),I=1,NRANFIX)
		WRITE(27,*) (IRAN(I),I=1,NP)
		WRITE(27,*) NSUBTOT
		WRITE(27,*) NSUB
		CALL WRITEPT2(27,NSUB,MAXSUB,IPATVEC)
		WRITE(27,*) '    0'
            IF(NOFIX .GT. 0) WRITE(27,*) (VALFIX(I),I=1,NOFIX)
            IF(NRANFIX .GT. 0) WRITE(27,*) (RANFIXEST(I),I=1,NRANFIX)
		DO I=1,NVAR
		 WRITE(27,*) (AB(I,J),J=1,2)
		END DO
		WRITE(27,*) NUMEQT
		DO IEQ=1,NUMEQT
		 WRITE(27,161) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
		END DO
 161    	FORMAT(4(G16.10,2X))
		WRITE(27,*) IERRMOD,GAMLAM0
            WRITE(27,*) NDRUG
		WRITE(27,*) (AF(I),I=1,NDRUG)
		WRITE(27,*) INDPTS
		WRITE(27,*) MAXCYC
		WRITE(27,*) JSTOP
		IF(JSTOP .NE. 1) WRITE(27,*) TOLC
		WRITE(27,*) IDELTA
		T_END = 99.D0
		WRITE(27,*) T_END
		WRITE(27,*) XMIC
		WRITE(27,*) ICENT
		WRITE(27,*) AUCINT
		WRITE(27,*) ICYCLE
		IF(ICYCLE .GE. 1) THEN
		  WRITE(27,*) DORIG
		  WRITE(27,*) NACTVE
		  DO I=1,NACTVE
		   WRITE(27,*) (CORDEN(I,J),J=1,NVAR+1)
		  END DO
		  WRITE(27,2) PRIFIL2
		ENDIF
	DO 400 ISUB=1,NSUBTOT
      WRITE(*,401) ISUB
  401 FORMAT(' WRITING SUBJECT ',I6,' TO npag103.inp ')
	IF(IFORMT .EQ. 1) PATFIL=PREFIX//NUMBER(ISUB)//'.'//EXT
	IF(IFORMT .EQ. 3) PATFIL="XQZPJ"//NUMBER(ISUB)//'.ZMQ'
        CALL STACK(PATH,MAXOBDIM,MAXNUMEQ,PATFIL,AF)
  400   CONTINUE
	CLOSE(27)
      IF(IVERIFY .EQ. 1) THEN
 4020	WRITE(*,4012) PATHFILAST
 4012   FORMAT(/' THE SAVED INSTRUCTIONS ARE CURRENTLY IN FILE ',
     1A73//
     2' ENTER 1 IF YOU WOULD LIKE TO HAVE THESE INSTRUCTIONS ALSO'/
     3'         SAVED TO A FILE OF ANOTHER NAME; '/
     4' ENTER 0 IF YOU DO NOT WANT TO SAVE INSTRUCTIONS TO ANOTHER FILE:
     5 ')
	READ(*,*,ERR=4020) ISAVE
	IF(ISAVE .NE. 0 .AND. ISAVE .NE. 1) GO TO 4020
	IF(ISAVE .EQ. 1) THEN
       IORIGFILE = 0
       IF(IALLIN .EQ. 1) THEN
     	  TMPFILE = ' '
        TMPFILE = ALLINSTRUCT
        IORIGFILE = 1
       ENDIF
       IF(IALLIN .EQ. 0 .AND. IFIL .EQ. 1) THEN
     	  TMPFILE = ' '
        TMPFILE = FROMLAST
        IORIGFILE = 1
       ENDIF
       IF(IORIGFILE .EQ. 1) THEN
        CALL FULLNAME(PATH,TMPFILE,PATHFILE)
 4030   WRITE(*,4013) PATHFILE
 4013   FORMAT(/' YOUR ORIGINAL INSTRUCTION FILE FOR THIS RUN WAS '/
     12X,A73//
     2' ENTER 1 TO SAVE THE FINAL SET OF INSTRUCTIONS BACK TO THIS FILE;
     3 '/
     5' ENTER 0 TO SAVE THE FINAL SET OF INSTRUCTIONS TO ANOTHER FILE: '
     6)
	 READ(*,*,ERR=4030) IORIG
	 IF(IORIG .NE. 0 .AND. IORIG .NE. 1) GO TO 4030
	 IF(IORIG .EQ. 0) THEN
	  WRITE(*,4014)
 4014     FORMAT(/' ENTER THE NAME OF THE FILE (WITHOUT THE PATH) TO'/
     1' WHICH YOU WANT TO SAVE THE FINAL SET OF INSTRUCTIONS: ')
	  READ(*,2) FROMLAST
     	  TMPFILE = ' '
	  TMPFILE = FROMLAST
	  CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	 ENDIF
	ENDIF
	IF(IFIL .EQ. 0 .OR. INOPT1 .EQ. 1) THEN
	 WRITE(*,4014)
	 READ(*,2) FROMLAST
     	 TMPFILE = ' '
	 TMPFILE = FROMLAST
	 CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	 IORIG = 0
	ENDIF
	IF(IORIG .EQ. 0) THEN
	 OPEN(25,FILE=PATHFILE,ERR=4040,STATUS='NEW')
	 GO TO 4050
 4040  WRITE(*,9826) PATHFILE
	 READ(*,*,ERR=4040) IFILE
	 IF(IFILE .NE. 0 .AND. IFILE .NE. 1) GO TO 4040
	 IF(IFILE .EQ. 0) GO TO 4020
	 IF(IFILE .EQ. 1) OPEN(25,FILE=PATHFILE)
 4050  CLOSE(25)
	ENDIF
        CALL SYSTEM(CopyFile//PATHFILAST//' '//PATHFILE)
	ENDIF
      ENDIF
     	TMPFILE = ' '
	TMPFILE = 'npag103.inp'
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(21,FILE=PATHFILE)
     	TMPFILE = ' '
	TMPFILE = 'npag103.bak'
	CALL FULLNAME(PATH,TMPFILE,PATHFIL2)
	OPEN(22,FILE=PATHFIL2)
	OPEN(21,FILE=PATHFILE)
	OPEN(22,FILE=PATHFIL2)
 3010   READ(21,3,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) GO TO 3100
	WRITE(22,3) READLINE
	GO TO 3010
 3100   CLOSE(21)
	CLOSE(22)
        CALL SYSTEM(CopyFile//PATH(1:NOB)//'npag103.bak '//
     1PATH(1:NOB)//'npag103.inp')
     	TMPFILE = ' '
	TMPFILE = 'npagdriv.f'
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(21,FILE=PATHFILE)
     	TMPFILE = ' '
	TMPFILE = 'npagdriv.bak'
	CALL FULLNAME(PATH,TMPFILE,PATHFIL2)
	OPEN(22,FILE=PATHFIL2)
	OPEN(21,FILE=PATHFILE)
	OPEN(22,FILE=PATHFIL2)
 4010   READ(21,3,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) GO TO 4100
	WRITE(22,3) READLINE
	GO TO 4010
 4100   CLOSE(21)
	CLOSE(22)
        CALL SYSTEM(CopyFile//PATH(1:NOB)//'npagdriv.bak '//
     1PATH(1:NOB)//'npagdriv.f')
        IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
          WRITE(*,1109)
        ELSE IF (INDEX(OSName,"DOS",.TRUE.).eq.1) THEN
          WRITE(*,1111)
        ENDIF
 1109   FORMAT(//' YOU HAVE COMPLETED THE PREPARATION PHASE FOR THIS'/
     1' PROGRAM. PLEASE DO THE FOLLOWING:'//
     2' 1. PLACE THE FOLLOWING TWO FILES INTO THE "WORKING" DIRECTORY'/
     3'    (WHICH MUST CONTAIN THE PERMANENT MODULES FOR THE '/
     4'    NPAG, MULTIPLE DRUG "ENGINE"):'/
     3'    OF THE COMPUTER WHICH WILL DO THE ANALYSIS:'/
     5'      npag103.inp <-- INPUT INSTRUCTIONS + PATIENT DATA;'/
     7'      npagdriv.f  <-- DRIVER MODULE + MODEL CODE;'//
     1' 2. COMPILE AND LINK THE PROGRAM IN THE WORKING DIRECTORY ...'/
     3' 3. EXECUTE THE PROGRAM ...'//
     9' 4. AFTER THE RUN HAS FINISHED, YOU WILL HAVE SEVERAL OUTPUT'/
     1'    FILES, OUTxxxx  OUTTxxxx  DENxxxx  PRTBxxxx  NP_RFxxxx '/
     2'    WHERE xxxx IS THE 4-DIGIT JOB NUMBER ASSIGNED TO YOUR RUN.'/)
 1111   FORMAT(//' YOU HAVE COMPLETED THE PREPARATION PHASE FOR THIS'/
     1' PROGRAM. PLEASE DO THE FOLLOWING:'//
     2' 1. PLACE THE FOLLOWING TWO FILES INTO THE "WORKING" DIRECTORY'/
     3'    (WHICH MUST CONTAIN THE PERMANENT MODULES FOR THE '/
     4'    NPAG, MULTIPLE DRUG "ENGINE"):'/
     3'    OF THE COMPUTER WHICH WILL DO THE ANALYSIS:'/
     5'      npag103.inp <-- INPUT INSTRUCTIONS + PATIENT DATA;'/
     7'      npagdriv.f  <-- DRIVER MODULE + MODEL CODE;'//
     1' 2. COMPILE AND LINK THE PROGRAM IN THE WORKING DIRECTORY ...'/
     3' 3. EXECUTE THE PROGRAM ...'//
     9' 4. AFTER THE RUN HAS FINISHED, YOU WILL HAVE SEVERAL OUTPUT'/
     1'    FILES, OUTxxxx  OUTTxxxx  DENxxxx  PRTBxxxx  NP_RFxxxx '/
     2'    WHERE xxxx IS THE 4-DIGIT JOB NUMBER ASSIGNED TO YOUR RUN.'/)
	IF(IFORMT .EQ. 3) WRITE(*,1112)
 1112   FORMAT(///' CAUTION     CAUTION     CAUTION     CAUTION   '//
     2' THE FOLLOWING WORKING COPY FILES HAVE BEEN CREATED AND PLACED'/
     3' INTO YOUR WORKING COPY DIRECTORY. YOU MAY WISH TO CHECK THAT'/
     4' THESE FILES WERE CREATED CORRECTLY. '//
     5' XQZPJ001.ZMQ, ... '//
     5' NOTE THAT IF YOU RERUN THIS NPAG PC PREP PROGRAM AGAIN WITH'/
     6' THE SAME WORKING DIRECTORY, AND YOU INPUT PATIENT DATA INFO'/
     7' VIA A BLOCK PATIENT FILE, THESE FILES WILL BE OVERWRITTEN.'//
     6' CAUTION     CAUTION     CAUTION     CAUTION'///)
      IF(IALLIN .EQ. 1 .AND. IVERIFY .EQ. 0) STOP
	CALL PAUSE
	STOP
	END
	SUBROUTINE FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
        IMPLICIT REAL*8(A-H,O-Z)
        DIMENSION SIG(5000),RS(5000,34),YO(MAXOBDIM,MAXNUMEQ),
     1  BS(5000,7),C0(MAXNUMEQ),C1(MAXNUMEQ),C2(MAXNUMEQ),C3(MAXNUMEQ)
        CHARACTER ERRFIL*20
      COMMON/ERROR/ERRFIL
	CHARACTER SEX*1,READLINE*1000
	DO I=1,7
	 READ(27,*)
	END DO
	READ(27,*) AGE
	READ(27,2) SEX
    2   FORMAT(A1)
	ISEX=1
	IF(SEX .EQ. 'F') ISEX=2
	READ(27,*) HEIGHT
	READ(27,*) IETHFLG
    1   FORMAT(A1000)
   10	READ(27,1) READLINE
	IF(READLINE(12:23) .NE. 'NO. OF DRUGS') GO TO 10
	BACKSPACE(27)
    3   FORMAT(T2,I5)
        READ(27,3) NDRUG
	IF(NDRUG .GT. 7) THEN
	 WRITE(*,124)
  124    FORMAT(' YOUR PATIENT DATA FILES CANNOT HAVE MORE THAN 7'/
     1' DRUGS. THE PROGRAM IS NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,124)
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
        READ(27,3) NADD
	NI = 2*NDRUG + NADD
	IF(NI .GT. 34) THEN
  	 WRITE(*,123)
  123    FORMAT(/' YOUR PATIENT DATA FILES HAVE TOO MANY COLUMNS IN '/
     1' THE DOSAGE REGIMEN BLOCK. THE NO. OF ADDITIONAL COVARIATES '/
     2' PLUS TWICE THE NO. OF DRUGS CANNOT EXCEED 34. THE PROGRAM IS'/
     3' NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,123)
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
        READ(27,3) ND
	IF(ND .GT. 5000) THEN
	 WRITE(*,125)
  125    FORMAT(' YOUR PATIENT DATA FILES CANNOT HAVE MORE THAN 5000'/
     1' DOSE EVENTS. THE PROGRAM IS NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,125)
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	READ(27,*)
	READ(27,*)
        IF(ND.EQ.0) GO TO 40
	DO I = 1,ND
         READ(27,*) SIG(I),(RS(I,J),J=1,NI)
	END DO
        DO I=1,ND
         DO J=1,NDRUG
          BS(I,J)=RS(I,2*J)
	 END DO
	END DO
   40	READ(27,1) READLINE
	IF(READLINE(12:23) .NE. 'NO. OF TOTAL') GO TO 40
	BACKSPACE(27)
        READ(27,3) NUMEQT
        READ(27,3) M
	IF(M .GT. MAXOBDIM) THEN
  	 WRITE(*,126) MAXOBDIM
  126    FORMAT(/' AT LEAST ONE OF YOUR PATIENT DATA FILES HAS TOO'/
     1' MANY OBSERVED VALUE TIMES. THIS NO. CANNOT EXCEED ',I5,'.'/
     2' THE PROGRAM IS NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,126) MAXOBDIM
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	IF(NUMEQT .GT. MAXNUMEQ) THEN
  	 WRITE(*,127) MAXNUMEQ
  127    FORMAT(/' AT LEAST ONE OF YOUR PATIENT DATA FILES HAS TOO'/
     1' MANY OUTPUT EQUATION COLUMNS. THIS NO. CANNOT EXCEED ',I2,'.'/
     2' THE PROGRAM IS NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,127) MAXNUMEQ
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	DO I=1,M
         READ(27,*) T,(YO(I,J),J=1,NUMEQT)
	END DO
	NOBSER = M
   50	READ(27,1) READLINE
	IF(READLINE(1:25) .NE. 'ASSAY COEFFICIENTS FOLLOW') GO TO 50
	DO IEQ = 1,NUMEQT
	 READ(27,*) C0(IEQ),C1(IEQ),C2(IEQ),C3(IEQ)
	END DO
	RETURN
	END
      SUBROUTINE STACK(PATH,MAXOBDIM,MAXNUMEQ,PATFIL,AF)
        IMPLICIT REAL*8(A-H,O-Z)
        DIMENSION SIG(5000),RS(5000,34),AF(7)
        CHARACTER PATFIL*20,READLINE*1000,PATH*60,TMPFILE*13,PATHFILE*73
        CHARACTER ERRFIL*20
      COMMON/ERROR/ERRFIL
    1   FORMAT(A1000)
     	TMPFILE = ' '
	TMPFILE = PATFIL
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
      OPEN(21,FILE=PATHFILE)
   10	READ(21,1,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) THEN
	 WRITE(*,128) PATFIL
  128  FORMAT(/' PATIENT DATA FILE ',A20,' HAS AN OLD-STYLE WORKING'/
     1' COPY FORMAT.'//
     2' FOR THIS PROGRAM, A PATIENT DATA FILE MUST HAVE "NO OF DRUGS"'/
     3' IN ENTRIES 12 THROUGH 23 ON OR NEAR LINE 18.'//
     5' THE PROGRAM STOPS. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,128) PATFIL
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	WRITE(27,1) READLINE
	IF(READLINE(12:23) .NE. 'NO. OF DRUGS') GO TO 10
        BACKSPACE(21)
    3   FORMAT(T2,I5)
        READ(21,3) NDRUG
	IF(NDRUG .GT. 7) THEN
	 WRITE(*,124) PATFIL
  124    FORMAT(' PATIENT DATA FILE ',A20,' HAS TOO MANY DRUGS'/
     1' (I.E, MORE THAN 7). THE PROGRAM IS NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,124) PATFIL
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
        READ(21,3) NADD
	NI = 2*NDRUG + NADD
	IF(NI .GT. 34) THEN
  	 WRITE(*,123) PATFIL
  123    FORMAT(/' YOUR PATIENT DATA FILES HAVE TOO MANY COLUMNS IN '/
     1' THE DOSAGE REGIMEN BLOCK. THE NO. OF ADDITIONAL COVARIATES '/
     2' PLUS TWICE THE NO. OF DRUGS CANNOT EXCEED 34. THE PROGRAM IS'/
     3' NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,123) PATFIL
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
        READ(21,3) ND
        IF(ND .GT. 5000) THEN
         WRITE(*,125) PATFIL
  125    FORMAT(' PATIENT DATA FILE ',A20,' HAS TOO MANY DOSE EVENTS'/
     1' (I.E., MORE THAN 5000). THE PROGRAM IS NOW STOPPING. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,125) PATFIL
        CLOSE(42)
         CALL PAUSE
         STOP
        ENDIF
	BACKSPACE(21)
	BACKSPACE(21)
	DO I=1,4
	 READ(21,1) READLINE
	 WRITE(27,1) READLINE
	END DO
        IF(ND.EQ.0) GO TO 40
        DO I = 1,ND
         READ(21,*) SIG(I),(RS(I,J),J=1,NI)
         DO J = 1,2*NDRUG
          IDRUG = (J+1)/2
          RS(I,J) = RS(I,J)*AF(IDRUG)
         END DO
         WRITE(27,*) SIG(I),(RS(I,J),J=1,NI)
        END DO
   40	READ(21,1) READLINE
	WRITE(27,1) READLINE
	IF(READLINE(12:23) .NE. 'NO. OF TOTAL') GO TO 40
	BACKSPACE(21)
        READ(21,3) NUMEQT
        READ(21,3) M
	IF(M .GT. MAXOBDIM) THEN
	 WRITE(*,126) PATFIL,M,MAXOBDIM,MAXOBDIM
  126    FORMAT(/' PATIENT ',A20,' HAS ',I3,' OBSERVATION TIMES. THIS '/
     1' IS MORE THAN THE ALLOWABLE MAXIMUM OF ',I3,'. PLEASE RERUN THE'/
     2' PROGRAM AFTER ENSURING THAT ALL YOUR PATIENTS HAVE NO MORE '/
     3' THAN ',I3,' OBSERVATION TIMES. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,126) PATFIL,M,MAXOBDIM,MAXOBDIM
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	IF(NUMEQT .GT. MAXNUMEQ) THEN
	 WRITE(*,127) PATFIL,NUMEQT,MAXNUMEQ,MAXNUMEQ
  127    FORMAT(/' PATIENT ',A20,' HAS ',I3,' OUTPUT EQUATION COLUMNS,'/
     1' WHICH IS MORE THAN THE MAXIMUM ALLOWABLE NO. OF ',I2,'.'/
     2' PLEASE RERUN THE PROGRAM AFTER ENSURING THAT ALL YOUR PATIENTS'/
     3' HAVE NO MORE THAN ',I2,' OUTPUT EQUATION COLUMNS. '/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,127) PATFIL,NUMEQT,MAXNUMEQ,MAXNUMEQ
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	BACKSPACE(21)
   20	READ(21,1,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) GO TO 100
	WRITE(27,1) READLINE
	GO TO 20
  100	CLOSE(21)
	RETURN
	END
	SUBROUTINE VERIF1(PATHFILAST,IDIRCT,PREFIX,EXT,IFORMT,NVAR,PAR,
     1   AB,C0P,C1P,C2P,C3P,IASS,AF,MAXCYC,JSTOP,TOLC,INDPTS,NOFIX,
     2   VALFIX,PARFIX,IDELTA,XMIC,ICENT,NUMEQT,IALLPAT,ASSMULT,PATH,
     3   NOB,IERRMOD,GAMLAM0,NSUBTOT,NSUB,ISUBALL,MAXSUB,IPATVEC,
     4   BLOCKPAT,AUCINT,OSName,ClearScreen,ListDir,NDRUG,TOLER,INPRI,
     5   PRIFIL2,NDIM,RTOL,ATOL,IRAN,FORFILE,MAXNUMEQ,NRANFIX,PARRANFIX,
     6   RANFIXEST)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION AB(30,2),VALFIX(20),IASS(MAXNUMEQ),C0P(MAXNUMEQ),
     1 C1P(MAXNUMEQ),C2P(MAXNUMEQ),C3P(MAXNUMEQ),IALLPAT(MAXNUMEQ),
     2 ASSMULT(MAXNUMEQ),IPATVEC(MAXSUB),AF(7),ATOL(20),IRAN(32),
     3 RANFIXEST(20)
      COMMON/ERROR/ERRFIL
	CHARACTER PREFIX*5,EXT*3,PAR(30)*11,TMPFILE*13,PATHFILE*73,
     1   PARFIX(20)*11,PATFIL*20,PATH*60,ESTNAM*6,BLOCKPAT*20,
     2   CODEPAT*15,PATHFILAST*73,OSName*20,ClearScreen*6,ListDir*10,
     3   PRIFIL2*20,FORFILE*20,ERRFIL*20,PARRANFIX(20)*11
      NP = NVAR + NOFIX + NRANFIX
  102   FORMAT(A20)
  103   FORMAT(A3)
  104   FORMAT(A5)
 5020   WRITE(*,1)
    1   FORMAT(///' THE FOLLOWING INFO WAS READ IN; IF ANY OF IT IS '/
     1' INCORRECT, MAKE THE DESIRED CHANGES.')
      WRITE(*,919) TOLER
  919 FORMAT(/' THE TOLERANCES FOR THE O.D.E. SOLVER ARE ALL ',G16.8)
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
 915   WRITE(*,913)
 913   FORMAT(/' ENTER 1 TO SET ALL TOLERANCES (FOR THE O.D.E. '/
     1'         SOLVER) TO THE DEFAULT VALUE ... 1.D-4.'/
     2' ENTER 0 TO SELECT A DIFFERENT VALUE FOR THE TOLERANCES: ')
       READ(*,*,ERR=915) ITOL
       IF(ITOL .NE. 0 .AND. ITOL .NE. 1) GO TO 915
       TOLER=1.D-4
      IF(ITOL .EQ. 0) THEN
  910	 WRITE(*,914)
  914  FORMAT(/' ENTER A POSITIVE VALUE FOR THE TOLERANCE PARAMETERS: ')
       READ(*,*,ERR=910) TOLER
       IF(TOLER .LE. 0.D0) GO TO 910
      ENDIF
      RTOL = TOLER
      DO I=1,NDIM
       ATOL(I) = TOLER
      END DO
      ENDIF
	IF(IFORMT .EQ. 1) THEN
	 WRITE (*,2) PREFIX,EXT
    2    FORMAT(/' THE PATIENT DATA FILES ARE CALLED: ',A5,'001.',A3,' .
     1..')
	 WRITE(*,3)
    3    FORMAT(/' THESE FILES ARE IN WORKING COPY FORMAT.')
	ENDIF
	IF(IFORMT .EQ. 3) WRITE(*,22) BLOCKPAT
   22   FORMAT(/' THE PATIENT DATA INFORMATION WILL BE INPUT IN '/
     1' BLOCK FORMAT FROM FILE ',A20)
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
4005	WRITE(*,141)
  141   FORMAT(/' ENTER 1 IF THE PATIENT DATA INFO WILL BE SUPPLIED'/
     1'         IN A MATRIX BLOCK FORMAT; '/
     2' ENTER 2 IF THE PATIENT DATA INFO WILL BE INPUT USING A'/
     3'         WORKING COPY FORMAT: ')
	READ(*,*,ERR=4005) IFORMTT
	IF(IFORMTT .NE. 1 .AND. IFORMTT .NE. 2) GO TO 4005
         IF(IFORMTT .EQ. 1) IFORMT = 3
         IF(IFORMTT .EQ. 2) IFORMT = 1
	IF(IFORMT .EQ. 3) THEN
         WRITE(*,3111)
 3111    FORMAT(/' ENTER THE NAME OF THE FILE WHICH CONTAINS ALL THE'/
     1' PATIENT DATA INFO IN BLOCK FORMAT (ENTER -99 TO SEE ALL OR A '/
     2' PART OF YOUR DIRECTORY: ')
        READ(*,102) BLOCKPAT
	IF(BLOCKPAT(1:3) .EQ. '-99') CALL SEEDIR(PATH,NOB,BLOCKPAT,OSName,
     1      ListDir)
     	TMPFILE = ' '
	TMPFILE = BLOCKPAT
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(67,FILE=PATHFILE,ERR=3120,STATUS='OLD')
	GO TO 3130
 3120   WRITE(*,5316) PATHFILE
 5316   FORMAT(//' THE FOLLOWING FILE DOES NOT EXIST ... '/
     1'    ',A73)
	GO TO 4005
 3130   CONTINUE
	 ICODEPAT = 0
	 READ(67,7126) CODEPAT
 7126    FORMAT(A15)
	 IF(CODEPAT .EQ. '"POPDATA APR_11') ICODEPAT = 1
	 IF(CODEPAT(1:14) .EQ. 'POPDATA APR_11') ICODEPAT = 1
       IF(CODEPAT .EQ. '"POPDATA DEC_11') ICODEPAT = 1
       IF(CODEPAT(1:14) .EQ. 'POPDATA DEC_11') ICODEPAT = 1
	IF(ICODEPAT .EQ. 0) THEN
	 WRITE(*,3131)
 3131    FORMAT(//' YOUR PATIENT DATA BLOCK FORMAT FILE IS NOT FROM '/
     1' THE ALLOWABLE SET OF SUCH FILES.'//
     2' A PATIENT DATA BLOCK FORMAT FILE MUST HAVE "POPDATA XXX_XX IN'/
     3' COLUMNS 1 THROUGH 15 ON LINE 1, WHERE  XXX_XX  IS APR_11 OR A '/
     4' MORE RECENT DATE.'//)
	  CLOSE(67)
	  GO TO 4005
	ENDIF
	CLOSE(67)
	ENDIF
	IF(IFORMT .EQ. 1) THEN
 7505	  WRITE(*,4041)
 4041     FORMAT(/' ENTER THE 5-CHAR PREFIX FOR PATIENT FILENAMES: ')
	  READ(*,104) PREFIX
	  WRITE(*,4043)
 4043     FORMAT(/' IF THERE IS A 3-CHAR EXTENSION FOR THE PATIENT '/
     1' FILENAMES, ENTER IT NOW; OTHERWISE, HIT CARRIAGE RETURN: ')
	  READ(*,103) EXT
	  IF(PREFIX(1:1) .EQ. ' ' .OR. PREFIX(2:2) .EQ. ' ' .OR.
     1       PREFIX(3:3) .EQ. ' ' .OR. PREFIX(4:4) .EQ. ' ' .OR.
     2       PREFIX(5:5) .EQ. ' ') THEN
     	PATFIL = PREFIX//'001.'//EXT
 7500   WRITE(*,7501) PATFIL(1:12)
 7501   FORMAT(/' ARE YOUR SUBJECT FILES REALLY CALLED ',A12,' ... ?'//
     1' ENTER 1 TO REENTER YOUR SUBJECT FILENAMES; '/
     2' ENTER 0 IF THESE NAMES ARE ACCURATE: ')
	READ(*,*,ERR=7500) IOK
	IF(IOK .NE. 0 .AND. IOK .NE. 1) GO TO 7500
	IF(IOK .EQ. 1) GO TO 7505
	   ENDIF
	ENDIF
         CALL GETNUMEQ(PATH,NOB,0,IFORMT,PREFIX,EXT,BLOCKPAT,NUMEQT2,
     1    NDRUG2,MAXSUB,MAXNUMEQ)
      IF(NUMEQT .GT. MAXNUMEQ) THEN
       WRITE(*,8317) NUMEQT,MAXNUMEQ
 8317  FORMAT(/' YOUR PATIENT FILES HAVE ',I3,' OUTPUT EQUATIONS. '/
     1' THIS IS MORE THAN THE MAXIMUM ALLOWED NO. OF ',I2,'.'//
     2' PLEASE CORRECT YOUR PATIENT FILES AND THEN RERUN THE PROGRAM.'/)
       OPEN(42,FILE=ERRFIL)
        WRITE(42,8317) NUMEQT,MAXNUMEQ
       CLOSE(42)
       CALL PAUSE
       STOP
      ENDIF
	IF(NUMEQT .NE. NUMEQT2) THEN
	 WRITE(*,7512) NUMEQT2,NUMEQT
 7512    FORMAT(//' YOUR NEW PATIENT DATA FILES HAVE ',I4,' OUTPUT'/
     1' EQUATION(S), RATHER THAN THE ',I4,' OUTPUT EQUATION(S) THAT '/
     2' YOUR ORIGINAL PATIENT FILES HAD. BE SURE TO CHANGE THE ASSAY'/
     3' COEFFICIENT INFORMATION BELOW, IF NEEDED.')
	 IF(NUMEQT .LT. NUMEQT2) THEN
	  DO IEQ = NUMEQT+1,NUMEQT2
	   IASS(IEQ) = 1
	   C0P(IEQ) = 1
	   C1P(IEQ) = 1
	   C2P(IEQ) = 1
	   C3P(IEQ) = 1
	  END DO
	 ENDIF
	NUMEQT = NUMEQT2
	ENDIF
	IF(NDRUG .NE. NDRUG2) THEN
	 WRITE(*,7513) NDRUG2,NDRUG
 7513    FORMAT(//' YOUR NEW PATIENT DATA FILES HAVE ',I4,' DRUGS,'/
     1' RATHER THAN THE ',I4,' DRUGS THAT YOUR ORIGINAL PATIENT FILES'/
     2' HAD. BE SURE TO CHANGE THE AF VALUES BELOW, IF NEEDED.')
	 IF(NDRUG .LT. NDRUG2) THEN
	  DO ID = NDRUG+1,NDRUG2
         AF(ID) = 1.D0
	  END DO
	 ENDIF
	NDRUG = NDRUG2
	ENDIF
	ENDIF
      CALL WRITEINFILE(7,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
      IF(NSUB .EQ. NSUBTOT) WRITE(*,6) NSUBTOT,NSUB
    6   FORMAT(/' YOU HAVE ',I5,' SUBJECTS IN YOUR ENTIRE DATA SET. '/
     1' OF THESE, ALL ',I5,' WILL BE USED IN THIS ANALYSIS. ')
      IF(NSUB .LT. NSUBTOT) THEN
	 WRITE(*,16) NSUBTOT,NSUB
   16    FORMAT(/' YOU HAVE ',I5,' SUBJECTS IN YOUR ENTIRE DATA SET. '/
     1' OF THESE, ',I5,' WILL BE USED IN THIS ANALYSIS. THE INDICES'/
     2' OF THE PATIENTS TO BE USED ARE AS FOLLOWS: ')
	 CALL WRITEPAT(NSUB,MAXSUB,IPATVEC)
	ENDIF
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
	CALL GETIPAT(NSUBTOT,NSUB,ISUBALL,MAXSUB,IPATVEC)
        ENDIF
      CALL WRITEINFILE(7,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
	WRITE(*,7) (PAR(I),I=1,NVAR)
    7   FORMAT(/' THE PARAMETERS TO BE ESTIMATED ARE: '/
     1' ',30A11)
	WRITE(*,9)
    9   FORMAT(//' THEIR RANGES ARE: ')
	DO 100 I=1,NVAR
  100   WRITE(*,11) PAR(I),AB(I,1),AB(I,2)
   11   FORMAT(/' ',A11,': ',G17.10,'  TO  ',G17.10)
      WRITE(*,201)
  201 FORMAT(/' THE USER-ENTERED FIXED PARAMETER VALUE(S) IS (ARE):')
      IF(NOFIX .EQ. 0) WRITE(*,*)' ... NONE SELECTED.'
      IF(NOFIX .GT. 0) THEN
       DO 210 I=1,NOFIX
  210  WRITE(*,211) PARFIX(I),VALFIX(I)
	ENDIF
  211 FORMAT(/' ',A11,': ',G17.10)
      WRITE(*,1201)
 1201 FORMAT(/' THE USER-ENTERED RANFIX PARAMETER VALUE(S) IS (ARE):')
      IF(NRANFIX .EQ. 0) WRITE(*,*)' ... NONE SELECTED.'
      IF(NRANFIX .GT. 0) THEN
       DO I=1,NRANFIX
        WRITE(*,211) PARRANFIX(I),RANFIXEST(I)
       END DO
	ENDIF
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
	IPB=1
	GO TO 4970
 4970   WRITE(*,1117)
 1117   FORMAT(/' ENTER THE BOUNDS OF THE RANGE FOR EACH PARAMETER.'//
     1' CAUTION: IF ANY OF YOUR PARAMETERS CANNOT = 0, BE SURE TO MAKE'/
     2'		 ITS LOWER BOUNDARY A POSITIVE NUMBER, RATHER THAN 0.'/
     3' 	 (ONE SUCH EXAMPLE IS FOR VOL WHICH SHOWS UP IN THE'/
     4'		 DENOMINATOR OF THE OUTPUT EQUATION IN THE MODEL'/
     5'		 FILE.)'//)
	DO 6060 I=1,NVAR
	WRITE(*,34) PAR(I)
   34   FORMAT(/' ',A11,' : ')
 7110   READ(*,*,ERR=7115) (AB(I,J),J=1,2)
	GO TO 6060
 7115   WRITE(*,7116)
 7116   FORMAT(/' SEE ABOVE; PLEASE ENTER TWO REAL NUMBERS: ')
	GO TO 7110
 6060   CONTINUE
      IF(NOFIX .GT. 0) THEN
     	  WRITE(*,4836)
 4836   FORMAT(/' ENTER THE VALUE FOR EACH FIXED PARAMETER: ')
        DO 4855 I=1,NOFIX
	  WRITE(*,34) PARFIX(I)
 4840   READ(*,*,ERR=4845) VALFIX(I)
        GO TO 4855
 4845   WRITE(*,4841)
 4841   FORMAT(/' SEE ABOVE; ENTER A POSITIVE VALUE: ')
	  GO TO 4840
 4855   CONTINUE
      ENDIF
      IF(NRANFIX .GT. 0) THEN
     	  WRITE(*,5836)
 5836   FORMAT(/' ENTER THE INITIAL EST. FOR EACH RANFIX PARAMETER: ')
        DO 5855 I=1,NRANFIX
        WRITE(*,34) PARRANFIX(I)
 5840   READ(*,*,ERR=5845) RANFIXEST(I)
        GO TO 5855
 5845   WRITE(*,4841)
        GO TO 5840
 5855   CONTINUE
      ENDIF
	IF(IPB .EQ. 1) GO TO 7220
 7210   CONTINUE
 7220   CONTINUE
	ENDIF
      CALL WRITEINFILE(7,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
	CALL SYSTEM(ClearScreen)
	WRITE(*,2112)
 2112   FORMAT(/' YOU HAVE CHOSEN TO MODEL THE ASSAY ERROR FUNCTION,'/
     1' S.D. AS FOLLOWS (ASSUMING SD1 = C0+C1*Y+C2*Y**2+C3*Y**3):')
     	IF(IERRMOD .EQ. 1) WRITE(*,2113)
     	IF(IERRMOD .EQ. 2) WRITE(*,2114) GAMLAM0
     	IF(IERRMOD .EQ. 3) WRITE(*,2116) GAMLAM0
     	IF(IERRMOD .EQ. 4) WRITE(*,2117) GAMLAM0
 2113   FORMAT(/' S.D. = SD1')
 2114   FORMAT(/' S.D. = GAMMA*SD1, WITH GAMMA TO BE ESTIMATED, AND'/
     1'                  THE INITIAL GAMMA ESTIMATE TO BE ',G16.10)
 2116   FORMAT(/' S.D. = SQRT(SD1**2 + LAMBDA**2), WITH LAMBDA TO BE EST
     1IMATED'/
     2'                  AND THE INITIAL LAMBDA ESTIMATE TO BE ',G16.10)
 2117   FORMAT(/' S.D. = GAMMA, WITH GAMMA TO BE ESTIMATED, AND'/
     1'                  THE INITIAL GAMMA ESTIMATE TO BE ',G16.10)
	IF(IERRMOD .EQ. 4) THEN
	 WRITE(*,218)
  218    FORMAT(/' NOTE THAT THIS RUN WILL NOT USE THE ASSAY'/
     1' COEFFICIENTS IN YOUR PATIENT DATA FILES, BUT ANY PATIENT DATA'/
     2' FILES WITHOUT ASSAY COEFFICIENTS WILL HAVE A "1" PLACED IN '/
     3' EACH ASSAY COEFFICIENT LOCATION (AS A PLACEHOLDER).')
	ENDIF
	IF(IERRMOD .LT. 4) THEN
	WRITE(*,12) NUMEQT
   12   FORMAT(/' NOTE THAT THE GENERAL VALUES FOR [C0,C1,C2,C3] '/
     1' FOR EACH OF THE ',I2,' OUTPUT EQUATION(S), ARE SHOWN BELOW: '/)
	DO IEQ = 1,NUMEQT
	 WRITE(*,162) IEQ,C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	 IAS = IASS(IEQ)
	 IF(IAS .EQ. 1) WRITE(*,419)
	 IF(IAS .EQ. 2) WRITE(*,519)
	 IF(IAS .EQ. 4) WRITE(*,619)
	 IF(IAS .EQ. 3 .AND. IALLPAT(IEQ) .EQ. 0) WRITE(*,819)
     1   ASSMULT(IEQ),ASSMULT(IEQ)
	END DO
  162   FORMAT(' EQ. ',I2,': ',4(G16.10,1X))
  419   FORMAT(/' EACH PATIENT WILL BE ASSIGNED THE ASSAY COEFFICIENTS'/
     1' IN HIS/HER DATA FILE; IF THERE ARE NO COEFFICIENTS IN THE DATA'/
     2' FILE, THE PATIENT WILL BE ASSIGNED THE ABOVE GENERAL VALUES.'/)
  519   FORMAT(/' EACH PATIENT WILL BE ASSIGNED THE ABOVE GENERAL'/
     1' ASSAY COEFFICIENTS (I.E., INDIVIDUAL ASSAY COEFFICIENTS IN ANY'/
     2' WORKING COPY PATIENT DATA FILE WILL BE OVERWRITTEN BY THE '/
     3' ABOVE VALUES.)'/)
  619   FORMAT(/' YOU WILL BE PROMPTED TO ENTER ASSAY COEFFICIENTS '/
     1' ON A PATIENT - BY - PATIENT BASIS (YOU MAY CHOOSE THE ABOVE'/
     2' GENERAL VALUES, COEFFICIENTS ALREADY IN THE PATIENT DATA'/
     3' FILE - IF ANY, OR ANY OTHER DESIRED SET). '/)
  819   FORMAT(/' YOU WILL BE PROMPTED TO ENTER ASSAY COEFFICIENTS '/
     1' ON A PATIENT - BY - PATIENT BASIS. YOU MAY CHOOSE TO HAVE '/
     2' THE CURRENT COEFFICIENTS (OR THE GENERAL VALUES FOR THOSE '/
     3' FILES WHICH HAVE NO COEFFICIENTS) MULTIPLIED BY ',G12.6
     4/
     3' TO LEAVE THEM UNCHANGED, OR TO SELECT A NEW SET OF VALUES.'//
     4' AT ANY POINT DURING THE PATIENT - BY - PATIENT ASSIGNMENT, YOU'/
     5' WILL BE ABLE TO HAVE THE COEFFICIENTS IN THE REMAINING PATIENT'/
     6' FILES MULTIPLIED BY ',G12.6,' AUTOMATICALLY.'///
     7' *******************  CAUTION  **********************************
     8***'//
     8' IF YOU HAVE ALREADY MULTIPLIED THE ASSAY COEFFICIENTS IN YOUR '/
     9' WORKING COPY FILES BY A CONSTANT FROM A PREVIOUS RUNNING OF THIS
     1 '/
     1' PROGRAM, SELECT  0  HERE TO CHANGE OPTIONS, AND THEN SELECT  1'/
     2' WHICH MEANS THAT EACH SUBJECT WILL BE ASSIGNED THE ASSAY '/
     3' COEFFICIENTS WHICH ARE CURRENTLY IN ITS FILE.'//
     7' *******************  CAUTION  **********************************
     8***')
	ENDIF
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
	CALL SYSTEM(ClearScreen)
 1110   WRITE(*,118)
  118 FORMAT(//' SELECT HOW YOU WOULD LIKE TO MODEL THE ASSAY ERROR'/
     1' FUNCTION, S.D. ASSUME SD1 = C0+C1*Y+C2*Y**2+C3*Y**3; THEN ...'//
     2' ENTER 1 IF S.D. = SD1;'/
     3' ENTER 2 IF S.D. = GAMMA*SD1, WITH GAMMA TO BE ESTIMATED;'/
     4' ENTER 3 IF S.D. = SQRT(SD1**2 + LAMBDA**2), WITH LAMBDA TO BE ES
     5TIMATED;'/
     6' ENTER 4 IF S.D. = GAMMA, WITH GAMMA TO BE ESTIMATED: ')
	READ(*,*,ERR=1110) IERRMOD
	IF(IERRMOD .LT. 1 .OR. IERRMOD .GT. 4) GO TO 1110
	IF(IERRMOD .GE. 2) THEN
	 ESTNAM = ' GAMMA'
	 IF(IERRMOD .EQ. 3) ESTNAM = 'LAMBDA'
  220	 WRITE(*,219) ESTNAM
  219    FORMAT(/' ENTER 1 TO START WITH AN INITIAL ESTIMATE OF 1 FOR ',
     1A6,';'/
     2' ENTER 0 TO ENTER A DIFFERENT INITIAL ESTIMATE FOR ',A6,': ')
	 READ(*,*,ERR=220) IGG
	 IF(IGG .NE. 1 .AND. IGG .NE. 0) GO TO 220
	 IF(IGG .EQ. 1) GAMLAM0 = 1.D0
	 IF(IGG .EQ. 0) THEN
  225     WRITE(*,223) ESTNAM
  223     FORMAT(/' ENTER THE INITIAL ESTIMATE FOR ',A6,' (A POSITIVE NO
     1.): ')
	  READ(*,*,ERR=220) GAMLAM0
	  IF(GAMLAM0 .LE. 0.D0) GO TO 225
	 ENDIF
	ENDIF
	IF(IERRMOD .EQ. 4) THEN
	 DO KK = 1,NUMEQT
	  IASS(KK) = 1
	  C0P(KK) = 1.D0
	  C1P(KK) = 1.D0
	  C2P(KK) = 1.D0
	  C3P(KK) = 1.D0
	 END DO
	 WRITE(*,218)
	 GO TO 4150
	ENDIF
      CALL SYSTEM(ClearScreen)
      WRITE(*,119)
  119 FORMAT(//' NOW SELECT HOW TO ESTABLISH THE COEFFICIENTS FOR'/
     1' SD1 = C0 + C1*Y + C2*Y**2 + C3*Y**3.'//
     3' FOR EACH OF THE OUTPUT EQUATION(S), SELECT ONE OF THE FOLLOWING'
     4/
     5' OPTIONS FOR THE ASSAY COEFFICIENTS [C0,C1,C2,C3]: '//
     4' ENTER 1 FOR THE DEFAULT OPTION ...'/
     5'         FOR EACH PATIENT, IF THE DATA FILE ALREADY INCLUDES ASSA
     6Y'/
     7'         COEFFICIENTS, THOSE COEFFICIENTS WILL BE USED. OTHERWISE
     8 THE'/
     9'		COEFFICIENTS YOU ENTER BELOW WILL BE USED; '//
     8' ENTER 2 IF YOU WOULD LIKE THE ASSAY COEFFICIENTS YOU ENTER BELOW
     1 TO BE'/
     2'         USED FOR ALL PATIENTS, EVEN FOR THOSE WHOSE DATA FILES A
     3LREADY'/
     4'		INCLUDE COEFFICIENTS;'//
     2' ENTER 3 IF YOU WOULD LIKE THE ASSAY COEFFICIENTS ALREADY IN SOME
     3 OR ALL'/
     4'         OF THE PATIENT DATA FILES (OR THE GENERAL VALUES YOU ENT
     5ER BELOW)'/
     6'         TO BE MULTIPLIED BY A GIVEN CONSTANT;'//
     7' ENTER 4 IF YOU WOULD LIKE TO BE PROMPTED SO YOU MAY CHOOSE THE A
     8SSAY'/
     9'         COEFFICIENTS ON A PATIENT - BY - PATIENT BASIS. YOU MAY
     1CHOOSE'/
     2'         GENERAL VALUES (WHICH YOU WILL ENTER BELOW), COEFFICIENT
     3S ALREADY'/
     4'         IN THE PATIENT DATA FILE, IF ANY, OR ANY OTHER SET OF CO
     5EFFICIENTS. ')
	DO 2200 IEQ = 1,NUMEQT
 1120   WRITE(*,221) IEQ
  221   FORMAT(/' FOR OUTPUT EQUATION ',I1,':'//
     4' ENTER 1 FOR THE DEFAULT OPTION;'//
     8' ENTER 2 IF YOU WOULD LIKE THE ASSAY COEFFICIENTS YOU ENTER '/
     9' 	BELOW TO BE USED FOR ALL PATIENTS;'//
     1' ENTER 3 IF YOU WANT THE COEFFICIENTS IN SOME OR ALL OF YOUR '/
     2'		FILES MULITPLIED BY A SPECIFIED CONSTANT;'//
     7' ENTER 4 TO BE PROMPTED: ')
	READ(*,*,ERR=1120) IAS
	IF(IAS .LT. 1 .OR. IAS .GT. 4) GO TO 1120
	IASS(IEQ) = IAS
 2140   WRITE(*,2141) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
 2141   FORMAT(/' ENTER 1 TO LEAVE THE GENERAL VALUES FOR [C0,C1,C2,C3]
     1UNCHANGED; '/
     2' 	THEY ARE CURRENTLY:'/
     3'	        ',4(G12.6,1X)//
     2' ENTER 0 TO CHANGE THESE GENERAL VALUES: ')
	READ(*,*,ERR=2140) ICHCS
	IF(ICHCS .NE. 0 .AND. ICHCS .NE. 1) GO TO 2140
	IF(ICHCS .EQ. 1) GO TO 2120
	WRITE(*,1119) IEQ
 1119   FORMAT(/' ENTER THE GENERAL VALUES FOR [C0,C1,C2,C3] FOR '/
     1' OUTPUT EQUATION ',I1,'. THESE ')
	IF(IAS .EQ. 1) WRITE(*,1121)
	IF(IAS .EQ. 2) WRITE(*,1122)
	IF(IAS .EQ. 4 .OR. IAS .EQ. 3) WRITE(*,1123)
 1121   FORMAT(' WILL BE USED FOR ALL PATIENTS WHOSE DATA FILES DO '/
     1' NOT ALREADY INCLUDE ASSAY COEFFICIENTS: ')
 1122   FORMAT(' WILL BE USED FOR ALL PATIENTS: ')
 1123   FORMAT(' WILL BE USED FOR THOSE PATIENTS YOU SELECT BELOW: ')
 4140   READ(*,*,ERR=4145) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
   	GO TO 2120
 4145   WRITE(*,4146)
 4146   FORMAT(/' SEE ABOVE; PLEASE ENTER FOUR REAL NUMBERS: ')
	GO TO 4140
 2120	IF(IAS .EQ. 3) THEN
	 IALLPAT(IEQ) = 0
 4260	 WRITE(*,4148)
 4148    FORMAT(/' ENTER THE ASSAY COEFFICIENT MULTIPLIER TO BE USED'/
     1' FOR THOSE PATIENTS YOU SELECT BELOW: ')
	 READ(*,*,ERR = 4260) ASSMULT(IEQ)
	ENDIF
 2200   CONTINUE
        WRITE(*,2119)
 2119   FORMAT(//' NOTE: DURING THIS RUN, EACH SUBJECT WILL HAVE '/
     1'       HIS/HER ASSAY COEFFICIENTS WRITTEN TO THE END OF HIS/HER'/
     2'       WORKING COPY PATIENT FILE. IF COEFFICIENTS ARE ALREADY '/
     3'       THERE FROM A PREVIOUS RUN, THEY WILL BE OVERWRITTEN.'//)
	ENDIF
      CALL WRITEINFILE(7,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
 4150   WRITE(*,112) NDRUG
  112   FORMAT(/' THE ACTIVE (SALT) FRACTION OF EACH OF THE ',I1,' DRUG(
     1S) FOLLOWS.')
        DO I = 1,NDRUG
         WRITE(*,113) I,AF(I)
  113    FORMAT(' AF FOR DRUG ',I1,' IS ',G12.6)
        END DO
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
5150   WRITE(*,129)
  129   FORMAT(//' ENTER THE ACTIVE (SALT) FRACTION OF EACH DRUG. AS '/
     1' AN EXAMPLE, THE A.F. OF THEOPHYLLINE IS 1.0, WHILE THAT OF'/
     2' AMINOPHYLLINE IS TYPICALLY BETWEEN .79 AND .85, DEPENDING ON'/
     3' THE PREPARATION. '//
     4' EACH AF MUST BE A POSITIVE NUMBER LESS THAN OR EQUAL TO 1.0.'/)
        DO I = 1,NDRUG
         WRITE(*,1129) I
 1129    FORMAT(' AF FOR DRUG ',I1,': ')
         READ(*,*,ERR=5150) AF(I)
         IF(AF(I) .LE. 0.0 .OR. AF(I) .GT. 1.0) GO TO 5150
        END DO
	ENDIF
	IF(NVAR .EQ. 1 .OR. NVAR .EQ. 2) INDSUG=1
	IF(NVAR .EQ. 3) INDSUG=3
	IF(NVAR .EQ. 4) INDSUG=4
	IF(NVAR .EQ. 5) INDSUG=6
	IF(NVAR .GE. 6) INDSUG=7
	WRITE(*,6063) NVAR,INDSUG
 6063   FORMAT(//' *****************     WARNING    *****************'//
     1' YOU HAVE SELECTED ',I2,' PARAMETERS FOR THIS RUN.'/
     1' IT IS LIKELY THAT YOU WILL NEED AT LEAST AN INDEX OF GRID'/
     2' POINTS EQUAL TO  ',I1,'  TO ANALYZE YOUR DATA ADEQUATELY. A '/
     3' SMALLER INDEX MAY LEAD TO SIGNIFICANTLY POORER ESTIMATIONS.'/
     4' THE DISADVANTAGE TO MORE POINTS, OF COURSE, IS THAT THE '/
     5' PROGRAM TAKES PROPORTIONATELY LONGER TO RUN, BUT ONLY IN THE'/
     6' EARLY CYCLES UNTIL IT HAS DISCARDED UNNEEDED POINTS.'//
     4' *****************     WARNING    *****************'//)
	IF(INDPTS .LE. 6) WRITE(*,6061) INDPTS
 6061   FORMAT(/' THE INDEX OF THE NO. OF GRID POINTS IS ',I3)
	IF(INDPTS .GT. 6) WRITE(*,6066) INDPTS - 100
 6066    FORMAT(/' THE INDEX OF THE NO. OF GRID POINTS IS 7.'/
     1'  IN PARTICULAR, YOU HAVE CHOSEN ',I4,' MULTIPLES OF'/
     1'  80021 GRID POINTS FOR YOUR RUN.')
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
 6670   WRITE(*,6062)
 6062   FORMAT(/' ENTER THE INDEX FOR THE NO. OF GRID POINTS DESIRED.'/
     1' ENTER 1,2,3,4,5,6 OR 7, RESPECTIVELY, FOR, 2129, 5003, 10007,'/
     2' 20011, 40009, 80021, OR MULTIPLES OF 80021 POINTS: ')
 6065   READ(*,*,ERR=6670) INDPTS
	IF(INDPTS .LT. 1 .OR. INDPTS .GT. 7) GO TO 6670
	IF(INDPTS .EQ. 7) THEN
 6075	 WRITE(*,6064)
 6064    FORMAT(/' ENTER 2, 3, ... FOR THE NO. OF MULTIPLES OF '/
     1' 80021 GRID POINTS YOU WOULD LIKE: ')
	 READ(*,*,ERR=6075) MULT
	 IF(MULT .LT. 1) GO TO 6075
	 INDPTS = 100+MULT
	ENDIF
	ENDIF
	IF(MAXCYC .EQ. 0) WRITE(*,133)
  133   FORMAT(/' YOU HAVE CHOSEN THE MAX. NO. OF CYCLES TO BE 0.'/
     1' THIS MEANS THAT THE "engine" WILL DO NO CYCLE CALCULATIONS, '/
     2' BUT INSTEAD MOVE DIRECTLY TO THE END-OF-ANALYSIS SECTION TO '/
     3' CALCULATE VALUES NEEDED TO GIVE THE BAYESIAN POSTERIOR RESULTS'/
     4' FOR WHATEVER PATIENT DATA SET YOU CHOOSE, BASED ON THE PRIOR '/
     5' DENSITY YOU SELECT BELOW. THESE RESULTS CAN BE VIEWED BY '/
     6' RERUNNING THIS PROGRAM AND INPUTTING THE OUTPUT FILE FROM '/
     7' THE "engine". THIS IS SOMETIMES CALLED PROSPECTIVE ANALYSIS.')
	IF(MAXCYC .GT. 0) WRITE(*,13) MAXCYC,TOLC
   13   FORMAT(/' THE MAX NO. OF CYCLES IS ',I5//
     1' AND TOLC IS ',F20.17)
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
 4160 	WRITE(*,123)
  123   FORMAT(/' ENTER THE MAX. NO. OF CYCLES DESIRED (LESS THAN OR'/
     1' EQUAL TO 9997)'//
     2' NOTE THAT IF YOU ENTER 0, IT MEANS THAT THE "engine" WILL DO'/
     3' NO CYCLE CALCULATIONS, BUT INSTEAD MOVE DIRECTLY TO THE '/
     4' END-OF-ANALYSIS SECTION TO CALCULATE VALUES NEEDED TO GIVE '/
     5' THE BAYESIAN POSTERIOR RESULTS FOR WHATEVER PATIENT DATA SET'/
     6' YOU CHOOSE, BASED ON THE PRIOR DENSITY YOU SELECT BELOW.'/
     7' THESE RESULTS CAN BE VIEWED BY RERUNNING THIS PROGRAM AND'/
     8' INPUTTING THE OUTPUT FILE FROM THE "engine". THIS IS'/
     9' SOMETIMES CALLED PROSPECTIVE ANALYSIS.'//
     1' ENTER THE MAX. NO. OF CYCLES NOW: ')
        READ(*,*,ERR=4160) MAXCYC
	IF(MAXCYC .LT. 0 .OR. MAXCYC .GT. 9997) GO TO 4160
      TOLC = .01D0
	IF(MAXCYC .GT. 0) THEN
         JSTOP = 3
 1250    WRITE(*,1247)
 1247    FORMAT(/' NOTE THAT THE ANALYSIS WILL STOP BEFORE THE MAX.'/
     1' NO. OF CYCLES HAVE BEEN RUN IF CONVERGENCE IS ACHIEVED, AND'/
     2' CONVERGENCE IS ACHIEVED BASED ON LOGIC AND PRE-SET TOLERANCE'/
     3' PARAMETERS WHICH ARE APPROPRIATE FOR THE "INTERIOR POINT'/
     4' ALGORITHM" USED BY THIS PROGRAM. THIS ALGORITM WAS DEVELOPED'/
     5' BY JIM BURKE AT THE UNIVERSITY OF WASHINGTON, AND ADAPTED FOR'/
     6' THIS PROGRAM BY BOB LEARY.'//
     1' BUT YOU MAY SET THE TOLERANCE PARAMETER, TOLC. THE NPAG '/
     2' ANALYSIS WILL BE CONVERGE IF THE LOG-LIK BETWEEN 2 CONSECUTIVE'/
     3' "MAJOR CYCLES" IS LESS THAN OR EQUAL TO TOLC.'//
     4' ENTER A POSITIVE VALUE FOR TOLC NOW; .01 IS A TYPICAL VALUE: ')
         READ(*,*,ERR= 1250) TOLC
         IF(TOLC .LE. 0.D0) GO TO 1250
	ENDIF
	ENDIF
      CALL WRITEINFILE(7,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
      ICENT = 2
      WRITE(*,2021) NSUB, IDELTA
 2021   FORMAT(/' ',I4,' INPUT TABLES (ONE FOR EACH SUBJECT) WILL BE'/
     1' CREATED FOR AN "EFFECTS" MODEL. '//
     2' EACH TABLE WILL GIVE THE PREDICTED CONCENTRATIONS OF THE DRUG'/
     3' FOR A GIVEN SUBJECT, ASSUMING PARAMETER VALUES EQUAL TO THE'/
     4' MEANS OF THE BAYESIAN POSTERIOR DISTRIBUTION FOR THAT SUBJECT,'/
     5' AT MULTIPLES OF ',I3,' MINUTES UNTIL THE ENDING TIME IS '/
     6' REACHED. THIS WILL BE REPEATED FOR BOTH THE MEDIANS AND THE'/
     7' MODES OF THE BAYESIAN POSTERIOR DISTRIBUTION FOR EACH SUBJECT.'/
     8)
	WRITE(*,2022) AUCINT,XMIC
 2022   FORMAT(/' IN ADDITION, AUC (AREA UNDER THE CURVE) AND AUC/MIC '/
     1' WILL BE CALCULATED FOR EACH ',F6.2,' HOUR PERIOD, AND FOR THE'/
     2' TOTAL TIME PERIOD, WHERE MIC = ',G12.6//)
	CALL CHANGE(ICHANG)
	IF(ICHANG .EQ. 0) THEN
	WRITE(*,2011) NSUB
 2011   FORMAT(/' ',I4,' TABLES OF PREDICTED CONCENTRATIONS, ONE FOR'/
     1' EACH SUBJECT, WILL BE GENERATED TO BE USED AS INPUTS FOR AN'/
     2' "EFFECTS" MODEL.'//
     2' EACH TABLE WILL GIVE THE PREDICTED CONCENTRATIONS OF THE DRUG'/
     3' FOR A GIVEN SUBJECT, ASSUMING PARAMETER VALUES EQUAL TO THE  '/
     4' MEANS OF THE BAYESIAN POSTERIOR DISTRIBUTION OF THAT SUBJECT.'
     5/
     6' THIS WILL BE REPEATED FOR BOTH THE MEDIANS AND THE MODES OF'/
     7' THE BAYESIAN POSTERIOR DISTRIBUTION FOR EACH SUBJECT.'//
     8' THE PREDICTED CONCENTRATIONS WILL BE AT THE TIMES YOU SELECT'/
     9' BELOW. IN ADDITION, AUC (AREA UNDER THE CURVE) AND AUC/MIC'/
     1' WILL BE CALCULATED FOR EACH USER SELECTED INTERVAL, AND FOR'/
     2' THE TOTAL TIME PERIOD.'//)
 2015   WRITE(*,2013)
 2013   FORMAT(/' ENTER THE TIME INTERVAL (IN MINUTES) BETWEEN'/
     1' PREDICTED CONCENTRATIONS. THIS VALUE MUST BE 2, 4, 6, OR 12:  ')
	READ(*,*,ERR=2015) IDELTA
	IF(IDELTA .NE. 2 .AND. IDELTA .NE. 4 .AND. IDELTA .NE. 6
     1  .AND. IDELTA .NE. 12) GO TO 2015
        WRITE(*,2014) NSUBTOT
 2014   FORMAT(/' THE ENDING TIME (IN HOURS), FOR THE PREDICTED'/
     1' CONCENTRATIONS WILL BE 24 HOURS AFTER THE LAST OBSERVATION'/
     2' TIME AMONG ALL ',I4,' SUBJECTS.')
 2025   WRITE(*,2016)
 2016   FORMAT(/' THE DEFAULT FOR THE MIC (MINIMUM INHIBITORY '/
     1' CONCENTRATION) IS 1.0; '/
     2' ENTER 1 FOR THIS DEFAULT VALUE;'/
     3' ENTER 0 TO ENTER A DIFFERENT VALUE: ')
	READ(*,*,ERR=2025) IXMIC
	IF(IXMIC .NE. 1 .AND. IXMIC .NE. 0) GO TO 2025
	IF(IXMIC .EQ. 1) XMIC = 1.D0
	IF(IXMIC .EQ. 0) THEN
 2030	 WRITE(*,2023)
 2023    FORMAT(/' ENTER THE MIC (IT MUST BE A POSITIVE NUMBER):  ')
	 READ(*,*,ERR=2030) XMIC
	 IF(XMIC .LE. 0.D0) GO TO 2030
	ENDIF
 3025   WRITE(*,3016)
 3016   FORMAT(/' THE AUC (AREA UNDER THE CURVE) AND AUC/MIC WILL BE'/
     9' CALCULATED OVER EACH AUCINT-HOUR INTERVAL, AND FOR THE TOTAL '/
     1' TIME PERIOD.'//
     2' ENTER 1 FOR THE DEFAULT VALUE FOR AUCINT OF 24 HOURS;'/
     3' ENTER 0 TO ENTER A DIFFERENT VALUE FOR AUCINT: ')
	READ(*,*,ERR=3025) IAUCINT
	IF(IAUCINT .NE. 1 .AND. IAUCINT .NE. 0) GO TO 3025
	IF(IAUCINT .EQ. 1) AUCINT = 24.D0
	IF(IAUCINT .EQ. 0) THEN
 3030	 WRITE(*,3023)
 3023    FORMAT(/' ENTER THE DESIRED VALUE FOR AUCINT (IN HOURS):  ')
	 READ(*,*,ERR=3030) AUCINT
	 IF(AUCINT .LE. 0.D0) GO TO 3030
	ENDIF
	ENDIF
        IF(INPRI .EQ. 1) WRITE(*,7182)
 7182   FORMAT(/' THE APRIORI DENSITY FOR YOUR RUN IS UNIFORM.')
        IF(INPRI .EQ. 0) WRITE(*,7183) PRIFIL2
 7183   FORMAT(/' THE APRIORI DENSITY FOR YOUR RUN IS FROM THE '/
     1' DENSITY FILE, ',A20)
      CALL CHANGE(ICHANG)
      IF(ICHANG .EQ. 0) THEN
        WRITE(*,4311) NVAR
 4311   FORMAT(///' THE APRIORI DENSITY IS DEFINED ON A ',I1,'  ' /
     1' DIMENSIONAL GRID BOUNDED BY THE LIMITS ENTERED ABOVE.'//
     2' ENTER 1 IF A UNIFORM PRIOR IS DESIRED;'/
     3' ENTER 0 IF A SPECIFIED PRIOR IS TO BE READ IN FROM A '/
     4'         USER-SUPPLIED FILE OF DENSITY VALUES '/
     5'         FROM THE OUTPUT OF A PREVIOUS RUN.'//
     6' (CAUTION: BEFORE USING A PREVIOUS JOINT DENSITY, THE USER'/
     7' SHOULD VERIFY THAT IT WAS DEFINED FOR THE SAME NO. OF GRID'/
     8' POINTS, AND FOR THE SAME PARAMETERS AND RANGES AS ENTERED'/
     9' ABOVE FOR THIS RUN):  ')
 4315   READ(*,*,ERR=4320) INPRI
        GO TO 4325
 4320   WRITE(*,4035)
 4035   FORMAT(/' SEE ABOVE; PLEASE ENTER 0 OR 1: ')
        GO TO 4315
 4325   IF (INPRI .NE. 0 .AND. INPRI .NE. 1) THEN
	   WRITE(*,138)
  138   FORMAT(/' PLEASE ENTER ONE OF THE REQUESTED VALUES: ')
	   GO TO 4315
	ENDIF
      IF(INPRI .EQ. 0) THEN
 4340	WRITE(*,4341)
 4341   FORMAT(/' ENTER THE NAME OF THE FILE HAVING THE '/
     1' DENSITY VALUES FROM THE END OF A PREVIOUS RUN (THIS'/
     2' FILE ALSO HAS ASSOCIATED INSTRUCTIONS); ')
       WRITE(*,*)' ENTER -99 TO SEE ALL OR A PART OF YOUR DIRECTORY: '
       READ(*,102) PRIFIL2
       IF(PRIFIL2(1:3) .EQ. '-99') THEN
       CALL SEEDIR(PATH,NOB,PRIFIL2,OSName,ListDir)
      ENDIF
      ENDIF
      ENDIF
      CALL WRITEINFILE(7,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
 5005   WRITE(*,5001)
 5001   FORMAT(///' ENTER 1 IF ALL INSTRUCTIONS ARE NOW CORRECT;'/
     2' ENTER 0 OTHERWISE: ')
        READ(*,*,ERR=5005) ICHANG
	IF(ICHANG .NE. 0 .AND. ICHANG .NE. 1) GO TO 5005
	IF(ICHANG .EQ. 0) GO TO 5020
	RETURN
	END
	SUBROUTINE CHANGE(ICHANG)
   10   WRITE(*,1)
    1   FORMAT(//' ENTER 1 IF THE ABOVE INFORMATION IS CORRECT;'/
     1' ENTER 0 IF IT SHOULD BE CHANGED: ')
	READ(*,*,ERR=10) ICHANG
	IF(ICHANG .NE. 0 .AND. ICHANG .NE. 1) GO TO 10
	RETURN
	END
        SUBROUTINE FORMLC(PATH,NGRID,NACTVE,VOLSPA,MAXGRD,MAXDIM,CORDEN,
     1  WORK,ICAT,NVAR,PAR,NOFIX,PARFIX,VALFIX,AF,IVER,NDRUG,NRANFIX,
     2  PARRANFIX,RANFIXEST)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION CORDEN(MAXGRD,MAXDIM+1),WORK(MAXGRD),PCAT(21),
     1  VALFIX(20),AF(7),RANFIXEST(20)
	INTEGER ICAT(MAXGRD),NPTCAT(21)
	CHARACTER PAR(30)*11,PARFIX(20)*11,PREFIX*8,PATH*60,
     1  TMPFILE*13,PATHFILE*73,READLINE*1000,DRUG*20,
     2  YOURNAME*20,PARRANFIX(20)*11
	CHARACTER*10 DATDAY,TIMDAY,ZONEDAY
	INTEGER IDTDAY(10)
	FACT=VOLSPA/NGRID
	DO I=1,NACTVE
	 WORK(I)=CORDEN(I,NVAR+1)*FACT
	END DO
	DO I=1,NACTVE
	 ICAT(I)=0
	END DO
	DO IC=1,21
	 PCAT(IC)=0.D0
	 NPTCAT(IC)=0
	END DO
	DO 100 I=1,NACTVE
	W=WORK(I)
	 DO IC=1,20
	  IF(W .GT. 10.D0**(-IC) .AND. W .LE. 10.D0**(1-IC)) THEN
	   ICAT(I)=IC
	   PCAT(IC)=PCAT(IC)+W
	   NPTCAT(IC)=NPTCAT(IC)+1
	   GO TO 100
	  ENDIF
	 END DO
	 ICAT(I)=21
	 PCAT(21)=PCAT(21)+W
	 NPTCAT(21)=NPTCAT(21)+1
  100   CONTINUE
  150   WRITE(*,1)
    1   FORMAT(///' THE FOLLOWING TABLE SUMMARIZES, FOR THE FINAL'/
     1' DENSITY, THE NO. OF GRID POINTS WHICH HAVE ASSOCIATED DISCRETE'/
     2' PROBABILITIES IN EACH OF THE RANGES INDICATED. ALSO,'/
     3' CUMULATIVE VALUES ARE SHOWN: ')
	WRITE(*,2)
    2   FORMAT(//' CAT     PROB.  RANGE   NO. PTS  CUM NO. PTS  PROB(CAT
     1) CUM PROB OF PTS.')
	NPTCUM=0
	CURLOW=1.D0
	CURHI =1.D1
	CUMPRB=0.D0
	DO IC=1,21
	 CURLOW=CURLOW/10.D0
	 IF(IC .EQ. 21) CURLOW=0.D0
	 CURHI =CURHI/10.D0
	 NPTCUM=NPTCUM+NPTCAT(IC)
	 CUMPRB=CUMPRB+PCAT(IC)
	 WRITE(*,3) IC,CURLOW,CURHI,NPTCAT(IC),NPTCUM,PCAT(IC),CUMPRB
	END DO
    3   FORMAT(1X,I2,2X,'(',G7.1,',',G8.1,']',1X,I5,5X,I5,7X,G12.6,3X,
     1  G12.6)
  220 	WRITE(*,221)
  221   FORMAT(/' ENTER 1 TO CREATE A FILE WITH THE ABOVE GRID POINT'/
     1'		AND PROBABILITY INFORMATION, ALONG WITH RELATED'/
     2'		STATISTICS FROM THE FINAL POPULATION JOINT DENSITY.'/
     3'		THIS FILE CAN BE INPUT TO THE     BIGMM     PROGRAM. '/
     2' ENTER 0 OTHERWISE: ')
	READ(*,*,ERR=220) IWRITE
	IF(IWRITE .NE. 1 .AND. IWRITE .NE. 0) GO TO 220
	IF(IWRITE .EQ. 0) RETURN
  110   WRITE(*,4)
    4   FORMAT(//' ENTER THE CUT-OFF CATEGORY. ALL POINTS AND THEIR'/
     1' ASSOCIATED DISCRETE PROBABILITIES IN CATEGORIES 1 DOWN TO'/
     2' THIS CATEGORY WILL BE OUTPUT INTO A FILE BELOW.'//
     4' ENTER AN INTEGER FROM 1 TO 21;'//
     5' ENTER 0 TO SEE THE SUMMARY TABLE AGAIN: ')
	READ(*,*,ERR=110) ICUT
	IF(ICUT .LT. 0 .OR. ICUT .GT. 21) GO TO 110
	IF(ICUT .EQ. 0) GO TO 150
  300	WRITE(*,6)
    6   FORMAT(//' ENTER THE PREFIX NAME OF THE FILE TO HOLD THE '/
     1' INFORMATION INDICATED ABOVE (THE EXTENSION WILL BE ".MM"): ')
	READ(*,77) PREFIX
   77   FORMAT(A8)
	DO IA = 1,8
	 IF(PREFIX(IA:IA) .EQ. '.') THEN
	  WRITE(*,76)
   76     FORMAT(/' PLEASE ENTER YOUR FILE PREFIX WITH NO DOTS (".") ')
	  GO TO 300
	 ENDIF
	END DO
	TMPFILE = ' '
	TMPFILE = PREFIX//'.MM'
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(32,FILE=PATHFILE,ERR=310,STATUS='NEW')
	GO TO 315
  310   WRITE(*,9826) PATHFILE
 9826   FORMAT(/' THE FOLLOWING FILE ALREADY EXISTS ....'/
     1'    ',A73/
     1' ENTER 0 TO ENTER A NEW FILENAME;'/
     2' ENTER 1 TO OVERWRITE THIS FILE: ')
	READ(*,*,ERR=310) IFILE
	IF(IFILE .NE. 0 .AND. IFILE .NE. 1) GO TO 310
	IF(IFILE .EQ. 0) GO TO 300
	IF(IFILE .EQ. 1) OPEN(32,FILE=PATHFILE)
  315   CONTINUE
    7   FORMAT(A20)
	WRITE(*,1316) PATHFILE
 1316   FORMAT(//' FILE  ',A73/
     1' SHOULD INCLUDE YOUR NAME, AND THE NAME OF THE DRUG ANALYZED IN'/
     2' THIS RUN. PLEASE ENTER THIS INFORMATION ...'//
     3' ENTER YOUR NAME: ')
	READ(*,7) YOURNAME
	WRITE(*,1317)
 1317   FORMAT(/' ENTER THE NAME OF THE DRUG: ')
	READ(*,7) DRUG
 	CALL DATE_AND_TIME(DATDAY,TIMDAY,ZONEDAY,IDTDAY)
	WRITE(32,101) DRUG,DATDAY,YOURNAME
  101   FORMAT(/'#-BEGIN-FILE-------------------------------------------
     1-----'/
     2'#'/
     3'# USCPACK for Windows population model file'/
     4'# File revision 1.0'/
     5'#'/
     6'#-BEGIN-LOCKED-SECTION--------------------------------------'/
     7'#'/
     8'# The drug modeled                  : ',A20/
     9'# Date file was generated           : ',A10/
     1'# File genererated by program       : -9.9'/
     1'# This file was made by             : ',A20/
     2'# File authorized by                : Roger Jelliffe, LAPK'/
     3'# File lock code                    : 1'/
     4'#'/
     5'#-END-LOCKED-SECTION-(    -9.9      )----------------------- ')
	WRITE(32,102)
  102   FORMAT(/'#'/
     1'# File update list'/
     2'#'/
     3'# 11/20/2001 - Andreas Botnen'/
     4'#	       Manually converted from old file'/
     5'#')
	WRITE(32,103)
  103   FORMAT(/'# START DESCRIPTION')
	IF(IVER .GE. 36) THEN
	 WRITE(32,13)
   13    FORMAT(//' FOLLOWING IS THE npagdriv.f CODE FROM THIS RUN.'//)
   11    FORMAT(A1000)
  350	 READ(47,11,IOSTAT=IEND) READLINE
	 IF(IEND .LT. 0) GO TO 400
	 WRITE(32,11) READLINE
	 GO TO 350
	ENDIF
	IF(IVER .LT. 36) WRITE(32,106)
  106   FORMAT(/'No description for this population model')
  400	WRITE(32,104)
  104   FORMAT(/'# END DESCRIPTION')
	WRITE(32,107)
  107   FORMAT(/'# The drug used in this analysis was')
	WRITE(32,7) DRUG
	WRITE(32,108)
  108   FORMAT(/'# The units to be used with this drug are'/
     1'-9.9')
	WRITE(32,109)
  109   FORMAT(/'# The molecular weight is'/
     1'-9.9')
        IF(NDRUG .EQ. -1) WRITE(32,211) AF(1)
  211   FORMAT(/' ALL DRUGS IN THE ANALYSIS HAD THE SAME AF, ',G12.6)
        IF(NDRUG .NE. -1) THEN
         WRITE(32,111) NDRUG
  111    FORMAT(/'# The active salt fraction for each of the ',I2/
     1' drug(s) follow: ')
         DO I = 1,NDRUG
          WRITE(32,*) AF(I)
         END DO
        ENDIF
	WRITE(32,112)
  112   FORMAT(/'# The bioavailability is'/
     1'-9.9')
	WRITE(32,113)
  113   FORMAT(/'# The valid routes are'/
     1'-9.9')
	WRITE(32,114)
  114   FORMAT(/'# The ranges for the central compartment (peak and trou
     1gh)'/
     2'# use the value -1 if this selection is not valid for this model'
     3/
     4'# Usual ranges (peak min, peak max, trough min, trough max)'/
     5'-9.9'/
     6'# Not to exceede ranges (peak min, peak max, trough min, trough m
     7ax)'/
     8'-9.9')
	WRITE(32,116)
  116   FORMAT(/'# The ranges for the peripheral compartment (peak and t
     1rough)'/
     2'# use the value -1 if this selection is not valid for this model'
     3/
     4'# Usual ranges (peak min, peak max, trough min, trough max)'/
     5'-9.9'/
     6'# Not to exceede ranges (peak min, peak max, trough min, trough m
     7ax)'/
     8'-9.9')
	WRITE(32,117)
  117   FORMAT(/'# The assay polynomial (as1, as2, as3, as4)'/
     1'-9.9')
	WRITE(32,118)
  118   FORMAT(/'# The process noise (wsqrt, de1, de2, de3, de4, terr)'/
     1'-9.9')
	WRITE(32,119) NVAR
  119   FORMAT(/'# The number of random parameters'/
     1I2)
	WRITE(32,121) (PAR(I),I=1,NVAR)
  121   FORMAT(/'# The random parameters used were'/
     130(A11,1X))
	WRITE(32,127)
	WRITE(32,122) NOFIX
  122   FORMAT(/'# The number of fixed parameters'/
     1I2)
	WRITE(32,123)
  123   FORMAT(/'# The fixed parameters used were')
	IF(NOFIX .GE. 1) WRITE(32,124) (PARFIX(I),I=1,NOFIX)
  124   FORMAT(30(A11,1X))
	IF(NOFIX .EQ. 0) WRITE(32, 126)
  126   FORMAT('N/A')
	WRITE(32,127)
  127   FORMAT('-9.9')
	WRITE(32,128)
  128   FORMAT(/'# The values of the fixed parameters')
	IF(NOFIX .GE. 1) WRITE(32,129) (VALFIX(I),I=1,NOFIX)
  129   FORMAT(30(G12.4,1X))
	IF(NOFIX .EQ. 0) WRITE(32,127)
	WRITE(32,1122) NRANFIX
 1122   FORMAT(/'# The number of ranfix parameters'/
     1I2)
	WRITE(32,1123)
 1123   FORMAT(/'# The ranfix parameters used were')
      IF(NRANFIX .GE. 1) WRITE(32,124) (PARRANFIX(I),I=1,NRANFIX)
	IF(NRANFIX .EQ. 0) WRITE(32,126)
	WRITE(32,127)
	WRITE(32,1128)
 1128 FORMAT(/'# The values of the ranfix parameters')
      IF(NRANFIX .GE. 1) WRITE(32,129) (RANFIXEST(I),I=1,NRANFIX)
	IF(NRANFIX .EQ. 0) WRITE(32,127)
	NOIN = 0
	DO I=1,NACTVE
	 IF(ICAT(I) .LE. ICUT) NOIN = NOIN + 1
	END DO
	WRITE(32,131) NOIN
  131   FORMAT(/'# The number of probability points'/
     1I10)
	WRITE(32,132) (PAR(I),I=1,NVAR)
  132   FORMAT(/'# The probability matrix'/
     1'  PROBABILITY',3X,30(A11,2X))
	DO I=1,NACTVE
	 IF(ICAT(I) .LE. ICUT) THEN
	  WRITE(32,18) WORK(I),(CORDEN(I,J),J=1,NVAR)
	 ENDIF
	END DO
   18   FORMAT(1X,G12.4,3X,30(G12.5,1X))
	WRITE(32,133)
  133   FORMAT(/'#-END-FILE----(       -9.9         )-------------------
     1-----'/)
     	CLOSE(32)
	RETURN
	END
	SUBROUTINE PREVRUN(PATH,NOB,MAXSUB,MAXDIM,MAXGRD,CORDEN,CORHOLD,
     1  WORK,IJUNK,PYJGX,PYJGXX,EXX,YPREDPOP,YPREDPOPT,YPREDBAY,
     2  SERNUM,MAXOBDIM,YO,IPATVEC,OSName,ClearScreen,ListDir,MAXNUMEQ)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION YO(MAXOBDIM,MAXNUMEQ),WORK(MAXGRD),PYJGX(MAXSUB,MAXGRD),
     1 AB(30,2),VALFIX(20),PYJGXX(MAXGRD),EXX(MAXSUB,3,30),
     2 IJUNK(MAXGRD),YPREDPOP(MAXSUB,MAXNUMEQ,MAXOBDIM,3),
     3 YPREDBAY(MAXSUB,MAXNUMEQ,MAXOBDIM,3),CORDEN(MAXGRD,MAXDIM+1),
     4 CORHOLD(MAXGRD,MAXDIM+1),CENTER(3,30),SERNUM(MAXSUB),
     5 COEFF(999,5),C0(MAXNUMEQ),C1(MAXNUMEQ),C2(MAXNUMEQ),C3(MAXNUMEQ),
     6 COVAL(999,26),IPATVEC(MAXSUB),AF(7),RANFIXEST(20),
     7YPREDPOPT(MAXSUB,MAXNUMEQ,7201,3),TTPRED(MAXSUB,7200),NUMT(MAXSUB)
	REAL YYPRED(150000),YYJ(150000),AMIN,AMAX,XCOV(999),YCOV(999)
      CHARACTER NUMBER(999)*3,PATFIL*20,PREFIX*5,PAR(30)*11,
     1EXT*3,PRIFIL2*20,PARFIX(20)*11,OUTFIL*20,
     3CODE*14,OUTSINGL*20,READLINE*1000,MNAME*7,OPT7FIL*20,
     4PATH*60,TMPFILE*13,PATHFILE*73,
     5XLABEL*20,YLABEL*20,XLABEL2*10,YLABEL2*10,OUTOPT8*20,DESCR(26)*20,
     6READLIN1*1000,BLOCKPAT*20,READLIN2*78,
     7OSName*20,ClearScreen*6,ListDir*10,PARRANFIX(20)*11
	CHARACTER*10 DATDAY,TIMDAY,ZONEDAY,ERRFIL*20
	INTEGER IDTDAY(10)
	COMMON/TOBLK/NUMBER
	COMMON/TOSCAT/MAXSER,MINSER,SERMEN,SERSD,COEFF
      COMMON/ERROR/ERRFIL
    1   FORMAT(A20)
  170   WRITE(*,5321)
 5321   FORMAT(//' ENTER THE NAME OF THE OUTPUT FILE FROM A PREVIOUS'/
     1' RUN.'//
     4' IT WILL BE OF THE FORM OUTxxxx, WHERE xxxx WAS THE JOB NUMBER'/
     5' ASSIGNED TO THE RUN.'//)
	WRITE(*,*)' ENTER -99 TO SEE ALL OR A PART OF YOUR DIRECTORY: '
        READ(*,1) OUTFIL
	IF(OUTFIL(1:3) .EQ. '-99') CALL SEEDIR(PATH,NOB,OUTFIL,OSName,
     1        ListDir)
     	TMPFILE = ' '
	TMPFILE = OUTFIL
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(45,FILE=PATHFILE,STATUS='OLD',ERR=95)
	GO TO 110
   95   WRITE(*,5316) PATHFILE
 5316   FORMAT(//' THE FOLLOWING FILE DOES NOT EXIST ... '/
     1'    ',A73)
	GO TO 170
  110	WRITE(*,*)
	WRITE(*,*)
       WRITE(*,*)' THE FOLLOWING INFO SUMMARIZES THE INPUT INSTRUCTIONS'
	WRITE(*,*)' FOR THE RUN WHOSE OUTPUT FILE YOU JUST ENTERED: '
	WRITE(*,*)
	ILINES=3
    2   FORMAT(A1000)
  202   FORMAT(A78)
  150	READ(45,202) READLIN2
	ILINES=ILINES+1
	WRITE(*,1102) READLIN2
 1102   FORMAT(' ',A78)
	IF(ILINES .EQ. 20) THEN
	  ILINES=0
	ENDIF
	IF(READLIN2(5:15) .NE. '***********') GO TO 150
  160	WRITE(*,12)
   12   FORMAT(//' ENTER 1 IF THE OUTPUT FILE DESCRIBED ABOVE IS THE'/
     1'         ONE FROM THE RUN YOU WISH TO EXAMINE IN DETAIL;'/
     2' ENTER 0 IF YOU WISH TO ENTER ANOTHER OUTPUT FILE: ')
	READ(*,*,ERR=160) IANOT
	IF(IANOT .NE. 0 .AND. IANOT .NE. 1) GO TO 160
	IF(IANOT .EQ. 0) THEN
	  CLOSE(45)
	  GO TO 170
	ENDIF
	REWIND(45)
	IVER=0
	READ(45,2) READLINE
	IF(READLINE(2:11) .EQ. 'VERSION 43') IVER=43
	IF(READLINE(2:11) .EQ. 'VERSION 42') IVER=42
	IF(READLINE(2:11) .EQ. 'VERSION 41') IVER=41
        IF(IVER .EQ. 0) THEN
         WRITE(*,3013)
 3013    FORMAT(/' THIS PROGRAM CANNOT READ YOUR OUTPUT FILE. YOU MUST'/
     1' INPUT AN OUTPUT FILE WITH "VERSION 41 ...", OR A MORE RECENT'/
     2' VERSION NO. ON THE FIRST LINE.'//
     3' THE PROGRAM STOPS.')
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3013)
        CLOSE(42)
        CALL PAUSE
        STOP
       ENDIF
	READLIN1 = READLINE
        CALL SEPARATE
        CALL GETNUM(NUMEQT)
   50   READ(25,2) READLINE
        IF(READLINE(2:19) .NE. 'THE NEXT FEW LINES') GO TO 50
   80   READ(25,2) READLINE
        IF(READLINE(2:7) .EQ. 'PREFIX') THEN
         PREFIX = READLINE(9:13)
         EXT    = READLINE(24:26)
         CALL GETNSUB2(NSUBTOT)
         CALL GETNSUB(NSUB)
         CALL GETIPATFF(25,NSUBTOT,NSUB,MAXSUB,IPATVEC,IERRR)
         IF(IERRR .EQ. -1) STOP
         GO TO 200
        ENDIF
        GO TO 80
  200	  CONTINUE
        IF(IVER .EQ. 41) THEN
  210   READ(25,2) READLINE
        IF(READLINE(2:10) .EQ. 'ACTIVE (S') THEN
         BACKSPACE(25)
         READ(25,164) AFSCALAR
  164    FORMAT(T27,G12.6)
         GO TO 165
        ENDIF
        GO TO 210
       ENDIF
        IF(IVER .GE. 42) THEN
 1210   READ(25,2) READLINE
        IF(READLINE(2:17) .EQ. 'THE NO. OF DRUGS') THEN
         READ(25,*) NDRUG
         READ(25,*)
         READ(25,*)
         READ(25,*)
         READ(25,*) (AF(I),I=1,NDRUG)
         GO TO 165
        ENDIF
        GO TO 1210
        ENDIF
  165	CONTINUE
      IF(IVER .LT. 41) THEN
       NDRUG = -1
       AF(1) = AFSCALAR
      ENDIF
        REWIND(25)
  310   READ(25,2) READLINE
        IF(READLINE(2:26) .EQ. 'THE NO. OF GRID POINTS IS') THEN
         READ(25,*) NGRID
         GO TO 265
        ENDIF
        GO TO 310
  265   CONTINUE
 5450   READ(25,2,IOSTAT=IEND) READLINE
        IF(IEND .GE. 0) GO TO 5450
 5550	  BACKSPACE(25)
        BACKSPACE(25)
        READ(25,2) READLINE
        IF(READLINE(2:25) .NE. 'IERRMOD AND THE ESTIMATE') GO TO 5550
        READ(25,*) IERRMOD, GAMLAM
	READ(34,7123) CODE
 7123 FORMAT(A14)
        ICODEDEN = 0
        IF(CODE .EQ. 'DENSITY APR_10') ICODEDEN = 1
        IF(CODE .EQ. 'DENSITY OCT_15') ICODEDEN = 2
        IF(ICODEDEN .EQ. 0) THEN
         WRITE(*,7124)
 7124    FORMAT(//' SOMEHOW THE DENSITY PART OF THE FILE IN YOUR'/
     1' COMBINED OUTPUT FILE DOES NOT HAVE A CORRECT CODE ON THE'/
     2' FIRST LINE. THIS CODE MUST BE "DENSITY XXX_XX", WHERE XXX_XX'/
     3' IS APR_10 OR A MORE CURRENT DATE. '//
     3' IF YOU HAVE MANUALLY EDITED YOUR OUTPUT FILE, RERUN THE '/
     4' PROGRAM WITH THE ORIGINAL UNEDITED OUTPUT FILE. OTHERWISE,'/
     5' PLEASE SEND THE DETAILS OF YOUR RUN TO THE LAPK.'//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,7124)
        CLOSE(42)
        CALL PAUSE
        STOP
       ENDIF
        READ(34,*) NDIM
        READ(34,*) INDPTS
	READ(34,*) NACTVE
	IF(NACTVE .GT. MAXGRD) THEN
	 WRITE(*,1718) NACTVE,MAXGRD,MAXGRD
 1718    FORMAT(//' THE NO. OF ACTIVE GRID POINTS IS ',I7,' WHICH IS'/
     1' MORE THAN THE MAXIMUM ALLOWED FOR THIS PROGRAM (',I7,'). RERUN'/
     2' THIS PROGRAM AFTER YOU HAVE REDUCED THE NO. OF GRID POINTS IN'/
     3' THE DENSITY FILE TO NO MORE THAN ',I7//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,1718) NACTVE,MAXGRD,MAXGRD
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	READ(34,*) NVAR
	READ(34,1717) (PAR(I),I=1,NVAR)
 1717 FORMAT(A11)
	READ(34,*) NOFIX
	READ(34,1717) (PARFIX(I),I=1,NOFIX)
      IF(ICODEDEN .EQ. 2) THEN
       READ(34,*) NRANFIX
       READ(34,1717) (PARRANFIX(I),I=1,NRANFIX)
      ENDIF
	DO I=1,NVAR
	READ(34,*) (AB(I,J),J=1,2)
	END DO
	READ(34,*) (VALFIX(I),I=1,NOFIX)
      IF(ICODEDEN .EQ. 2) READ(34,*) (RANFIXEST(I),I=1,NRANFIX)
	READ(34,*) NINT
	READ(34,*) ICYCLE
	READ(34,*)
	DO I=1,NACTVE
	READ(34,*) (CORDEN(I,J),J=1,NVAR+1)
	END DO
	DO JSUB=1,NSUB
	 DO I=1,NACTVE
	  READ(34,*) PYJGX(JSUB,I)
	 END DO
	END DO
	REWIND(27)
	DO JSUB=1,NSUB
	 CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	 DO IEQ=1,NUMEQT
	  DO J=1,NOBSER
	   READ(34,*) (YPREDPOP(JSUB,IEQ,J,ICENTER),ICENTER=1,3)
	  END DO
	 END DO
	END DO
	 DO JSUB = 1,NSUB
	  READ(34,*) NUMT(JSUB)
	 END DO
	 DO JSUB=1,NSUB
	  DO IEQ=1,NUMEQT
	   DO J=1,NUMT(JSUB)
	    READ(34,*) (YPREDPOPT(JSUB,IEQ,J,ICENTER),ICENTER=1,3)
	   END DO
	  END DO
	 END DO
	 DO JSUB=1,NSUB
	  DO J=1,NUMT(JSUB)
	   READ(34,*) TTPRED(JSUB,J)
	  END DO
	 END DO
	REWIND(27)
	DO JSUB=1,NSUB
	 CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	 DO IEQ=1,NUMEQT
	  DO J=1,NOBSER
	   READ(34,*) (YPREDBAY(JSUB,IEQ,J,ICENTER),ICENTER=1,3)
	  END DO
	 END DO
	END DO
	DO JSUB=1,NSUB
	 DO ICENTER=1,3
	  READ(34,*) (EXX(JSUB,ICENTER,J),J=1,NVAR)
	 END DO
	END DO
	CLOSE(34)
        VOLSPA=1.D0
        DO I=1,NVAR
        VOLSPA = VOLSPA*(AB(I,2)-AB(I,1))
	END DO
	NNACTVE=NACTVE
	DO I=1,NACTVE
	DO J=1,NVAR+1
	 CORHOLD(I,J) = CORDEN(I,J)
	END DO
	END DO
	ICOVHAVE = 0
 7185   CONTINUE
	NACTVE=NNACTVE
	DO I=1,NACTVE
	DO J=1,NVAR+1
	 CORDEN(I,J) = CORHOLD(I,J)
	END DO
	END DO
	CALL SYSTEM(ClearScreen)
        WRITE(*,7186)
 7186   FORMAT(/' ENTER 0 TO SEE THE VERSION NO. OF THE OUTPUT FILE;'/
     1' ENTER 1 TO SEE THE LAST CYCLE VALUES AGAIN;'/
     3' ENTER 4 TO SEE A SUMMARY TABLE OF THE GRID POINTS AND THEIR'/
     4'         PROBABILITIES (AND PRODUCE A MATLAB .M FILE OF THE DETAI
     5LS);'/
     7' ENTER 6 TO USE THE FINAL CYCLE POPULATION ESTIMATES TO PREDICT'/
     8'         CONCENTRATION VALUES FOR EACH SUBJECT;'/
     3' ENTER 7 TO OBTAIN THE BAYESIAN POSTERIOR DENSITY FOR EACH '/
     4'         INDIVIDUAL SUBJECT, USING THE FINAL CYCLE JOINT P.D.F.'/
     5'         OF THE ENTIRE POPULATION AS THE PRIOR DENSITY FOR EACH.'
     6/
     4' ENTER 8 TO SEE REGRESSION STATISTICS OF ANY DESCRIPTOR OR '/
     4'         RANDOM VARIABLE VS. ANY OTHER DESCRIPTOR OR RANDOM '/
     5'         VARIABLE (ACROSS ALL SUBJECTS);'/
     4' ENTER 9 TO STOP THE PROGRAM: ')
	READ(*,*,ERR=7185) IOPT
	IF(IOPT .NE. 1 .AND. IOPT .NE. 4 .AND. IOPT .NE. 6 .AND. IOPT
     1   .NE. 7 .AND. IOPT .NE. 8 .AND. IOPT .NE. 9 .AND. IOPT .NE. 0)
     2   GO TO 7185
	IF(IOPT .EQ. 0) THEN
	 WRITE(*,7187)
 7187    FORMAT(//' NOTE: THE OUTPUT FILE YOU ENTERED ABOVE HAS THE'/
     1'       FOLLOWING VERSION NO., AND WAS PRODUCED BY THE INDICATED'/
     2'       ANALYSIS PROGRAM ...'//)
	 WRITE(*,2) READLIN1
	 WRITE(*,7188)
 7188  FORMAT(/' ENTER ANY CHARACTER TO CONTINUE: ')
       READ(*,*,ERR=7185) JUNK
       GO TO 7185
      ENDIF
	IF(IOPT .EQ. 9) THEN
 	  RETURN
	ENDIF
	IF(IOPT .EQ. 1) THEN
  180	READ(25,2,IOSTAT=IEND) READLINE
	IF(IEND .GE. 0) GO TO 180
	CALL PRNLAST
	GO TO 7185
	ENDIF
	IF(IOPT .EQ. 4) THEN
	CALL FORMLC(PATH,NGRID,NACTVE,VOLSPA,MAXGRD,MAXDIM,CORDEN,WORK,
     1  IJUNK,NVAR,PAR,NOFIX,PARFIX,VALFIX,AF,IVER,NDRUG,NRANFIX,
     2  PARRANFIX,RANFIXEST)
	GO TO 7185
	ENDIF
	IF(IOPT .EQ. 6) THEN
 6550	WRITE(*,6546)
 6546   FORMAT(/' ENTER 0 IF YOU WOULD LIKE TO WRITE ALL THE NUMERICAL'/
     1'         RESULTS FROM THIS OPTION TO A FILE; '/
     2' ENTER 1 IF YOU DO NOT WANT TO WRITE THE RESULTS TO A FILE: ')
	READ(*,*,ERR=6550) ISAVFIL
	IF(ISAVFIL .NE. 0 .AND. ISAVFIL .NE. 1) GO TO 6550
	IF(ISAVFIL .EQ. 1) IPUT = 0
	IF(ISAVFIL .EQ. 0) THEN
	IPUT = 1
 5980   WRITE(*,5981)
 5981   FORMAT(/' ENTER THE NAME OF THE OUTPUT FILE TO SAVE ALL THE'/
     1' RESULTS: ')
	READ(*,1) OUTSINGL
     	TMPFILE = ' '
	TMPFILE = OUTSINGL
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(31,FILE=PATHFILE,ERR=5970,STATUS='NEW')
	GO TO 5975
 5970   WRITE(*,9826) PATHFILE
 9826   FORMAT(/' THE FOLLOWING FILE ALREADY EXISTS ....'/
     1'    ',A73/
     1' ENTER 0 TO ENTER A NEW FILENAME;'/
     2' ENTER 1 TO OVERWRITE THIS FILE: ')
	READ(*,*,ERR=5970) IFILE
	IF(IFILE .NE. 0 .AND. IFILE .NE. 1) GO TO 5970
	IF(IFILE .EQ. 0) GO TO 5980
	IF(IFILE .EQ. 1) OPEN(31,FILE=PATHFILE)
 5975   CONTINUE
 	CALL DATE_AND_TIME(DATDAY,TIMDAY,ZONEDAY,IDTDAY)
	WRITE(31,*)
	WRITE(31,*)' TODAY IS ',DATDAY,'; THE TIME IS ',TIMDAY
	WRITE(31,*)
	WRITE(31,*)
	ENDIF
 9500   WRITE(*,9501) NUMEQT
 9501   FORMAT(//' YOUR PATIENT DATA FILES HAVE ',I2,' OUTPUT '/
     1' EQUATION(S). FOR EACH OUTPUT EQUATION, YOU MAY PREDICT LEVELS '/
     2' FOR EACH SUBJECT ASSUMING THAT SUBJECT HAS PARAMETER VALUES '/
     3' EQUAL TO EITHER THE POPULATION MEANS, THE POPULATION MEDIANS, '/
     4' OR THE POPULATION MODES FROM THE FINAL CYCLE. '//
     5' ENTER THE NO. OF THE OUTPUT EQUATION WHOSE LEVELS ARE TO BE'/
     6' PREDICTED: ')
	READ(*,*,ERR=9500) IOUTEQ
	IF(IOUTEQ .LT. 1 .OR. IOUTEQ .GT. NUMEQT) GO TO 9500
 9510   WRITE(*,9502)
 9502   FORMAT(/' ENTER 1 TO USE THE POPULATION MEANS; '/
     1' ENTER 2 TO USE THE POPULATION MEDIANS;'/
     2' ENTER 3 TO USE THE POPULATION MODES: ')
	READ(*,*,ERR=9510) ICENTER
	IF(ICENTER .LT. 1 .OR. ICENTER .GT. 3) GO TO 9510
 9505   CONTINUE
        WRITE(*,8513)
 8513   FORMAT(//' ENTER 1 TO CALCULATE THE PREDICTED CONCENTRATION '/
     1'         LEVELS FOR THE ENTIRE POPULATION OF SUBJECTS AS A WHOLE;
     2'/
     2' ENTER 2 TO CALCULATE THE PREDICTED LEVELS FOR A SELECTED'/
     4'         SUBSET OF SUBJECTS;'/
     4' ENTER 3 TO CALCULATE THE PREDICTED LEVELS FOR EACH SUBJECT, IN'/
     5'         TURN;'/
     6' ENTER 0 TO RETURN TO THE PREVIOUS MENU:  ')
	READ(*,*,ERR=9505) ISCT
	IF(ISCT .LT. 0 .OR. ISCT .GT. 3) GO TO 9505
	IF(ISCT .EQ. 0) THEN
	 IF(ISAVFIL .EQ. 0) CLOSE(31)
	 GO TO 7185
	ENDIF
	IF(ISCT .EQ. 1) ISCAT = 3
	IF(ISCT .EQ. 3) ISCAT = 1
	IF(ISCT .EQ. 2) ISCAT = 2
	REWIND(27)
	IF(ISCAT .EQ. 1) THEN
	DO 6000 JSUB=1,NSUB
	CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	NACTUAL = 0
	DO I=1,NOBSER
	 IF(YO(I,IOUTEQ) .NE. -99.) THEN
	  NACTUAL = NACTUAL + 1
	  YYPRED(NACTUAL) = YPREDPOP(JSUB,IOUTEQ,I,ICENTER)
	  YYJ(NACTUAL) = YO(I,IOUTEQ)
	 ENDIF
	END DO
	C0I = C0(IOUTEQ)
	C1I = C1(IOUTEQ)
	C2I = C2(IOUTEQ)
	C3I = C3(IOUTEQ)
	IF(IPUT .EQ. 1) WRITE(31,8518) IOUTEQ
 8518 	FORMAT(//' ... FOR OUTPUT EQUATION ',I2,' ...'/)
       CALL SCATPLOT(1,ICENTER,IIOUT,IQUAL,JSUB,IPUT,NACTUAL,YYPRED,YYJ,
     1  C0I,C1I,C2I,C3I,AMIN,AMAX,0,IERRMOD,GAMLAM)
 6000   CONTINUE
	GO TO 9505
	ENDIF
	IF(ISCAT .EQ. 2) THEN
 9520	WRITE(*,8514)
 8514   FORMAT(//' ENTER THE SUBJECT NO. WHOSE CALCULATIONS ARE DESIRED;
     1'/
     1' ENTER 0 TO RETURN TO THE PREVIOUS MENU: ')
	READ(*,*,ERR=9520) JSUB
	IF(JSUB .LT. 0 .OR. JSUB .GT. NSUB) GO TO 9520
	IF(JSUB .EQ. 0) GO TO 9505
	REWIND(27)
	IF(JSUB .GT. 1) THEN
	 DO J=1,JSUB-1
   	  CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	 END DO
	ENDIF
	CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	NACTUAL = 0
	DO I=1,NOBSER
	 IF(YO(I,IOUTEQ) .NE. -99.) THEN
	  NACTUAL = NACTUAL + 1
	  YYPRED(NACTUAL) = YPREDPOP(JSUB,IOUTEQ,I,ICENTER)
	  YYJ(NACTUAL) = YO(I,IOUTEQ)
	 ENDIF
	END DO
	C0I = C0(IOUTEQ)
	C1I = C1(IOUTEQ)
	C2I = C2(IOUTEQ)
	C3I = C3(IOUTEQ)
	IF(IPUT .EQ. 1) WRITE(31,8518) IOUTEQ
        IF(NSUB .LT. NSUBTOT) THEN
         WRITE(*,8516) JSUB,NSUB,IPATVEC(JSUB),NSUBTOT
 8516    FORMAT(/' SUBJECT NO. ',I4,' AMONG THE ',I4,' "ACTIVE" '/
     1' SUBJECTS ANALYZED IN YOUR RUN, IS SUBJECT NO. ',I4,' IN THE'/
     2' ENTIRE POPULATION OF ',I4,' SUBJECTS.')
        ENDIF
       CALL SCATPLOT(1,ICENTER,IIOUT,IQUAL,JSUB,IPUT,NACTUAL,YYPRED,YYJ,
     1  C0I,C1I,C2I,C3I,AMIN,AMAX,0,IERRMOD,GAMLAM)
	GO TO 9520
	ENDIF
	IF(ISCAT .EQ. 3) THEN
	JSUBST = 0
	DO 7000 JSUB=1,NSUB
	CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	NACTUAL = 0
	DO I=1,NOBSER
	 IF(YO(I,IOUTEQ) .NE. -99.) THEN
	  NACTUAL = NACTUAL + 1
	  YYPRED(JSUBST+NACTUAL) = YPREDPOP(JSUB,IOUTEQ,I,ICENTER)
	  YYJ(JSUBST+NACTUAL) = YO(I,IOUTEQ)
	 ENDIF
	END DO
	COEFF(JSUB,1) = NACTUAL
	COEFF(JSUB,2) = C0(IOUTEQ)
	COEFF(JSUB,3) = C1(IOUTEQ)
	COEFF(JSUB,4) = C2(IOUTEQ)
	COEFF(JSUB,5) = C3(IOUTEQ)
	JSUBST = JSUBST + NACTUAL
	SERNUM(JSUB)=NACTUAL
 7000   CONTINUE
	CALL CALCSER(MAXSUB,NSUB,SERNUM,MAXSER,MINSER,SERMEN,SERSD)
	IF(IPUT .EQ. 1) WRITE(31,8518) IOUTEQ
 	CALL SCATPLOT(1,ICENTER,IIOUT,IQUAL,-NSUB,IPUT,JSUBST,YYPRED,
     1  YYJ,C0I,C1I,C2I,C3I,AMIN,AMAX,0,IERRMOD,GAMLAM)
	GO TO 9505
	ENDIF
	ENDIF
	IF(IOPT .EQ. 7) THEN
 6560	WRITE(*,6546)
	READ(*,*,ERR=6560) ISAVFIL
	IF(ISAVFIL .NE. 0 .AND. ISAVFIL .NE. 1) GO TO 6560
	IF(ISAVFIL .EQ. 1) IPUT = 0
	IF(ISAVFIL .EQ. 0) THEN
	IPUT = 1
 4980   WRITE(*,5981)
	READ(*,1) OUTSINGL
     	TMPFILE = ' '
	TMPFILE = OUTSINGL
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(31,FILE=PATHFILE,ERR=4970,STATUS='NEW')
	GO TO 4975
 4970   WRITE(*,9826) PATHFILE
	READ(*,*,ERR=4970) IFILE
	IF(IFILE .NE. 0 .AND. IFILE .NE. 1) GO TO 4970
	IF(IFILE .EQ. 0) GO TO 4980
	IF(IFILE .EQ. 1) OPEN(31,FILE=PATHFILE)
 4975   CONTINUE
      CALL DATE_AND_TIME(DATDAY,TIMDAY,ZONEDAY,IDTDAY)
	WRITE(31,*)
	WRITE(31,*)' TODAY IS ',DATDAY,'; THE TIME IS ',TIMDAY
	WRITE(31,*)
	WRITE(31,*)
	ENDIF
 8500   WRITE(*,8501) NUMEQT
 8501   FORMAT(//' YOUR PATIENT DATA FILES HAVE ',I2,' OUTPUT '/
     1' EQUATION(S). FOR EACH OUTPUT EQUATION, YOU MAY PREDICT LEVELS '/
     2' FOR EACH SUBJECT ASSUMING THAT SUBJECT HAS PARAMETER VALUES '/
     3' EQUAL TO EITHER THE MEANS, MEDIANS, OR MODES OF ITS INDIVIDUAL'/
     4' BAYESIAN POSTERIOR JOINT P.D.F. ENTER THE NO. OF THE OUTPUT '/
     5' EQUATION WHOSE LEVELS ARE TO BE PREDICTED: ')
	READ(*,*,ERR=8500) IOUTEQ
	IF(IOUTEQ .LT. 1 .OR. IOUTEQ .GT. NUMEQT) GO TO 8500
 8515   WRITE(*,8507)
 8507   FORMAT(/' ENTER 1 TO USE THE MEANS OF THE BAYESIAN P.D.F.; '/
     6' ENTER 2 TO USE THE MEDIANS OF THE BAYESIAN P.D.F.;'/
     7' ENTER 3 TO USE THE MODES OF THE BAYESIAN P.D.F.:  ')
	READ(*,*,ERR=8515) ICENTER
	IF(ICENTER .LT. 1 .OR. ICENTER .GT. 3) GO TO 8515
	IF(ICENTER .EQ. 1) MNAME = 'MEANS'
	IF(ICENTER .EQ. 2) MNAME = 'MEDIANS'
	IF(ICENTER .EQ. 3) MNAME = 'MODES'
	ITIM=1
 8510 WRITE(*,8517) MNAME
 8517	FORMAT(//' THE PROGRAM IS ABOUT TO CALCULATE THE INDIVIDUAL '/
     1' SUBJECT BAYESIAN POSTERIOR JOINT P.D.F. FOR EACH '/
     2' SUBJECT IN TURN, USING THE FINAL JOINT DISTRIBUTION OF THE '/
     3' ENTIRE POPULATION AS THE PRIOR FOR EACH. '//
     8' ENTER 1 TO STORE THE  ',A7,' FROM THESE P.D.F. INTO A FILE; '/
     9' ENTER 0 OTHERWISE:  ')
	READ(*,*,ERR=8510) IFILSTR
	IF(IFILSTR .NE. 0 .AND. IFILSTR .NE. 1) GO TO 8510
	IF(IFILSTR .EQ. 1) THEN
 8780 WRITE(*,*)
	WRITE(*,*)' ENTER THE NAME OF THE FILE WHICH WILL STORE'
	WRITE(*,*)' THE FINAL CYCLE  ',MNAME,'  FOR EACH SUBJECT:  '
	READ(*,1) OPT7FIL
     	TMPFILE = ' '
	TMPFILE = OPT7FIL
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(33,FILE=PATHFILE,ERR=8770,STATUS='NEW')
	GO TO 8775
 8770   WRITE(*,9826) PATHFILE
	READ(*,*,ERR=8770) IFILE
	IF(IFILE .NE. 0 .AND. IFILE .NE. 1) GO TO 8770
	IF(IFILE .EQ. 0) GO TO 8780
	IF(IFILE .EQ. 1) OPEN(33,FILE=PATHFILE)
 8775   CONTINUE
	CALL TOPFIL(NDRUG,AF,NSUB,NVAR,PAR,NOFIX,PARFIX,NRANFIX,
     1 PARRANFIX)
	ENDIF
   	ISCAT=1
	ISCATSEE = 1
	GO TO 8900
 8505	IF(ITIM .EQ. 1 .AND. IFILSTR .EQ. 1) THEN
	 CLOSE(33)
	ENDIF
	ITIM=2
        WRITE(*,8503) MNAME
 8503   FORMAT(//' ENTER 1 TO CALCULATE THE PREDICTED CONCENTRATION'/
     1'		LEVELS FOR THE ENTIRE POPULATION OF SUBJECTS AS A WHOLE;
     3'/
     5' ENTER 2 TO CALCULATE THE PREDICTED LEVELS FOR A SELECTED'/
     6'		 SUBSET OF SUBJECTS;'/
     8' ENTER 3 TO CALCULATE THE PREDICTED LEVELS FOR EACH SUBJECT, IN'/
     4'		TURN;'/
     1' ENTER 4 TO SEE THE ',A7,' OF THE INDIVIDUAL SUBJECT BAYESIAN'/
     2'		POSTERIOR JOINT PROBABILITY DENSITY FUNCTIONS; '/
     1' ENTER 0 TO RETURN TO THE PREVIOUS MENU:  ')
	READ(*,*,ERR=8505) ISCT
	IF(ISCT .LT. 0 .OR. ISCT .GT. 4) GO TO 8505
	IF(ISCT .EQ. 0) THEN
	 IF(ISAVFIL .EQ. 0) CLOSE(31)
	 GO TO 7185
	ENDIF
	IF(ISCT .EQ. 1) ISCAT = 3
	IF(ISCT .EQ. 3) ISCAT = 1
	IF(ISCT .EQ. 2) ISCAT = 2
	IF(ISCT .EQ. 4) ISCAT = 4
	IF(ISCAT .EQ. 1) ISCATSEE = 0
	IF(ISCAT .EQ. 4) THEN
	WRITE(*,8502) MNAME
	WRITE(*,8523) 'SUBJECT','   PROB.      ', (PAR(I),I=1,NVAR)
	ILINES=5
	DO J=1,NSUB
	 ILINES=ILINES+1
	 WRITE(*,8522) J,1.D0/NSUB,(EXX(J,ICENTER,K),K=1,NVAR)
	IF(ILINES .EQ. 20) THEN
	  ILINES=0
	 ENDIF
	END DO
	GO TO 8505
	ENDIF
 8900	REWIND(27)
	IF(ISCAT .EQ. 1) THEN
	IF(ISCATSEE .EQ. 1) THEN
	ISCROL = 1
	DO 4000 JSUB=1,NSUB
	NACTVE=NNACTVE
	DO I=1,NACTVE
	DO J=1,NVAR+1
	 CORDEN(I,J) = CORHOLD(I,J)
	END DO
	END DO
	IF(IPUT .EQ. 1) WRITE(31,8506) JSUB
 8506   FORMAT(////' THE FOLLOWING RESULTS ARE FOR SUBJECT ',I4)
	WRITE(*,8506) JSUB
	CALL SUBRES(MAXSUB,JSUB,CORDEN,WORK,MAXGRD,MAXDIM,NVAR,
     1AB,PAR,NACTVE,IPUT,NGRID,VOLSPA,ISCROL,CENTER,PYJGX,PYJGXX)
	IF(IFILSTR .EQ. 1 .AND. ITIM .EQ. 1) THEN
	WRITE(33,5113) 1.D0/NSUB,
     1  (EXX(JSUB,ICENTER,I),I=1,NVAR),(VALFIX(K),K=1,NOFIX),
     2  (RANFIXEST(K),K=1,NRANFIX)
 5113   FORMAT(1X,G13.7,3X,32(G12.6,1X))
	ENDIF
 4000   CONTINUE
	WRITE(*,8502) MNAME
 8502   FORMAT(/' FOLLOWING ARE THE ',A7,' FROM THE BAYESIAN'/
     1' POSTERIOR J.D.F: '/)
	WRITE(*,8523) 'SUBJECT','   PROB.       ', (PAR(I),I=1,NVAR)
 8523   FORMAT(1X,A7,2X,A15,2X,30(A11,6X))
 8522   FORMAT(2X,I4,2X,G12.6,5X,30(G12.6,5X))
	ILINES=5
	DO J=1,NSUB
	 ILINES=ILINES+1
	 WRITE(*,8522) J,1.D0/NSUB,(EXX(J,ICENTER,K),K=1,NVAR)
	 IF(ILINES .EQ. 20) THEN
	  IF(ISCROL .EQ. 2) CALL PAUSE
	  ILINES=0
	 ENDIF
	END DO
       IF(ISCROL .EQ. 2) CALL PAUSE
	GO TO 8505
	ENDIF
	REWIND(27)
	DO 8000 JSUB=1,NSUB
	CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	NACTUAL = 0
	DO I=1,NOBSER
	 IF(YO(I,IOUTEQ) .NE. -99.) THEN
	  NACTUAL = NACTUAL + 1
	  YYPRED(NACTUAL) = YPREDBAY(JSUB,IOUTEQ,I,ICENTER)
	  YYJ(NACTUAL) = YO(I,IOUTEQ)
	 ENDIF
	END DO
	C0I = C0(IOUTEQ)
	C1I = C1(IOUTEQ)
	C2I = C2(IOUTEQ)
	C3I = C3(IOUTEQ)
	IF(IPUT .EQ. 1) WRITE(31,8518) IOUTEQ
       CALL SCATPLOT(3,ICENTER,IIOUT,IQUAL,JSUB,IPUT,NACTUAL,YYPRED,YYJ,
     1  C0I,C1I,C2I,C3I,AMIN,AMAX,0,IERRMOD,GAMLAM)
 8000   CONTINUE
	GO TO 8505
	ENDIF
	IF(ISCAT .EQ. 2) THEN
 8520   WRITE(*,8504)
 8504   FORMAT(//' ENTER THE SUBJECT NO. WHOSE MARGINAL DENSITY'/
     1' CALCULATIONS ARE DESIRED;'/
     2' ENTER 0 TO RETURN TO THE PREVIOUS MENU: ')
	READ(*,*,ERR=8520) JSUB
	IF(JSUB .LT. 0 .OR. JSUB .GT. NSUB) GO TO 8520
	IF(JSUB .EQ. 0) GO TO 8505
	REWIND(27)
	IF(JSUB .GT. 1) THEN
	 DO J=1,JSUB-1
	  CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	 END DO
	ENDIF
	CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	IREDO=1
 8610	 WRITE(*,8607)
 8607    FORMAT(/' ENTER 1 TO CALCULATE ONLY THE PREDICTED '/
     1'		CONCENTRATION LEVELS FOR THIS SUBJECT;'/
     3' ENTER 2 TO SEE THE BAYESIAN POSTERIOR DENSITY FOR THIS SUBJECT'/
     4' 	AS WELL AS THE CALCULATIONS INDICATED ABOVE: ')
	 READ(*,*,ERR=8610) IDO
	 IF(IDO .NE. 1 .AND. IDO .NE. 2) GO TO 8610
	 IF(IDO .EQ. 1) IREDO=0
        IF(NSUB .LT. NSUBTOT) THEN
         WRITE(*,8516) JSUB,NSUB,IPATVEC(JSUB),NSUBTOT
        ENDIF
	IF(IREDO .EQ. 0) GO TO 8525
	NACTVE=NNACTVE
	DO I=1,NACTVE
	DO J=1,NVAR+1
	 CORDEN(I,J) = CORHOLD(I,J)
	END DO
	END DO
	IF(IPUT .EQ. 1) WRITE(31,8506) JSUB
	WRITE(*,8506) JSUB
	ISCROL=2
	CALL SUBRES(MAXSUB,JSUB,CORDEN,WORK,MAXGRD,MAXDIM,NVAR,AB,
     1PAR,NACTVE,IPUT,NGRID,VOLSPA,ISCROL,CENTER,PYJGX,PYJGXX)
 8525   CONTINUE
	NACTUAL = 0
	DO I=1,NOBSER
	 IF(YO(I,IOUTEQ) .NE. -99.) THEN
	  NACTUAL = NACTUAL + 1
	  YYPRED(NACTUAL) = YPREDBAY(JSUB,IOUTEQ,I,ICENTER)
	  YYJ(NACTUAL) = YO(I,IOUTEQ)
	 ENDIF
	END DO
	C0I = C0(IOUTEQ)
	C1I = C1(IOUTEQ)
	C2I = C2(IOUTEQ)
	C3I = C3(IOUTEQ)
	IF(IPUT .EQ. 1) WRITE(31,8518) IOUTEQ
       CALL SCATPLOT(3,ICENTER,IIOUT,IQUAL,JSUB,IPUT,NACTUAL,YYPRED,YYJ,
     1  C0I,C1I,C2I,C3I,AMIN,AMAX,0,IERRMOD,GAMLAM)
	GO TO 8520
	ENDIF
	IF(ISCAT .EQ. 3) THEN
	JSUBST = 0
	DO 5000 JSUB=1,NSUB
	CALL FILRED(NOBSER,YO,C0,C1,C2,C3,MAXOBDIM,MAXNUMEQ)
	NACTUAL = 0
	DO I=1,NOBSER
	 IF(YO(I,IOUTEQ) .NE. -99.) THEN
	  NACTUAL = NACTUAL + 1
	  YYPRED(JSUBST+NACTUAL) = YPREDBAY(JSUB,IOUTEQ,I,ICENTER)
	  YYJ(JSUBST+NACTUAL) = YO(I,IOUTEQ)
	 ENDIF
	END DO
	COEFF(JSUB,1) = NACTUAL
	COEFF(JSUB,2) = C0(IOUTEQ)
	COEFF(JSUB,3) = C1(IOUTEQ)
	COEFF(JSUB,4) = C2(IOUTEQ)
	COEFF(JSUB,5) = C3(IOUTEQ)
	JSUBST = JSUBST + NACTUAL
	SERNUM(JSUB)=NACTUAL
 5000   CONTINUE
	CALL CALCSER(MAXSUB,NSUB,SERNUM,MAXSER,MINSER,SERMEN,SERSD)
	IF(IPUT .EQ. 1) WRITE(31,8518) IOUTEQ
 	CALL SCATPLOT(3,ICENTER,IIOUT,IQUAL,-NSUB,IPUT,JSUBST,YYPRED,
     1  YYJ,C0I,C1I,C2I,C3I,AMIN,AMAX,0,IERRMOD,GAMLAM)
	GO TO 8505
	ENDIF
	ENDIF
	IF(IOPT .EQ. 8) THEN
 6570	WRITE(*,6546)
	READ(*,*,ERR=6570) ISAVFIL
	IF(ISAVFIL .NE. 0 .AND. ISAVFIL .NE. 1) GO TO 6570
	IF(ISAVFIL .EQ. 1) IPUT = 0
	IF(ISAVFIL .EQ. 0) THEN
	IPUT = 1
 7980   WRITE(*,7981)
 7981   FORMAT(/' ENTER THE NAME OF THE OUTPUT FILE TO SAVE ALL THE'/
     1' STATISTICS CALCULATIONS YOU CHOOSE BELOW: ')
	  READ(*,1) OUTOPT8
     	TMPFILE = ' '
	TMPFILE = OUTOPT8
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(35,FILE=PATHFILE,ERR=7970,STATUS='NEW')
	GO TO 7975
 7970   WRITE(*,9826) PATHFILE
	READ(*,*,ERR=7970) IFILE
	IF(IFILE .NE. 0 .AND. IFILE .NE. 1) GO TO 7970
	IF(IFILE .EQ. 0) GO TO 7980
	IF(IFILE .EQ. 1) OPEN(35,FILE=PATHFILE)
 7975   CONTINUE
 	CALL DATE_AND_TIME(DATDAY,TIMDAY,ZONEDAY,IDTDAY)
	WRITE(35,*)
	WRITE(35,*)' TODAY IS ',DATDAY,'; THE TIME IS ',TIMDAY
	WRITE(35,*)
	WRITE(35,*)
	ENDIF
 7700   WRITE(*,7676)
 7676   FORMAT(//' FROM THE FOLLOWING LIST OF COVARIATES AND RANDOM'/
     1' VARIABLE NAMES, CHOOSE THE TWO WHOSE STATISTICS ACROSS ALL'/
     2' SUBJECTS YOU WOULD LIKE TO VIEW. ')
        CALL GETCOVR2(NCOV,DESCR)
 7680	CALL PRNCOVAR(NCOV,DESCR,NVAR,PAR,CLEARSCREEN)
 7685	WRITE(*,7679)
 7679   FORMAT(//' FROM THE ABOVE LIST OF COVARIATES AND RANDOM'/
     1' VARIABLE NAMES, CHOOSE THE TWO WHOSE STATISTICS (ACROSS ALL'/
     2' SUBJECTS) YOU WOULD LIKE TO VIEW. '//
     3' ENTER THE TWO INDICES NOW (OR "AGAIN" TO SEE THE ABOVE LIST OF'/
     4' COVARIATES AND RANDOM VARIABLES AGAIN): ')
 	READ(*,*,ERR=7680) IND1,IND2
	NCV = NCOV + NVAR
	IF(IND1 .LT. 1 .OR. IND2 .LT. 1 .OR. IND1 .GT. NCV .OR. IND2
     1     .GT. NCV) GO TO 7680
	IF(IND1 .LE. NCOV .OR. IND2 .LE. NCOV) THEN
	 IF(ICOVHAVE .EQ. 0) THEN
	  WRITE(*,6502)
 6502     FORMAT(//' STORING COVARIATE VALUES FOR EACH SUBJECT ... ')
	  REWIND(27)
	  DO JSUB = 1,NSUB
	   CALL GETCOVAL(NUMEQT,JSUB,COVAL,NCOV)
	  END DO
	  ICOVHAVE = 1
	 ENDIF
	ENDIF
	IF(IND1 .GT. NCOV .OR. IND2 .GT. NCOV) THEN
 6500   WRITE(*,6501)
 6501   FORMAT(//' FOR THE PARAMETER VALUE FOR EACH SUBJECT, YOU MAY'/
     1' USE THE MEAN, MEDIAN, OR MODE FROM THE BAYESIAN POSTERIOR'/
     2' DENSITY.'//
     5' ENTER 1 TO USE THE MEAN; '/
     6' ENTER 2 TO USE THE MEDIAN;'/
     7' ENTER 3 TO USE THE MODE:  ')
	READ(*,*,ERR=6500) ICENTER
	IF(ICENTER .LT. 1 .OR. ICENTER .GT. 3) GO TO 6500
	IF(ICENTER .EQ. 1) MNAME = 'MEANS'
	IF(ICENTER .EQ. 2) MNAME = 'MEDIANS'
	IF(ICENTER .EQ. 3) MNAME = 'MODES'
	ENDIF
 6510	WRITE(*,6503)
 6503   FORMAT(//' THE STATISTICS WILL INCLUDE 95% CONFIDENCE LINES.'//
     1' ENTER 1 TO MAKE THESE STATISTICS FOR THE EXPECTED VALUE OF Y GIV
     2EN X;'/
     3' ENTER 0 TO MAKE THESE STATISTICS FOR AN ADDITIONAL VALUE OF Y GI
     4VEN X: ')
	READ(*,*,ERR= 6510) ICONF
	IF(ICONF .NE. 0 .AND. ICONF .NE. 1) GO TO 6510
	XLABEL2 = '          '
	YLABEL2 = '          '
	IF(IND1 .LE. NCOV) THEN
	 DO JSUB = 1,NSUB
	  XCOV(JSUB) = COVAL(JSUB,IND1)
	  XLABEL = DESCR(IND1)
	 END DO
	ENDIF
	IF(IND1 .GT. NCOV) THEN
	 DO JSUB = 1,NSUB
	  XCOV(JSUB) = EXX(JSUB,ICENTER,IND1-NCOV)
	  XLABEL = PAR(IND1-NCOV)
	  XLABEL2 = MNAME//' OF'
	 END DO
	ENDIF
	IF(IND2 .LE. NCOV) THEN
	 DO JSUB = 1,NSUB
	  YCOV(JSUB) = COVAL(JSUB,IND2)
	  YLABEL = DESCR(IND2)
	 END DO
      ENDIF
	IF(IND2 .GT. NCOV) THEN
	 DO JSUB = 1,NSUB
	  YCOV(JSUB) = EXX(JSUB,ICENTER,IND2-NCOV)
	  YLABEL = PAR(IND2-NCOV)
	  YLABEL2 = MNAME//' OF'
	 END DO
	ENDIF
	ILOWER = 1
 7990	CALL SCATGRAM(IIOUT,IQUAL,NSUB,XLABEL,YLABEL,XLABEL2,YLABEL2,
     1  XCOV,YCOV,ILOWER,ICONF,IPUT)
 7785	WRITE(*,7891)
 7891   FORMAT(/' ENTER 1 TO SEE THE STATISTICS OF ONE DESCRIPTOR'/
     2'         OR RANDOM VARIABLE VS. ANY OTHER;'/
     3' ENTER 0 OTHERWISE: ')
	READ(*,*,ERR=7785) IAGAIN
	IF(IAGAIN .NE. 0 .AND. IAGAIN .NE. 1) GO TO 7785
	IF(IAGAIN .EQ. 1) GO TO 7700
	IF(IAGAIN .EQ. 0) THEN
	 IF(ISAVFIL .EQ. 0) CLOSE(35)
	 GO TO 7185
	ENDIF
	ENDIF
	END
	SUBROUTINE PRNLAST
	CHARACTER READLINE*144
    2   FORMAT(A144)
   90	BACKSPACE(25)
	BACKSPACE(25)
	READ(25,2) READLINE
	IF(READLINE(2:9) .NE. 'CYCLE NO') GO TO 90
	BACKSPACE(25)
	ILINES=0
   80   READ(25,2,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) GO TO 100
	IEXT = 0
	DO I=73,144
	 IF(READLINE(I:I) .NE. ' ') IEXT = 1
	END DO
	IF(IEXT .EQ. 0) WRITE(*,11) READLINE(1:72)
	IF(IEXT .EQ. 1) WRITE(*,111) READLINE
   11   FORMAT(' ',A72)
  111   FORMAT(' ',A144)
	ILINES=ILINES+1
	IF(ILINES .EQ. 20) THEN
	 ILINES=0
  110	 WRITE(*,101)
  101    FORMAT(' ENTER 1 TO CONTINUE PRINTING THE LAST CYCLE INFO; '/
     1' ENTER 0 TO RETURN TO THE PREVIOUS MENU: ')
 	 READ(*,*,ERR=110) ICONT
	 IF(ICONT .NE. 0 .AND. ICONT .NE. 1) GO TO 110
	 IF(ICONT .EQ. 0) RETURN
	ENDIF
	GO TO 80
  100   CONTINUE
	RETURN
	END
	SUBROUTINE OLDSEEDIR(PATH,NOB,FILENAME)
	CHARACTER FILENAME*20,PATH*60,PRTDIR*47,TEMP*72,PRTDIR2*47
   10	PRTDIR = ' '
	WRITE(*,6)
    6   FORMAT(/' PRESS THE ENTER KEY TO SEE YOUR ENTIRE DIRECTORY;'//
     1' ENTER A PARTIAL FILENAME (WITH THE * WILDCARD) TO SEE A '/
     2'       PARTICULAR SUBSET OF FILENAMES IN YOUR DIRECTORY. '/
     3'       e.g., ENTER  "TO*.INS TO SEE A LIST OF ALL FILES WHICH'/
     4'       BEGIN WITH "TO" AND HAVE A .INS SUFFIX '//
     5' NOTE THAT THE FILES WILL AUTOMATICALLY BE TIME-ORDERED FROM '/
     6' OLDEST TO NEWEST.'//
     7' ENTER YOUR CHOICE NOW: ')
	READ(*,1) PRTDIR
    1   FORMAT(A47)
	IF(PRTDIR .EQ. ' ') TEMP = 'DIR/OD '//PATH(1:NOB)//' |MORE'
	IF(PRTDIR .NE. ' ') THEN
	 PRTDIR2 = ' '
	 J = 0
	 DO I=1,47
	  IF(PRTDIR(I:I) .NE. ' ') THEN
	   J = J+1
	   PRTDIR2(J:J) = PRTDIR(I:I)
	  ENDIF
	 END DO
	 TEMP = 'DIR/OD '//PATH(1:NOB)//PRTDIR2(1:J)//' |MORE'
	ENDIF
        CALL SYSTEM(TEMP)
     	WRITE(*,3)
    3   FORMAT(/' ENTER THE NAME OF THE DESIRED FILE (WITHOUT THE PATH);
     1'/
     2' ENTER -99 TO ENTER A DIFFERENT FILE SPECIFICATION: ')
	READ(*,2) FILENAME
    2   FORMAT(A20)
	IF(FILENAME(1:3) .EQ. '-99') GO TO 10
	RETURN
	END
        SUBROUTINE SEEDIR(PATH,NOB,FILENAME,OSName,ListDir)
        CHARACTER FILENAME*20,PATH*60,PRTDIR*47,TEMP*72,PRTDIR2*47,
     1  OSName*20,ListDir*10
   10   PRTDIR = ' '
        IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
          WRITE(*,7)
        ELSE IF (INDEX(OSName,"DOS",.TRUE.).eq.1) THEN
          WRITE(*,6)
        END IF
    7   FORMAT(/' Press the ENTER key to call system(ls -t). '//
     1' Or type a partial filename (use the * wildcard) to call '/
     2'       system(ls -t arg_1), '/
     3'       e.g., type "to*.f ENTER" to see a list of all files '/
     4'       that begin with "to" and have a .f suffix. '//
     5' ENTER YOUR CHOICE NOW: ')
    6   FORMAT(/' PRESS THE ENTER KEY TO SEE YOUR ENTIRE DIRECTORY;'//
     1' ENTER A PARTIAL FILENAME (WITH THE * WILDCARD) TO SEE A '/
     2'       PARTICULAR SUBSET OF FILENAMES IN YOUR DIRECTORY. '/
     3'       e.g., ENTER  "TO*.INS TO SEE A LIST OF ALL FILES WHICH'/
     4'       BEGIN WITH "TO" AND HAVE A .INS SUFFIX '//
     5' NOTE THAT THE FILES WILL AUTOMATICALLY BE TIME-ORDERED FROM '/
     6' OLDEST TO NEWEST.'//
     7' ENTER YOUR CHOICE NOW: ')
        READ(*,1) PRTDIR
    1   FORMAT(A47)
        IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
           IF(PRTDIR .EQ. ' ') THEN
             TEMP = ListDir//PATH(1:NOB)
           ENDIF
        ELSE IF (INDEX(OSName,"DOS",.TRUE.).eq.1) THEN
           IF(PRTDIR .EQ. ' ') THEN
             TEMP = ListDir//PATH(1:NOB)//' |MORE'
           ENDIF
        ENDIF
        IF(PRTDIR .NE. ' ') THEN
         PRTDIR2 = ' '
         J = 0
         DO I=1,47
          IF(PRTDIR(I:I) .NE. ' ') THEN
           J = J+1
           PRTDIR2(J:J) = PRTDIR(I:I)
          ENDIF
         END DO
         IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
           TEMP = ListDir//PATH(1:NOB)//PRTDIR2(1:J)
         ELSE IF (INDEX(OSName,"DOS",.TRUE.).eq.1) THEN
           TEMP = ListDir//PATH(1:NOB)//PRTDIR2(1:J)//' |MORE'
         ENDIF
        ENDIF
        CALL SYSTEM(TEMP)
        WRITE(*,3)
    3   FORMAT(/' ENTER THE NAME OF THE DESIRED FILE (WITHOUT THE PATH);
     1'/
     2' ENTER -99 TO ENTER A DIFFERENT FILE SPECIFICATION,'/
     3' OR TO VIEW THE DIRECTORY LISTING AGAIN ')
        READ(*,2) FILENAME
    2   FORMAT(A20)
        IF(FILENAME(1:3) .EQ. '-99') GO TO 10
        RETURN
        END
       SUBROUTINE CALCSER(MAXSUB,NSUB,SERNUM,MAXSER,MINSER,SERMEN,SERSD)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION SERNUM(MAXSUB)
	SUM=0.D0
	SUMSQ=0.D0
	MINSER = SERNUM(1)
	MAXSER = SERNUM(1)
	  DO J=1,NSUB
	    SUM = SUM + SERNUM(J)
	    SUMSQ = SUMSQ + SERNUM(J)*SERNUM(J)
	    IF(SERNUM(J) .GT. MAXSER) MAXSER=SERNUM(J)
	    IF(SERNUM(J) .LT. MINSER) MINSER=SERNUM(J)
	  END DO
	SERMEN = SUM/NSUB
	IF(NSUB .EQ. 1) THEN
	  WRITE(*,*)' THE NO. OF OBSER = 1; NO S.D. CAN BE FOUND.'
	  SERSD=-999.
	  RETURN
	ENDIF
	VAR = (SUMSQ - NSUB*SERMEN*SERMEN)/(NSUB-1.D0)
	SERSD = DSQRT(VAR)
	RETURN
	END
	SUBROUTINE STATZ(VOLSPA,NGRID,NACTVE,NVAR,IND,CORDEN,PROD,MAXGRD,
     1  NINT,X1,X2,XMODE,X025,X25,X50,X75,X975,SCALINFO,NSUB,MAXDIM)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION CORDEN(MAXGRD,MAXDIM+1),PROD(MAXGRD),X(1999),
     1  PROB(1998),CUMPRO(0:1998)
	NEWINT = NINT
	IF(2*NSUB .GT. NEWINT) NEWINT = 2*NSUB
	XINT=(X2-X1)/NEWINT
	X(1)=X1
	X(NEWINT+1) = X2
	DO 5 I=1,NEWINT-1
    5   X(I+1)=X(I)+XINT
	DO 1000 INTR=1,NEWINT
	DO IG=1,NACTVE
	  W = 0.D0
	  XX = CORDEN(IG,IND)
	  IF(XX .GE. X(INTR) .AND. XX .LT. X(INTR+1)) W = 1.D0
	  IF(INTR .EQ. NEWINT .AND. XX .GE. X(INTR)) W = 1.D0
          PROD(IG) = CORDEN(IG,NVAR+1)*W
	END DO
 1000  CALL NOTINT(VOLSPA,NGRID,NACTVE,PROD,MAXGRD,PROB(INTR))
	INTMAX=1
	DO INTR=2,NEWINT
	  IF(PROB(INTR) .GT. PROB(INTMAX)) INTMAX=INTR
	END DO
	XMODE=(X(INTMAX)+X(INTMAX+1))/2.D0
	SUM=0.D0
	DO I=1,NEWINT
	IF (PROB(I) .GT. 0.D0) THEN
	  PI=PROB(I)
	  SUM=SUM+PI*DLOG(PI)
	ENDIF
	END DO
	DL2=DLOG(2.D0)
	SUM = SUM/DL2
        DINT=NEWINT
	FACT=100.D0*DL2/DLOG(DINT/NSUB)
	SCALINFO = FACT*(SUM + DLOG(DINT)/DL2)
	CUMPRO(0)=0.D0
	DO 1200 INTR=1,NEWINT
	CUMPRO(INTR)=CUMPRO(INTR-1)+PROB(INTR)
	IF(CUMPRO(INTR-1) .LT. .025D0 .AND. CUMPRO(INTR) .GE. .025D0)
     1  IND025=INTR
	IF(CUMPRO(INTR-1) .LT. .25D0 .AND. CUMPRO(INTR) .GE. .25D0)
     1  IND25=INTR
	IF(CUMPRO(INTR-1) .LT. .50D0 .AND. CUMPRO(INTR) .GE. .50D0)
     1  IND50=INTR
	IF(CUMPRO(INTR-1) .LT. .75D0 .AND. CUMPRO(INTR) .GE. .75D0)
     1  IND75=INTR
	IF(CUMPRO(INTR-1) .LT. .975D0 .AND. CUMPRO(INTR) .GE. .975D0)
     1  IND975=INTR
 1200 CONTINUE
	X025 = X(IND025)+(X(IND025+1)-X(IND025))*
     1  (.025D0-CUMPRO(IND025-1))/(CUMPRO(IND025)-CUMPRO(IND025-1))
	X25 = X(IND25)+(X(IND25+1)-X(IND25))*
     1  (.25D0-CUMPRO(IND25-1))/(CUMPRO(IND25)-CUMPRO(IND25-1))
	X50 = X(IND50)+(X(IND50+1)-X(IND50))*
     1  (.50D0-CUMPRO(IND50-1))/(CUMPRO(IND50)-CUMPRO(IND50-1))
	X75 = X(IND75)+(X(IND75+1)-X(IND75))*
     1  (.75D0-CUMPRO(IND75-1))/(CUMPRO(IND75)-CUMPRO(IND75-1))
	X975 = X(IND975)+(X(IND975+1)-X(IND975))*
     1  (.975D0-CUMPRO(IND975-1))/(CUMPRO(IND975)-CUMPRO(IND975-1))
	RETURN
	END
	SUBROUTINE NOTINT(VOLSPA,NGRID,NACTVE,FUNC,MAXGRD,ESTINT)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION FUNC(MAXGRD)
	SUM=0.D0
	DO 100 IG=1,NACTVE
  100   SUM=SUM+FUNC(IG)
	ESTINT=VOLSPA*SUM/NGRID
	RETURN
	END
	SUBROUTINE DELAY(DEL)
 	SEC1=ISTART/100.
	RETURN
	END
        SUBROUTINE PUTASS(PATHFILE,IASS,C0P,C1P,C2P,C3P,MAXOBS,
     1  NUMEQT,IALLPAT,ASSMULT,GENCOEF,NCSTORE,MAXOBDIM,YO,MAXNUMEQ)
        IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION IASS(MAXNUMEQ),C0P(MAXNUMEQ),C1P(MAXNUMEQ),
     1 C2P(MAXNUMEQ),C3P(MAXNUMEQ),GENCOEF(MAXNUMEQ,5,4),
     2 IALLPAT(MAXNUMEQ),ASSMULT(MAXNUMEQ),NCSTORE(MAXNUMEQ),
     3 YO(MAXOBDIM,MAXNUMEQ)
        CHARACTER PATHFILE*73,READLINE*1000,ERRFIL*20
      COMMON/ERROR/ERRFIL
    3   FORMAT(A1000)
	OPEN(21,FILE=PATHFILE,STATUS='OLD')
    5	READ(21,3,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) THEN
	 WRITE(*,56) PATHFILE
   56    FORMAT(//' PATIENT FILE '/
     1'    ',A73/
     2' IS NOT AN ACCEPTABLE WORKING COPY FILE. SUCH A FILE MUST HAVE '/
     2' "ASSAY COEFFICIENTS ... " NEAR THE BOTTOM OF THE FILE.'//
     3' THE PROGRAM STOPS. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,56) PATHFILE
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	IF(READLINE(1:9) .NE. 'ASSAY COE') GO TO 5
	IF(READLINE(20:25) .EQ. 'FOLLOW' ) ICOFF = 1
	IF(READLINE(20:25) .NE. 'FOLLOW' ) ICOFF = 0
	REWIND(21)
   35	READ(21,3,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) THEN
	 WRITE(*,57) PATHFILE
   57    FORMAT(//' PATIENT FILE '/
     1'    ',A73/
     2' IS NOT AN ACCEPTABLE WORKING COPY FILE. SUCH A FILE MUST HAVE '/
     2' A LINE WITH "NO. OF OBSERVED VALUE TIMES" IN COLUMNS 12:38.'//
     3' THE PROGRAM STOPS. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,57) PATHFILE
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	IF(READLINE(12:38) .NE. 'NO. OF OBSERVED VALUE TIMES') GO TO 35
	BACKSPACE(21)
   13   FORMAT(T2,I5)
        READ(21,13) NOBS
	IF(NOBS .GT. MAXOBS) MAXOBS = NOBS
         DO I=1,NOBS
          READ(21,*) TIMM,(YO(I,J),J=1,NUMEQT)
	 END DO
	OPEN(27,STATUS='SCRATCH')
	REWIND(21)
   10	READ(21,3,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0 .OR. READLINE(1:5) .EQ. 'ASSAY' ) GO TO 25
	WRITE(27,3) READLINE
	GO TO 10
   25	READLINE = 'ASSAY COEFFICIENTS FOLLOW, ONE SET FOR EACH OUTPUT EQU
     1ATION:'
        WRITE(27,3) READLINE
	IF(ICOFF .EQ. 0) THEN
	DO IEQ = 1,NUMEQT
	IF(IASS(IEQ) .EQ. 1 .OR. IASS(IEQ) .EQ. 2) WRITE(27,16)
     1  C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
   16    FORMAT(4(F16.8,2X))
	IF(IASS(IEQ) .EQ. 4) THEN
   20	WRITE(*,18) PATHFILE,IEQ
   18   FORMAT(///' ****************************************************
     1********************'/
     1' PATIENT FILE ',A73/
     2' CURRENTLY HAS NO ASSAY COEFFICIENTS. FOR OUTPUT EQUATION ',I2,/
     3' THE GENERAL ASSAY COEFFICIENTS ARE: ')
	WRITE(*,16) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	WRITE(*,19)
   19   FORMAT(/' ENTER 1 TO USE THESE GENERAL COEFFICIENTS;'/
     1' ENTER 0 TO USE A DIFFERENT SET OF VALUES:  ')
	READ(*,*,ERR=20) IUSE
	IF(IUSE .NE. 0 .AND. IUSE .NE. 1) GO TO 20
	IF(IUSE .EQ. 1) WRITE(27,16) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	IF(IUSE .EQ. 0) THEN
	 CALL USECS(IEQ,NCSTORE,GENCOEF,C0,C1,C2,C3,MAXNUMEQ)
	 WRITE(27,16) C0,C1,C2,C3
	ENDIF
	ENDIF
	IF(IASS(IEQ) .EQ. 3 .AND. IALLPAT(IEQ) .EQ. 1)
     1  WRITE(27,16) ASSMULT(IEQ)*C0P(IEQ), ASSMULT(IEQ)*C1P(IEQ),
     2               ASSMULT(IEQ)*C2P(IEQ), ASSMULT(IEQ)*C3P(IEQ)
	IF(IASS(IEQ) .EQ. 3 .AND. IALLPAT(IEQ) .EQ. 0) THEN
  240	 WRITE(*,227) PATHFILE,IEQ,C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ),
     1   ASSMULT(IEQ),ASSMULT(IEQ)*C0P(IEQ),ASSMULT(IEQ)*C1P(IEQ),
     2   ASSMULT(IEQ)*C2P(IEQ),ASSMULT(IEQ)*C3P(IEQ)
  227   FORMAT(///' ****************************************************
     1********************'/
     1' FILE  ',A73/
     2' HAS NO ASSAY COEFFICIENTS FOR OUTPUT EQUATION ',I1,'; THE GENERA
     1L (DEFAULT)'/
     2' COEFFICIENTS ARE:  ' ,4(G12.6,1X),//
     1' ENTER 1 TO MULTIPLY THESE GENERAL COEFFICIENTS BY ',G12.6,/
     2'         I.E., USE ',4(G12.6,1X)/
     2' ENTER 2 TO USE THE GENERAL COEFFICIENTS; '/
     3' ENTER 0 TO USE A DIFFERENT SET OF VALUES:  ')
	READ(*,*,ERR=240) IUSE
	IF(IUSE .NE. 0 .AND. IUSE .NE. 1 .AND. IUSE .NE. 2) GO TO 240
	IF(IUSE .EQ. 1) WRITE(27,16) ASSMULT(IEQ)*C0P(IEQ),ASSMULT(IEQ)*
     1    C1P(IEQ),ASSMULT(IEQ)*C2P(IEQ),ASSMULT(IEQ)*C3P(IEQ)
	IF(IUSE .EQ. 2) WRITE(27,16) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	IF(IUSE .EQ. 0) THEN
	 CALL USECS(IEQ,NCSTORE,GENCOEF,C0,C1,C2,C3,MAXNUMEQ)
	 WRITE(27,16) C0,C1,C2,C3
	ENDIF
  250	WRITE(*,228) ASSMULT(IEQ)
  228   FORMAT(/' ENTER 1 TO CONTINUE EXAMINING ASSAY COEFFICIENTS ON'/
     1' 	A PATIENT - BY - PATIENT BASIS; '/
     2' ENTER 0 TO MULTIPLY THE ASSAY COEFFICIENTS OF ALL SUBSEQUENT'/
     3'		PATIENTS (OR THE GENERAL COEFFICIENTS FOR THOSE PATIENTS
     4'/
     5'		WITHOUT COEFFICIENTS) BY ',G12.6,': ')
	READ(*,*,ERR=250) ICONT
	IF(ICONT .NE. 0 .AND. ICONT .NE. 1) GO TO 250
	IF(ICONT .EQ. 0) IALLPAT(IEQ) = 1
	ENDIF
	END DO
	ENDIF
	IF(ICOFF .EQ. 1) THEN
	 DO IEQ = 1,NUMEQT
	READ(21,*) C0,C1,C2,C3
	IF(IASS(IEQ) .EQ. 1) WRITE(27,16) C0,C1,C2,C3
	IF(IASS(IEQ) .EQ. 2) WRITE(27,16) C0P(IEQ),C1P(IEQ),C2P(IEQ),
     1  C3P(IEQ)
	IF(IASS(IEQ) .EQ. 3 .AND. IALLPAT(IEQ) .EQ. 1)
     1  WRITE(27,16) ASSMULT(IEQ)*C0, ASSMULT(IEQ)*C1, ASSMULT(IEQ)*C2,
     2               ASSMULT(IEQ)*C3
	IF(IASS(IEQ) .EQ. 3 .AND. IALLPAT(IEQ) .EQ. 0) THEN
  140	 WRITE(*,127) PATHFILE,IEQ,C0,C1,C2,C3,ASSMULT(IEQ),ASSMULT(IEQ)
     1   *C0,ASSMULT(IEQ)*C1,ASSMULT(IEQ)*C2,ASSMULT(IEQ)*C3
  127   FORMAT(///' ****************************************************
     1********************'/
     1' FILE ',A73/
     2' CURRENTLY CONTAINS THE FOLLOWING ASSAY COEFFICIENTS FOR OUTPUT'/
     3' EQUATION ',I1,': '/
     2'  ',4(G12.6,1X),//
     1' ENTER 1 TO MULTIPLY THESE COEFFICIENTS BY ',G12.6,/
     2'         I.E., USE ',4(G12.6,1X)/
     2' ENTER 2 TO LEAVE THESE COEFFICIENTS UNCHANGED; '/
     3' ENTER 0 TO USE A DIFFERENT SET OF VALUES:  ')
	READ(*,*,ERR=140) IUSE
	IF(IUSE .NE. 0 .AND. IUSE .NE. 1 .AND. IUSE .NE. 2) GO TO 140
	IF(IUSE .EQ. 1) WRITE(27,16) ASSMULT(IEQ)*C0,ASSMULT(IEQ)*C1,
     1				     ASSMULT(IEQ)*C2,ASSMULT(IEQ)*C3
	IF(IUSE .EQ. 2) WRITE(27,16) C0,C1,C2,C3
	IF(IUSE .EQ. 0) THEN
	 CALL USECS(IEQ,NCSTORE,GENCOEF,C0,C1,C2,C3,MAXNUMEQ)
	 WRITE(27,16) C0,C1,C2,C3
	ENDIF
  260	WRITE(*,228) ASSMULT(IEQ)
	READ(*,*,ERR=260) ICONT
	IF(ICONT .NE. 0 .AND. ICONT .NE. 1) GO TO 260
	IF(ICONT .EQ. 0) IALLPAT(IEQ) = 1
	ENDIF
	IF(IASS(IEQ) .EQ. 4) THEN
   40	 WRITE(*,28) PATHFILE,IEQ
   28   FORMAT(///' ****************************************************
     1********************'/
     1' FOR PATIENT FILE ',A73/
     2' AND OUTPUT EQUATION ',I2,' THE CURRENT COEFFICIENTS ARE: ')
	 WRITE(*,16) C0,C1,C2,C3
	 WRITE(*,29)
   29    FORMAT(/' ... AND THE GENERAL COEFFICIENTS ARE: ')
	 WRITE(*,16) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	 WRITE(*,31)
   31    FORMAT(/' ENTER 1 TO CONTINUE USING THE CURRENT COEFFICIENTS;'/
     2' ENTER 2 TO USE THE GENERAL COEFFICIENTS;'/
     3' ENTER 0 TO USE A DIFFERENT SET OF VALUES:  ')
	READ(*,*,ERR=40) IUSE
	IF(IUSE .NE. 0 .AND. IUSE .NE. 1 .AND. IUSE .NE. 2) GO TO 40
	IF(IUSE .EQ. 1) WRITE(27,16) C0,C1,C2,C3
	IF(IUSE .EQ. 2) WRITE(27,16) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
	IF(IUSE .EQ. 0) THEN
	 CALL USECS(IEQ,NCSTORE,GENCOEF,C0,C1,C2,C3,MAXNUMEQ)
	 WRITE(27,16) C0,C1,C2,C3
	ENDIF
	ENDIF
	END DO
	ENDIF
	CLOSE(21)
        OPEN(21,FILE=PATHFILE)
	REWIND(27)
   60	READ(27,3,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) THEN
	 CLOSE(27)
         CLOSE(21)
	 RETURN
	ENDIF
	WRITE(21,3) READLINE
	GO TO 60
	END
      SUBROUTINE USERPREP(NDIM,NP,NVAR,MAXDIM,PAR,NOFIX,PARFIX,NRANFIX,
     1 PARRANFIX,IRAN)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION IRAN(32)
      CHARACTER PAR(MAXDIM)*11,PARFIX(20)*11,READLINE*1000,
     1 PSYM(32)*11,RR*1,TEMP*11,C*1,ERRFIL*20,PARRANFIX(20)*11
      COMMON/ERROR/ERRFIL
    2   FORMAT(A1000)
   30	BACKSPACE(28)
	BACKSPACE(28)
	READ(28,2) READLINE
	IF(READLINE(8:9) .NE. 'N=') GO TO 30
	BACKSPACE(28)
	READ(28,3) NDIM
    3   FORMAT(T10,I3)
   40	READ(28,2) READLINE
	IF(READLINE(8:9) .NE. 'NP') GO TO 40
	BACKSPACE(28)
	READ(28,4) NP
    4   FORMAT(T11,I3)
   50	READ(28,2) READLINE
	IF(READLINE(8:11) .NE. 'PSYM') GO TO 50
	BACKSPACE(28)
	DO 70 I=1,NP
	IF(I .LE. 9) READ(28,14) TEMP
	IF(I .GE. 10 .AND. I .LE. 99) READ(28,6) TEMP
	C = ''''
	PSYM(I) = TEMP
	DO J=1,11
	 IF(TEMP(J:J) .EQ. C) THEN
	  PSYM(I) = TEMP(1:J-1)
	  GO TO 70
	 ENDIF
	END DO
   70   CONTINUE
   14   FORMAT(T17,A11)
    6   FORMAT(T18,A11)
   80	WRITE(*,7) NP
    7   FORMAT(/' FOR EACH OF THE ',I2,' PARAMETERS, '//
     1' ENTER "R" IF IT IS TO BE A RANDOM VARIABLE;'/
     2' ENTER "F" IF IT IS TO BE A FIXED AND KNOW PARAMETER;'/
     3' ENTER "U" IF IT IS TO BE A FIXED BUT UNKNOWN PARAMETER'/
     4'           TO BE ESTIMATED.'//)
	NVAR = 0
	NOFIX = 0
      NRANFIX = 0
	DO I=1,NP
   8     FORMAT(1X,A11,':  ')
   60	 WRITE(*,8) PSYM(I)
	 READ(*,9) RR
    9    FORMAT(A1)
	 IF(RR .NE. 'R' .AND. RR .NE. 'r' .AND. RR .NE. 'F'
     1      .AND. RR .NE. 'f' .AND. RR .NE. 'U' .AND. RR .NE. 'u')
     2    GO TO 60
	 IF(RR .EQ. 'R' .OR. RR .EQ. 'r') THEN
	  NVAR = NVAR+1
	  IF(NVAR .GT. MAXDIM) GO TO 110
	  PAR(NVAR) = PSYM(I)
	  IRAN(I) = 1
	 ENDIF
	 IF(RR .EQ. 'F' .OR. RR .EQ. 'f') THEN
	  NOFIX = NOFIX+1
	  PARFIX(NOFIX) = PSYM(I)
	  IRAN(I) = 0
	 ENDIF
	 IF(RR .EQ. 'U' .OR. RR .EQ. 'u') THEN
	  NRANFIX = NRANFIX+1
	  PARRANFIX(NRANFIX) = PSYM(I)
	  IRAN(I) = 2
	 ENDIF
	END DO
  110	IF(NVAR .GT. MAXDIM) THEN
	 WRITE(*,111) NVAR,MAXDIM
  111    FORMAT(//' YOU HAVE SELECTED ',I2,' PARAMETERS TO BE RANDOM'/
     1' VARIABLES. THE LIMIT IS CURRENTLY ',I2,'. PLEASE RESPECIFY'/
     2' YOUR PARAMETERS WITH THIS LIMIT IN MIND.'//)
	 GO TO 80
	ENDIF
	IF(NOFIX .GT. 20) THEN
	 WRITE(*,112) NOFIX
  112    FORMAT(//' YOU HAVE SELECTED ',I2,' PARAMETERS TO BE FIXED'/
     1' AND KNOWN PARAMETERS. THE LIMIT IS CURRENTLY 20. PLEASE'/
     2' RESPECIFY YOUR PARAMETERS WITH THIS LIMIT IN MIND.'//)
	 GO TO 80
	ENDIF
	IF(NRANFIX .GT. 20) THEN
	 WRITE(*,114) NRANFIX
  114    FORMAT(//' YOU HAVE SELECTED ',I2,' PARAMETERS TO BE FIXED'/
     1' BUT UNKNOWN PARAMETERS. THE LIMIT IS CURRENTLY 20. PLEASE'/
     2' RESPECIFY YOUR PARAMETERS WITH THIS LIMIT IN MIND.'//)
	 GO TO 80
	ENDIF
	IF(NVAR + NOFIX + NRANFIX .GT. 32) THEN
	 WRITE(*,113) NVAR + NOFIX + NRANFIX
  113    FORMAT(//' YOUR MODEL FILE HAS A TOTAL OF ',I2,' PARAMETERS.'/
     1' THE LIMIT IS CURRENTLY 32. PLEASE EDIT YOUR MODEL FILE SO '/
     2' THAT IT HAS .LE. 32 PARAMETERS. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,113) NVAR + NOFIX
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	RETURN
	END
	SUBROUTINE SUBRES(MAXSUB,JSUB,CORDEN,WORK,MAXGRD,MAXDIM,NVAR,
     1AB,PAR,NACTVE,IPUT,NGRID,VOLSPA,ISCROL,CENTER,PYJGX,PYJGXX)
	IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION AB(30,2),EX(30),COV(30,30),
     1E(30,30),STD(30),CORR(30,30),COFVR(30),
     1WORK(MAXGRD),CORDEN(MAXGRD,MAXDIM+1),CENTER(3,30),
     2PYJGX(MAXSUB,MAXGRD),PYJGXX(MAXGRD)
	REAL*8 KU
	CHARACTER PAR(30)*11
   	NSUB=1
	NINT=100
	WRITE(*,5432)
 5432   FORMAT('1')
	DENMAX=CORDEN(1,NVAR+1)
	DO I=1,NACTVE
	  D=CORDEN(I,NVAR+1)
	  IF(D .GT. DENMAX) DENMAX=D
	END DO
	SUMD=0.
	NEWIND=0
	DO I=1,NACTVE
	  D=CORDEN(I,NVAR+1)
	  IF(D .GT. 1.D-10*DENMAX) THEN
	    SUMD=SUMD+D
	    NEWIND=NEWIND+1
	      DO J=1,NVAR
		CORDEN(NEWIND,J)=CORDEN(I,J)
	      END DO
	    CORDEN(NEWIND,NVAR+1)=D
	    PYJGXX(NEWIND)=PYJGX(JSUB,I)
	  ENDIF
	END DO
	NACTVE=NEWIND
	FACT = NGRID/VOLSPA/SUMD
	DO I=1,NACTVE
	  CORDEN(I,NVAR+1)=CORDEN(I,NVAR+1)*FACT
	END DO
	IAGAIN = 0
 3000	WRITE(*,1241) JSUB
 1241   FORMAT(//' THE BAYESIAN POSTERIOR DENSITY RESULTS FOLLOW FOR '/
     1' SUBJECT NO. ',I4/)
	IF(IAGAIN .EQ. 1) GO TO 3010
	DO 800 IG=1,NACTVE
  800   WORK(IG)=PYJGXX(IG)*CORDEN(IG,NVAR+1)
      CALL NOTINT(VOLSPA,NGRID,NACTVE,WORK,MAXGRD,PYJ)
	DO IG=1,NACTVE
	 CORDEN(IG,NVAR+1) = WORK(IG)/PYJ
	END DO
	SLPYJ=DLOG(PYJ)
 3010	WRITE(*,8)
    8   FORMAT(/' THE TRUE (NUMERICAL) LOG-LIKELIHOOD OF THE BAYESIAN'/
     1' POSTERIOR DENSITY FOR THIS SUBJECT, ASSUMING THE PRIOR DENSITY'/
     2' IS THE FINAL CYCLE DENSITY FROM THE POPULATION ANALYSIS, IS: ')
	WRITE(*,*) SLPYJ
	WRITE(*,*)
	WRITE(*,*)' THE NO. OF ACTIVE GRID POINTS IS NOW ',NACTVE
	WRITE(*,*)
	WRITE(*,*)' THE INITIAL NO. OF GRID POINTS WAS ',NGRID
	WRITE(*,*)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0) THEN
	 WRITE(31,8)
	 WRITE(31,*) SLPYJ
	 WRITE(31,*)
	 WRITE(31,*)' THE NO. OF ACTIVE GRID POINTS IS NOW ',NACTVE
	 WRITE(31,*)
	 WRITE(31,*)' THE INITIAL NO. OF GRID POINTS WAS ',NGRID
	 WRITE(31,*)
	ENDIF
	IF(IAGAIN .EQ. 1) CALL PAUSE
	IF(IAGAIN .EQ. 1) GO TO 3020
	FACT=VOLSPA/NGRID
	SUM=0.D0
	DO I=1,NACTVE
	PI=CORDEN(I,NVAR+1)*FACT
	IF (PI .GT. 1.D-200) THEN
	  SUM=SUM+PI*DLOG(PI)
	ENDIF
	END DO
	DL2=DLOG(2.D0)
	SUM = SUM/DL2
	ENT = -SUM
        DGRID=NGRID
	FACT=100.D0*DL2/DLOG(DGRID/NSUB)
	SUM = FACT*(SUM + DLOG(DGRID)/DL2)
 3020   WRITE(*,31) SUM
	WRITE(*,131) ENT
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0) WRITE(31,31) SUM
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0) WRITE(31,131) ENT
   31 FORMAT(/' THE SCALED INFO FOR THIS DENSITY IS ',F10.2,' %'/)
  131 FORMAT(/' THE ENTROPY FOR THIS DENSITY IS ',G11.4/)
	IF(IAGAIN .EQ. 1) GO TO 3030
	DO 1100 I=1,NVAR
	DO IG=1,NACTVE
	  WORK(IG)=CORDEN(IG,I)*CORDEN(IG,NVAR+1)
	END DO
	II=I
        CALL NOTINT(VOLSPA,NGRID,NACTVE,WORK,MAXGRD,EX(II))
	DO 1100 J=1,I
	DO IG=1,NACTVE
	  WORK(IG)=CORDEN(IG,I)*CORDEN(IG,J)*CORDEN(IG,NVAR+1)
	END DO
	JJ=J
 1100   CALL NOTINT(VOLSPA,NGRID,NACTVE,WORK,MAXGRD,E(II,JJ))
      DO 190 I=1,NVAR
      DO 190 J=1,I
  190 COV(I,J)=E(I,J)-EX(I)*EX(J)
 3030	WRITE(*,*)' THE MEANS ARE: '
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0) WRITE(31,*)' THE MEANS ARE: '
	WRITE(*,5104) (PAR(I),I=1,NVAR)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0)
     1  WRITE(31,5104) (PAR(I),I=1,NVAR)
 5104   FORMAT(5X,30(A11,2X))
	WRITE(*,5103) (EX(I),I=1,NVAR)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0)
     1  WRITE(31,5103) (EX(I),I=1,NVAR)
 5103   FORMAT(1X,30(G12.6,1X))
	IF(IAGAIN .EQ. 1) CALL PAUSE
	ICOVL0=0
	DO I=1,NVAR
	IF(COV(I,I) .LE. 0.D0) THEN
	 ICOVL0=1
	 WRITE(*,1652) I
	 IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0) WRITE(31,1652) I
	IF(IAGAIN .EQ. 1) CALL PAUSE
	ENDIF
	END DO
 1652   FORMAT(/' THE VARIANCE FOR PARAMETER NO. ',I2,' IS NUMERICALLY'/
     1' .LE. 0; ALL COVARIANCE-RELATED OUTPUT WILL BE SUPPRESSED FOR '/
     2' THIS CYCLE (ALSO, SKEWNESS AND KURTOSIS WILL HAVE -99999999'/
     3' IN THEIR LOCATIONS.)')
	IF(ICOVL0 .EQ. 0) THEN
      WRITE(*,13)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0) WRITE(31,13)
   13 FORMAT(/' THE COV MATRIX IS, IN LOWER TRI FORM:')
	WRITE(*,5104) (PAR(I),I=1,NVAR)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0)
     1  WRITE(31,5104) (PAR(I),I=1,NVAR)
      DO 200 I=1,NVAR
      IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0)WRITE(31,5103) (COV(I,J),J=1,I)
  200 WRITE(*,5103) (COV(I,J),J=1,I)
	IF(IAGAIN .EQ. 1) GO TO 3040
	DO 6070 I=1,NVAR
	STD(I)=DSQRT(COV(I,I))
	COFVR(I)=STD(I)*1.D2/EX(I)
	DO 6070 J=1,I
 6070   CORR(I,J)=COV(I,J)/STD(I)/STD(J)
 3040	WRITE(*,6071)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0) WRITE(31,6071)
 6071   FORMAT(/' THE STANDARD DEVIATIONS ARE, RESPECTIVELY: ')
	WRITE(*,5104) (PAR(I),I=1,NVAR)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0)
     1  WRITE(31,5104) (PAR(I),I=1,NVAR)
	WRITE(*,5103) (STD(I),I=1,NVAR)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0)
     1  WRITE(31,5103) (STD(I),I=1,NVAR)
	IF(IAGAIN .EQ. 1) CALL PAUSE
	WRITE(*,6072)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0) WRITE(31,6072)
 6072   FORMAT(/' THE PERCENT COEFFICIENTS OF VARIATION ARE, RESP.: ')
	WRITE(*,5104) (PAR(I),I=1,NVAR)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0)
     1  WRITE(31,5104) (PAR(I),I=1,NVAR)
	WRITE(*,5103) (COFVR(I),I=1,NVAR)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0)
     1  WRITE(31,5103) (COFVR(I),I=1,NVAR)
	WRITE(*,6073)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0) WRITE(31,6073)
 6073   FORMAT(/' THE CORR. MATRIX IS, IN LOWER TRIANGULAR FORM: ')
	WRITE(*,5104) (PAR(I),I=1,NVAR)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0)
     1  WRITE(31,5104) (PAR(I),I=1,NVAR)
	DO 6080 I=1,NVAR
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0)
     1  WRITE(31,5103) (CORR(I,J),J=1,I)
 6080   WRITE(*,5103) (CORR(I,J),J=1,I)
	IF(IAGAIN .EQ. 1) CALL PAUSE
	ENDIF
	WRITE(*,6091) NVAR
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0) WRITE(31,6091) NVAR
 6091   FORMAT(//' THE FOLLOWING ',I2,' SETS OF LINES GIVE ADDITIONAL'/
     1' STATISTICS FOR THE VARIABLES. FOR EACH SET:'//
     2' THE 1ST LINE GIVES THE MODE, THE SKEWNESS, THE KURTOSIS, AND '/
     3' THE 2.5 %-TILE VALUE OF THE DISTRIBUTION. '//
     4' THE 2ND LINE GIVES THE 25, 50, 75, AND 97.5 %-TILE VALUES OF '/
     5' THE DISTRIBUTION. '//
     6' THE 3RD LINE GIVES THREE ADDITIONAL AD-HOC ESTIMATES OF THE '/
     6' STANDARD DEVIATION FOR THAT MARGINAL DENSITY. THE 1ST S.D. '/
     7' ESTIMATE IS THE STANDARD DEVIATION OF A NORMAL DISTRIBUTION '/
     8' HAVING THE SAME [25, 75] %-TILE RANGE AS THAT VARIABLE. THE'/
     9' 2ND ESTIMATE IS THE STANDARD DEVIATION OF A NORMAL DIST.'/
     1' HAVING THE SAME [2.5, 97.5] %-TILE RANGE AS THAT VARIABLE. THE'/
     2' 3RD ESTIMATE IS THE AVERAGE OF THE FIRST TWO. THE 4TH VALUE'/
     3' IN THE LINE IS THE THE % SCALED INFO FOR THAT MARGINAL DENS.'//)
	IF(IAGAIN .EQ. 1) CALL PAUSE
	DO 6090 I=1,NVAR
	IND=I
	IF(I .EQ. 4 .OR. I .EQ. 7) THEN
	IF(IAGAIN .EQ. 1) CALL PAUSE
	ENDIF
	CALL STATZ(VOLSPA,NGRID,NACTVE,NVAR,IND,CORDEN,WORK,MAXGRD,NINT,
     1  AB(IND,1),AB(IND,2),XMODE,X025,X25,X50,X75,X975,SCALINFO,NSUB,
     2  MAXDIM)
	CENTER(2,IND)=X50
	CENTER(3,IND)=XMODE
	SDEST1 = (X75-X25)/1.349
	SDEST2 = (X975-X025)/3.92
	SDEST3 = .5D0*(SDEST1+SDEST2)
	IF(ICOVL0 .EQ. 1) THEN
	  SK = -99999999
	  KU = -99999999
	ENDIF
	IF(ICOVL0 .EQ. 0) THEN
	DO IG=1,NACTVE
	  XX = CORDEN(IG,IND)
          WORK(IG) = CORDEN(IG,NVAR+1)*(XX-EX(IND))**3
	END DO
        CALL NOTINT(VOLSPA,NGRID,NACTVE,WORK,MAXGRD,SK)
	SK=SK/STD(I)**3
	DO IG=1,NACTVE
	  XX = CORDEN(IG,IND)
          WORK(IG) = CORDEN(IG,NVAR+1)*(XX-EX(IND))**4
	END DO
        CALL NOTINT(VOLSPA,NGRID,NACTVE,WORK,MAXGRD,KU)
	KU=KU/STD(I)**4
	ENDIF
	WRITE(*,6092) PAR(IND)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0) WRITE(31,6092) PAR(IND)
 6092   FORMAT(/' ',A11,':')
	WRITE(*,6093) XMODE,SK,KU,X025
	WRITE(*,6093) X25,X50,X75,X975
	WRITE(*,6093) SDEST1,SDEST2,SDEST3,SCALINFO
 6093   FORMAT(1X,4(G15.8,2X))
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0) THEN
          WRITE(31,6093) XMODE,SK,KU,X025
          WRITE(31,6093) X25,X50,X75,X975
          WRITE(31,6093) SDEST1,SDEST2,SDEST3,SCALINFO
	ENDIF
 6090   CONTINUE
	WRITE(*,*)
	IF(IPUT .EQ. 1 .AND. IAGAIN .EQ. 0) WRITE(31,*)
	IF(NVAR .EQ. 3 .OR. NVAR .EQ. 6) THEN
	 IF(IAGAIN .EQ. 1) CALL PAUSE
	ENDIF
	IF(ISCROL .EQ. 1) GO TO 3110
 3050	 WRITE(*,3041)
 3041    FORMAT(//' ENTER 0 TO SEE THE ABOVE VALUES AGAIN;'/
     2' ENTER 1 TO PROCEED: ')
	 READ(*,*,ERR=3050) IA
	 IF(IA .NE. 0 .AND. IA .NE. 1) GO TO 3050
	 IF(IA .EQ. 0) THEN
	  IAGAIN=1
	  GO TO 3000
	 ENDIF
 3110	 DO I=1,NVAR
	  CENTER(1,I)=EX(I)
	 END DO
	END
	SUBROUTINE MAKEDRIV(PATH,NOB,FORFILE,MAXSUB,MAXDIM,MAXGRD,
     1  NUMEQT,MAXOBS,OSName,CopyFile,DeleteFile)
	IMPLICIT REAL*8(A-H,O-Z)
	CHARACTER FORFILE*20,PATH*60,TMPFILE*13,PATHFILE*73,
     1  OSName*20,CopyFile*5,DeleteFile*4
	MAXACT = MAXGRD
      TMPFILE = ' '
	TMPFILE = 'npagdriv.f'
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(31,FILE=PATHFILE,ERR=5475,STATUS='NEW')
	GO TO 5480
 5475   WRITE(*,*)' FILE   npagdriv.f ALREADY EXISTS. IT WILL BE'
	WRITE(*,*)' COPIED TO   npagdriv.bak.   THEN THE npagdriv.f'
  	WRITE(*,*)' FOR THIS RUN WILL BE CREATED.'
        CALL SYSTEM(CopyFile//PATH(1:NOB)//'npagdriv.f '//PATH(1:NOB)
     1//'npagdriv.bak')
	OPEN(31,FILE=PATHFILE)
 5480   WRITE(31,5)
    5   FORMAT(/'      IMPLICIT REAL*8(A-H,O-Z)')
        WRITE(31,1) MAXSUB,MAXDIM,MAXGRD,MAXACT,NUMEQT,MAXOBS
    1   FORMAT(/'      PARAMETER(MAXSUB = ',I4,', MAXDIM = ',I2,','/
     1'     1  MAXGRD=',I9,', MAXACT = ',I8,','/
     2'     1  NUMEQT=',I2,', MAXOBS = ',I5,')')
	WRITE(31,2)
    2   FORMAT(/'      DIMENSION WORK(MAXGRD),WORKK(MAXGRD),'/
     1'     1  SPXGYJ(MAXGRD),DXI(MAXGRD),PYJGX(MAXSUB,MAXACT),'/
     2'     2  PYJGXX(MAXACT),DENSTOR(MAXGRD,4),EXX(MAXSUB,3,30),'/
     3'     3  CORDEN(MAXGRD,MAXDIM+1),CORHOLD(MAXGRD,MAXDIM+1),'/
     4'     4  YPREDPOP(MAXSUB,NUMEQT,MAXOBS,3),'/
     5'     5  YPREDPOPT(MAXSUB,NUMEQT,7201,3),'/
     6'     6  YPREDBAY(MAXSUB,NUMEQT,MAXOBS,3),'/
     7'     7  CORDLAST(MAXGRD,MAXDIM+1)')
	WRITE(31,3)
    3   FORMAT(/'      CALL NPAG(MAXSUB,MAXGRD,MAXDIM,MAXACT,'/
     1'     1  NUMEQT,MAXOBS,WORK,WORKK,SPXGYJ,DXI,PYJGX,PYJGXX,'/
     2'     2  DENSTOR,EXX,CORDEN,CORHOLD,YPREDPOP,YPREDPOPT,'/
     3'     3  YPREDBAY,CORDLAST)')
	WRITE(31,4)
    4   FORMAT(/'      STOP'/
     1'      END'/
     2'C'/
     3'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC'/
     4'C'/)
	CLOSE(31)
        IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
          CALL SYSTEM('cat '//PATH(1:NOB)//'npagdriv.f  '//
     1       PATH(1:NOB)//FORFILE//' >npem.tmp;mv npem.tmp npagdriv.f')
        ELSE IF (INDEX(OSName,"DOS",.TRUE.).eq.1) THEN
          CALL SYSTEM(CopyFile//PATH(1:NOB)//'npagdriv.f + '//
     1       PATH(1:NOB)//FORFILE)
        ENDIF
        print *,OSName
	IF(NOB .NE. 0) THEN
	 CALL SYSTEM(CopyFile//' npagdriv.f '//PATH(1:NOB)//'npagdriv.f')
	ENDIF
	RETURN
	END
      SUBROUTINE TOPFIL(NDRUG,AF,NSUB,NVAR,PAR,NOFIX,PARFIX,NRANFIX,
     1 PARRANFIX)
	IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION AF(7)
	CHARACTER PAR(30)*11,PARFIX(20)*11,PARRANFIX(20)*11
        IF(NDRUG .EQ. -1) WRITE(33,1) AF(1)
    1   FORMAT(/' ALL DRUGS IN THE ANALYSIS HAD THE SAME AF, ',G12.6)
        IF(NDRUG .NE. -1) THEN
         WRITE(33,6) NDRUG
    6    FORMAT(/' THE AF VALUES FOR THE ',I2,' DRUG(S) FOLLOW, ONE TO'/
     1' A LINE: ')
         DO I = 1,NDRUG
          WRITE(33,*) AF(I)
         END DO
        ENDIF
        WRITE(33,7) NVAR
    7   FORMAT(/' THERE ARE ',I2,' RANDOM VARIABLES. THEIR NAMES ARE: ')
	DO I=1,NVAR
	 WRITE(33,2) PAR(I)
	END DO
    2   FORMAT(3X,A11)
	WRITE(33,3) NOFIX
    3   FORMAT(/' THE NUMBER OF FIXED PARAMETER(S) IS ',I2,/
     1' ITS (THEIR) NAME(S) IS (ARE): ')
	DO I=1,NOFIX
	 WRITE(33,2) PARFIX(I)
	END DO
      WRITE(33,13) NRANFIX
   13 FORMAT(/' THE NUMBER OF RANFIX PARAMETER(S) IS ',I2,/
     1' ITS (THEIR) NAME(S) IS (ARE): ')
      DO I=1,NRANFIX
	 WRITE(33,2) PARRANFIX(I)
	END DO
	WRITE(33,4) NSUB
    4   FORMAT(/' EACH OF THE FOLLOWING ',I4,' LINES GIVES THE VALUES'/
     1' FOR ONE SUBJECT ... PROB., RANDOM VALUES, FIXED VALUES, AND '/
     2' RANFIX ESTIMATES, IN ORDER: ')
	RETURN
	END
	SUBROUTINE GETNUMEQ(PATH,NOB,ICALL,IFORMT,PREFIX,EXT,BLOCKPAT,
     1   NUMEQT,NDRUG,MAXSUB,MAXNUMEQ)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION C0P(MAXNUMEQ),C1P(MAXNUMEQ),C2P(MAXNUMEQ),C3P(MAXNUMEQ)
	CHARACTER PREFIX*5,EXT*3,READLINE*1000,PATNEW*20,PATH*60,
     1   TMPFILE*13,PATHFIL2*73,BLOCKPAT*20,CODEPAT*15,ERRFIL*20
      COMMON/ERROR/ERRFIL
    2   FORMAT(A20)
	IF(ICALL .EQ. 1) THEN
        IF(IFORMT .EQ. 1) WRITE(*,4)
    4   FORMAT(//' ONE OF YOUR PATIENT FILES WILL NOW BE OPENED TO'/
     1' READ THE NUMBER OF OUTPUT EQUATIONS, AND THE NUMBER OF DRUGS.'/
     2' LATER, YOU WILL HAVE THE OPTION TO CHANGE YOUR PATIENT '/
     3' FILENAMES. IF YOU DO THIS, MAKE SURE THAT THE NEW SET OF FILES'/
     4' HAVE THE SAME NUMBER OF OUTPUT EQUATIONS AND THE SAME NUMBER'/
     5' OF DRUGS.'//)
	 IF(IFORMT .EQ. 3) WRITE(*,14) BLOCKPAT
   14    FORMAT(//' YOUR BLOCK FORMAT PATIENT FILE, ',A20,' WILL NOW'/
     1' BE OPENED TO READ THE NUMBER OF OUTPUT EQUATIONS, AND THE '/
     2' NUMBER OF DRUGS. LATER YOU WILL HAVE THE OPTION TO CHANGE THE'/
     3' PATIENT INFORMATION. IF YOU DO THIS, MAKE SURE THAT THE NEW'/
     4' PATIENT INFORMATION HAS THE SAME NUMBER OF OUTPUT EQUATIONS'/
     5' AND THE SAME NUMBER OF DRUGS.'//)
	ENDIF
	IF(IFORMT .EQ. 1) THEN
	 PATNEW=PREFIX//'001'//'.'//EXT
       TMPFILE = ' '
	 TMPFILE = PATNEW
	 CALL FULLNAME(PATH,TMPFILE,PATHFIL2)
	 OPEN(21,FILE=PATHFIL2)
    3    FORMAT(A1000)
   35	 READ(21,3,IOSTAT=IEND) READLINE
        IF(IEND .LT. 0) THEN
         WRITE(*,58) PATHFIL2
   58    FORMAT(//' PATIENT FILE '/
     1'    ',A73/
     2' IS NOT AN ACCEPTABLE WORKING COPY FILE. SUCH A FILE MUST HAVE '/
     2' A LINE WITH "NO. OF DRUGS" IN COLUMNS 12:23.'//
     3' THE PROGRAM STOPS. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,58) PATHFIL2
        CLOSE(42)
	WRITE(*,*)' IN GETNUMEQ; PREFIX IS ',PREFIX
         CALL PAUSE
         STOP
        ENDIF
        IF(READLINE(12:23) .NE. 'NO. OF DRUGS') GO TO 35
        BACKSPACE(21)
   13   FORMAT(T2,I5)
        READ(21,13) NDRUG
   45	  READ(21,3,IOSTAT=IEND) READLINE
        IF(IEND .LT. 0) THEN
         WRITE(*,57) PATHFIL2
   57    FORMAT(//' PATIENT FILE '/
     1'    ',A73/
     2' IS NOT AN ACCEPTABLE WORKING COPY FILE. SUCH A FILE MUST HAVE '/
     2' A LINE WITH "NO. OF TOTAL OUTPUT EQUATIONS" IN COLUMNS 12:40.'//
     3' THE PROGRAM STOPS. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,57) PATHFIL2
        CLOSE(42)
         CALL PAUSE
         STOP
        ENDIF
        IF(READLINE(12:40) .NE. 'NO. OF TOTAL OUTPUT EQUATIONS')
     1   GO TO 45
        BACKSPACE(21)
        READ(21,13) NUMEQT
        CLOSE(21)
        ENDIF
	IF(IFORMT .EQ. 3) THEN
       TMPFILE = ' '
	 TMPFILE = BLOCKPAT
	 CALL FULLNAME(PATH,TMPFILE,PATHFIL2)
	 OPEN(87,FILE=PATHFIL2,STATUS='OLD')
        CALL CONVERTCSV
	 ICODEPAT = 0
 7126  FORMAT(A15)
	 READ(77,7126) CODEPAT
	 IF(CODEPAT .EQ. '"POPDATA APR_11') ICODEPAT = 1
	 IF(CODEPAT(1:14) .EQ. 'POPDATA APR_11') ICODEPAT = 1
       IF(CODEPAT .EQ. '"POPDATA DEC_11') ICODEPAT = 1
       IF(CODEPAT(1:14) .EQ. 'POPDATA DEC_11') ICODEPAT = 1
	 IF(ICODEPAT .EQ. 0) THEN
	  WRITE(*,3131)
 3131     FORMAT(//' YOUR PATIENT DATA BLOCK FORMAT FILE IS NOT FROM '/
     1' THE ALLOWABLE SET OF SUCH FILES.'//
     2' A PATIENT DATA BLOCK FORMAT FILE MUST HAVE "POPDATA XXX_XX IN'/
     3' COLUMNS 1 THROUGH 15 ON LINE 1, WHERE  XXX_XX  IS APR_11 OR A '/
     4' MORE RECENT DATE.'//)
	  WRITE(*,*)' THE PROGRAM STOPS.'
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3131)
         WRITE(42,*)' THE PROGRAM STOPS.'
        CLOSE(42)
	  CALL PAUSE
	  STOP
 	 ENDIF
       OPEN(67)
       REWIND(77)
       CALL NEWCSV
       CALL CSVCHANGE
       REWIND(66)
       CALL READBLOCK(2,NSUBR,MAXSUB,NUMEQT,NDRUG,PATH,C0P,C1P,C2P,C3P,
     1  MAXNUMEQ)
       CLOSE(66)
	ENDIF
	RETURN
	END
      SUBROUTINE USECS(IEQ,NCSTORE,GENCOEF,C0,C1,C2,C3,MAXNUMEQ)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION GENCOEF(MAXNUMEQ,5,4),NCSTORE(MAXNUMEQ)
	IF(NCSTORE(IEQ) .EQ. 0) IOLD = 0
	IF(NCSTORE(IEQ) .GT. 0) THEN
   35	 WRITE(*,24)
   24    FORMAT(' YOU MAY USE A PREVIOUSLY STORED SET OF COEFFICIENTS'/
     1' OR YOU MAY ENTER ANOTHER SET NOW.'/)
	  DO I=1,NCSTORE(IEQ)
	   WRITE(*,23) I, (GENCOEF(IEQ,I,J),J=1,4)
	  END DO
   23    FORMAT(' ','ENTER ',I1,' TO USE: ',4(G12.6,1X))
	 WRITE(*,26)
   26    FORMAT(/' ENTER 0 TO ENTER A NEW SET OF COEFFICIENTS: ')
	 READ(*,*,ERR=35) IOLD
	 IF(IOLD .LT. 0 .OR. IOLD .GT. NCSTORE(IEQ)) GO TO 35
	ENDIF
	IF(IOLD .GT. 0) THEN
	 C0 = GENCOEF(IEQ,IOLD,1)
	 C1 = GENCOEF(IEQ,IOLD,2)
	 C2 = GENCOEF(IEQ,IOLD,3)
	 C3 = GENCOEF(IEQ,IOLD,4)
	ENDIF
	IF(IOLD .EQ. 0) THEN
   30	 WRITE(*,21)
   21    FORMAT(' ENTER THE DESIRED ASSAY COEFFICIENTS, [C0,C1,C2,C3]'/
     1' FOR THIS FILE (RECALL ASSAY SD = C0+C1*Y+C2*Y**2+C3*Y**3): ')
	 READ(*,*,ERR=30) C0,C1,C2,C3
	 IF(NCSTORE(IEQ) .EQ. 5) WRITE(*,27) IEQ
   27    FORMAT(/' FOR OUTPUT EQUATION ',I1,' YOU HAVE ALREADY STORED'/
     1' 5 SETS OF ADDITIONAL COEFFICIENTS FOR POSSIBLE USE WITH '/
     2' SUBSEQUENT PATIENT DATA FILES. THESE COEFFICIENTS CANNOT BE '/
     3' STORED.'/)
	 IF(NCSTORE(IEQ) .EQ. 5) CALL PAUSE
	 IF(NCSTORE(IEQ) .LT. 5) THEN
   45	  WRITE(*,28) IEQ
   28     FORMAT(/' ENTER 1 TO STORE THESE COEFFS. FOR POSSIBLE USE'/
     1' 	WITH SUBSEQUENT PATIENT DATA FILES (FOR EQ. ',I1,'); '/
     2' ENTER 0 IF YOU DO NOT WANT TO SAVE THESE COEFFICIENTS: ')
	  READ(*,*,ERR=45) ISTORE
	  IF(ISTORE .NE. 0 .AND. ISTORE .NE. 1) GO TO 45
	  IF(ISTORE .EQ. 1) THEN
	   NCSTORE(IEQ) = NCSTORE(IEQ) + 1
	   GENCOEF(IEQ,NCSTORE(IEQ),1) = C0
	   GENCOEF(IEQ,NCSTORE(IEQ),2) = C1
	   GENCOEF(IEQ,NCSTORE(IEQ),3) = C2
	   GENCOEF(IEQ,NCSTORE(IEQ),4) = C3
	  ENDIF
	 ENDIF
	ENDIF
	RETURN
	END
	SUBROUTINE GETPATH(PATH,NOB,OSName)
	CHARACTER PATH*60,OSName*20,DIRIN*62,cwd*255
        INTEGER path_len
        LOGICAL dir_exists
        LOGICAL dup_dir
   10	WRITE(*,1)
    1   FORMAT(/' ENTER 1 IF THE FILES FOR THIS RUN ARE IN THE CURRENT D
     1IRECTORY; '/
     1' ENTER 0 OTHERWISE: ')
	READ(*,*,ERR=10) IPATH
	IF(IPATH .NE. 0 .AND. IPATH .NE. 1) GO TO 10
	IF(IPATH .EQ. 1) PATH = ' '
	NOB = 0
	IF(IPATH .EQ. 0) THEN
          CALL getcwd(cwd)
          IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
             WRITE(*,"(A14,A72)") "Your pwd is:",TRIM(cwd)
             WRITE(*,4)
          ELSE IF (INDEX(OSName,"DOS",.TRUE.).eq.1) THEN
             WRITE(*,3)
          ENDIF
    4    FORMAT(/' Enter the PATH, begining from root, e.g. /Users/UserN
     1ame/DirName,'/
     1' of your input files. Note that strlen(PATH) must be < 60 char.'/
     2' ENTER THE PATH NOW: ')
    3    FORMAT(/' ENTER THE LOCATION (PATH) OF YOUR INPUT FILES. NOTE'/
     1' THAT THE PATH IS LIMITED TO 60 CHARACTERS AND THAT EACH SUB-DIRE
     2CTORY'/
     3' CAN HAVE AT MOST 8 CHARACTERS (E.G, INSTEAD OF " \DIRECTORY ", U
     4SE '/
     5' THE DOS-EQUIVALENT NAME, WHICH MIGHT BE " \DIRECT~1 "). '//
     6' ENTER THE PATH NOW: ')
   20	 READ(*,2) PATH
    2    FORMAT(A60)
         DO I=1,59
          J = 59 + 1 - I
          IF(PATH(J:J) .NE. ' ') THEN
            NOB = J
            IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
              IF(PATH(J:J) .NE. '/') THEN
                PATH(J+1:J+1) = '/'
                NOB = J+1
              ENDIF
            ELSE IF (INDEX(OSName,"DOS",.TRUE.).eq.1) THEN
              IF(PATH(J:J) .NE. '\') THEN
                PATH(J+1:J+1) = '\'
                NOB = J+1
              ENDIF
            ENDIF
            EXIT
          ENDIF
         END DO
        IF (INDEX(OSName,"UNIX",.TRUE.).eq.1) THEN
          DIRIN=PATH(1:NOB)//'.'
          INQUIRE(FILE=DIRIN,EXIST=dir_exists)
          IF (dir_exists.eqv..FALSE.) THEN
             WRITE(*,"(A72)") "Requested PATH does not exist: "//PATH
             WRITE(*,"(A17)") "Enter PATH again:"
             PATH = ' '
             GO TO 20
          ENDIF
          dup_dir=.TRUE.
          path_len = LEN_TRIM(PATH)-1
          DO I=1,path_len
            IF (PATH(I:I) .NE. cwd(I:I)) THEN
              dup_dir=.FALSE.
              EXIT
            ENDIF
          END DO
          IF (dup_dir .eqv. .TRUE.) THEN
            write(*,*) "You have input the current working directory"
            DO I=1,60
              PATH(I:I)=' '
            END DO
            NOB=0
          ENDIF
        ENDIF
        ENDIF
	RETURN
	END
	SUBROUTINE FULLNAME(PATH,FILE,FILE2)
	CHARACTER PATH*60,FILE2*73,FILE*13,FILE1*73
	FILE2 = ' '
	FILE1 = ' '
	FILE1 = PATH//FILE
	J = 0
        DO I=1,73
	 IF(FILE1(I:I) .NE. ' ') THEN
	  J= J+1
	  FILE2(J:J) = FILE1(I:I)
	 ENDIF
	END DO
	RETURN
	END
        SUBROUTINE GETCOVAR(PATH,PATFIL,NCOV,DESCR)
        IMPLICIT REAL*8(A-H,O-Z)
        CHARACTER PATFIL*20,READLINE*1000,DESCR(26)*20,PATH*60,
     1   TMPFILE*13,PATHFILE*73
    2   FORMAT(A20)
   33   FORMAT(A1000)
        TMPFILE = ' '
	TMPFILE = PATFIL
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	OPEN(21,FILE=PATHFILE)
   10	READ(21,33) READLINE
	IF(READLINE(12:28) .NE. 'NO. OF ADDITIONAL') GO TO 10
	BACKSPACE(21)
    3   FORMAT(T2,I5)
        READ(21,3) NADD
	NCOV = 4 + NADD
   20	READ(21,33) READLINE
	IF(READLINE(2:16) .NE. 'COVARIATE NAMES') GO TO 20
        IF(NCOV .GT. 4) THEN
         DO J = 1,NCOV-4
          READ(27,33) READLINE
          DO I = 3,20
           IF(READLINE(I:I) .EQ. ' ') GO TO 30
          END DO
   30     DESCR(J) = READLINE(1:I-1)
         END DO
        ENDIF
     	  DESCR(NCOV-3) = 'AGE'
        DESCR(NCOV-2) = 'SEX'
        DESCR(NCOV-1) = 'HEIGHT'
        DESCR(NCOV) = 'ETHNICITY FLAG'
        CLOSE(21)
	RETURN
	END
	SUBROUTINE PRNCOVAR(NCOV,DESCR,NVAR,PAR,ClearScreen)
	CHARACTER DESCR(26)*20,PAR(30)*11,ClearScreen*6
	CALL SYSTEM(ClearScreen)
	WRITE(*,7133)
 7133   FORMAT(/' THE COVARIATES AVAILABLE IN YOUR PATIENT DATA FILES'/
     1' ARE THE FOLLOWING:'//
     2'   NO.   COVARIATE')
	ILINES = 4
        IF(NCOV .GT. 4) THEN
         DO I=1,NCOV-4
          WRITE(*,7134) I,DESCR(I)
          ILINES = ILINES + 1
          IF( ILINES/18 .EQ. 1.0*ILINES/18) CALL PAUSE
         END DO
        ENDIF
 7134   FORMAT('   ',I2,'   ',A20)
	WRITE(*,7136) NCOV-3
 7136   FORMAT('   ',I2,'   AGE')
	ILINES = ILINES + 1
	IF( ILINES/18 .EQ. 1.0*ILINES/18) CALL PAUSE
	WRITE(*,7137) NCOV-2
 7137   FORMAT('   ',I2,'   SEX -- 1 (MALE) OR 2 (FEMALE)')
	ILINES = ILINES + 1
	IF( ILINES/18 .EQ. 1.0*ILINES/18) CALL PAUSE
	WRITE(*,7138) NCOV-1
 7138   FORMAT('   ',I2,'   HEIGHT')
	ILINES = ILINES + 1
	IF( ILINES/18 .EQ. 1.0*ILINES/18) CALL PAUSE
	WRITE(*,7139) NCOV
 7139   FORMAT('   ',I2,'   ETHNICITY FLAG -- 1,...,9 FOR, RESPECTIVELY
     1,'/
     4'           NOT KNOWN, CAUCASIAN, BLACK, HISPANIC, NATIVE AMER.'/
     5'           INDIAN, ASIAN, MIDDLE EASTERN, OTHER.')
	WRITE(*,6133)
 6133   FORMAT(/' THE AVAILABLE RANDOM VARIABLES ARE THE FOLLOWING:'//
     2'   NO.   R.V.'/)
	ILINES = 4
	DO I=1,NVAR
   	 WRITE(*,6134) NCOV+I,PAR(I)
	 ILINES = ILINES + 1
	 IF( ILINES/18 .EQ. 1.0*ILINES/18) CALL PAUSE
	END DO
 6134   FORMAT('   ',I2,'   ',A11)
	RETURN
	END
	SUBROUTINE GETCOVAL(NUMEQT,JSUB,COVAL,NCOV)
        IMPLICIT REAL*8(A-H,O-Z)
        DIMENSION COVAL(999,26)
	CHARACTER SEX*1,READLINE*1000
	DO I=1,7
	 READ(27,*)
	END DO
	READ(27,*) COVAL(JSUB,NCOV-3)
	READ(27,2) SEX
    2   FORMAT(A1)
	COVAL(JSUB,NCOV-2) = 1
	IF(SEX .EQ. 'F') COVAL(JSUB,NCOV-2) = 2
	READ(27,*) COVAL(JSUB,NCOV-1)
	READ(27,*) COVAL(JSUB,NCOV)
    1   FORMAT(A1000)
   20	READ(27,1) READLINE
	IF(READLINE(2:27) .NE. 'COVARIATE NAMES AND VALUES') GO TO 20
        IF(NCOV .GT. 4) THEN
         DO J = 1,NCOV-4
          READ(27,1) READLINE
          OPEN(53)
          DO I = 10,300
           IF(READLINE(I:I) .EQ. ' ') GO TO 10
          END DO
   10     WRITE(53,1) READLINE(I:300)
          REWIND(53)
          READ(53,*) XJUNK1,XJUNK2,COVAL(JSUB,J)
          CLOSE(53)
         END DO
        ENDIF
	READ(27,*)
	READ(27,*)
	DO I=1,NUMEQT
	 READ(27,*)
	END DO
	RETURN
	END
	SUBROUTINE GETNSUB(NSUB)
	CHARACTER READLINE*1000,ERRFIL*20
      COMMON/ERROR/ERRFIL
    2   FORMAT(A1000)
   10   READ(25,2) READLINE
	ILINE=0
	 DO I=1,51
	  IF(READLINE(I:I+21) .EQ. 'THE NO. OF SUBJECTS IS') THEN
	   ILINE=1
	   GO TO 20
	  ENDIF
	 END DO
   20   IF(ILINE .EQ. 0) GO TO 10
	 IEND = 0
	 ISTART = 0
	  DO J = I+22, 72
	   IF(ISTART .EQ. 0 .AND. READLINE(J:J) .NE. ' ') ISTART = J
	   IF(ISTART .NE. 0 .AND. READLINE(J:J) .EQ. ' ') THEN
	    IEND = J-1
	    GO TO 30
	   ENDIF
	  END DO
   30	ISIZE = IEND-ISTART
	IF(ISIZE .GT. 3) THEN
	 WRITE(*,*)' NSUB IS ',NSUB,' WHICH IS TOO LARGE. '
	 WRITE(*,*)' THE PROGRAM STOPS. '
        OPEN(42,FILE=ERRFIL)
        WRITE(42,*)' NSUB IS ',NSUB,' WHICH IS TOO LARGE. '
        WRITE(42,*)' THE PROGRAM STOPS. '
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	NSUB = 0
	 DO K=ISTART,IEND
	  IF(READLINE(K:K) .EQ. '0') IVAL = 0
	  IF(READLINE(K:K) .EQ. '1') IVAL = 1
	  IF(READLINE(K:K) .EQ. '2') IVAL = 2
	  IF(READLINE(K:K) .EQ. '3') IVAL = 3
	  IF(READLINE(K:K) .EQ. '4') IVAL = 4
	  IF(READLINE(K:K) .EQ. '5') IVAL = 5
	  IF(READLINE(K:K) .EQ. '6') IVAL = 6
	  IF(READLINE(K:K) .EQ. '7') IVAL = 7
	  IF(READLINE(K:K) .EQ. '8') IVAL = 8
	  IF(READLINE(K:K) .EQ. '9') IVAL = 9
	  NSUB = NSUB + IVAL*10**ISIZE
	  ISIZE = ISIZE-1
	 END DO
	RETURN
	END
	SUBROUTINE DETECT(NOB,PATH,FORFILE,IVERS,CopyFile,
     1     DeleteFile,ClearScreen)
	CHARACTER READLINE*1000,FORFILE*20,TMPFILE*13,PATHFILE*73,
     1  PATH*60,READLIN2*1000,CopyFile*5,DeleteFile*4,
     2  ClearScreen*6,ERRFIL*20
      COMMON/ERROR/ERRFIL
	IVERS = 0
 5010	TMPFILE = ' '
	TMPFILE = FORFILE
	CALL FULLNAME(PATH,TMPFILE,PATHFILE)
        OPEN(28,FILE=PATHFILE)
	OPEN(52,FILE='TEMP28')
   19   FORMAT(A1000)
   50	READ(28,19,IOSTAT=IEND) READLINE
	 IF(IEND .LT. 0) THEN
	  WRITE(*,22) PATHFILE
   22     FORMAT(/' FILE, ',A73/
     1' IS NOT AN ACCEPTABLE FORTRAN MODEL FILE; IN PARTICULAR, IT HAS'/
     2' NO SUBROUTINE DIFFEQ. '//
     3' THE PROGRAM STOPS. ')
	  CLOSE(28)
	  CLOSE(52)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,22) PATHFILE
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	CALL CHECKLIN(READLINE,'SUBROUTINE DIFFEQ',IYES)
	IF(IYES .EQ. 0) THEN
	 WRITE(52,19) READLINE
	 GO TO 50
	ENDIF
   	READ(28,19,IOSTAT=IEND) READLIN2
	CALL CHECKLIN(READLIN2,'IMPLICIT REAL*8(A',IYES)
	 IF(IYES .EQ. 0) THEN
	  WRITE(52,19) READLINE
	  WRITE(52,19) READLIN2
	  GO TO 50
	 ENDIF
	CALL WRITEDIF(IVERS)
   60	READ(28,19,IOSTAT=IEND) READLINE
	 IF(IEND .LT. 0) THEN
	  WRITE(*,27) PATHFILE
   27     FORMAT(/' FILE, ',A73/
     1' IS NOT AN ACCEPTABLE FORTRAN MODEL FILE; IN PARTICULAR, IT'/
     2' DOES NOT HAVE AN ACCEPTABLE SUBROUTINE DIFFEQ. '//
     3' THE PROGRAM STOPS. ')
	  CLOSE(28)
	  CLOSE(52)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,27) PATHFILE
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	CALL SKIPLINE(READLINE,IYES)
	IF(IYES .EQ. 1) GO TO 60
	BACKSPACE(28)
  350	READ(28,19,IOSTAT=IEND) READLINE
	 IF(IEND .LT. 0) THEN
	  WRITE(*,351) PATHFILE
  351     FORMAT(/' FILE, ',A73/
     1' IS NOT AN ACCEPTABLE FORTRAN MODEL FILE BASED ON THE '/
     2' TEMPLATE FILE, TSTMULTG.FOR (OR A NEWER VERSION). '//
     3' THE MODEL FILE MUST HAVE DO LOOPS IN SUBROUTINE DIFFEQ'/
     4' WHICH INITIALIZE RATEIV(.) AND CV(.), AND ANOTHER IN'/
     5' SUBROUTINE OUTPUT WHICH INITIALIZES CV(.).'//
     3' THE PROGRAM STOPS. ')
	  CLOSE(28)
	  CLOSE(52)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,351) PATHFILE
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	CALL CHECKLIN(READLINE,'****** ESTABLISH ',IYES)
	IF(IYES .EQ. 0) THEN
	 GO TO 350
	ENDIF
	  WRITE(52,19) READLINE
  100	READ(28,19,IOSTAT=IEND) READLINE
	 IF(IEND .LT. 0) THEN
	  WRITE(*,23) PATHFILE
   23     FORMAT(/' FILE, ',A73/
     1' IS NOT AN ACCEPTABLE FORTRAN MODEL FILE; IN PARTICULAR, IT HAS'/
     2' NO SUBROUTINE OUTPUT. '//
     3' THE PROGRAM STOPS. ')
	  CLOSE(28)
        CLOSE(52)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,23) PATHFILE
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	CALL CHECKLIN(READLINE,'SUBROUTINE OUTPUT',IYES)
	IF(IYES .EQ. 0) THEN
	 WRITE(52,19) READLINE
	 GO TO 100
	ENDIF
   	READ(28,19,IOSTAT=IEND) READLIN2
	CALL CHECKLIN(READLIN2,'IMPLICIT REAL*8(A',IYES)
	 IF(IYES .EQ. 0) THEN
	  WRITE(52,19) READLINE
	  WRITE(52,19) READLIN2
	  GO TO 100
	 ENDIF
	CALL WRITEOUT(IVERS)
  110	READ(28,19,IOSTAT=IEND) READLINE
	 IF(IEND .LT. 0) THEN
	  WRITE(*,28) PATHFILE
   28     FORMAT(/' FILE, ',A73/
     1' IS NOT AN ACCEPTABLE FORTRAN MODEL FILE; IN PARTICULAR, IT'/
     2' DOES NOT HAVE AN ACCEPTABLE SUBROUTINE OUTPUT. '//
     3' THE PROGRAM STOPS. ')
	  CLOSE(28)
	  CLOSE(52)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,28) PATHFILE
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	CALL SKIPLINE(READLINE,IYES)
	IF(IYES .EQ. 1) GO TO 110
	BACKSPACE(28)
  450	READ(28,19,IOSTAT=IEND) READLINE
	 IF(IEND .LT. 0) THEN
	  WRITE(*,351) PATHFILE
	  CLOSE(28)
	  CLOSE(52)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,351) PATHFILE
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	CALL CHECKLIN(READLINE,'****** ESTABLISH ',IYES)
	IF(IYES .EQ. 0) THEN
	 GO TO 450
	ENDIF
	  WRITE(52,19) READLINE
  150	READ(28,19,IOSTAT=IEND) READLINE
	 IF(IEND .LT. 0) THEN
	  WRITE(*,24) PATHFILE
   24     FORMAT(/' FILE, ',A73/
     1' IS NOT AN ACCEPTABLE FORTRAN MODEL FILE; IN PARTICULAR, IT HAS'/
     2' NO SUBROUTINE SYMBOL. '//
     3' THE PROGRAM STOPS. ')
	  CLOSE(28)
	  CLOSE(52)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,24) PATHFILE
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	CALL CHECKLIN(READLINE,'SUBROUTINE SYMBOL',IYES)
	IF(IYES .EQ. 0) THEN
	 WRITE(52,19) READLINE
	 GO TO 150
	ENDIF
   	READ(28,19,IOSTAT=IEND) READLIN2
	CALL CHECKLIN(READLIN2,'IMPLICIT REAL*8(A',IYES)
	 IF(IYES .EQ. 0) THEN
	  WRITE(52,19) READLINE
	  WRITE(52,19) READLIN2
	  GO TO 150
	 ENDIF
	CALL WRITESYM(IVERS)
  160	READ(28,19,IOSTAT=IEND) READLINE
	 IF(IEND .LT. 0) THEN
	  WRITE(*,29) PATHFILE
   29     FORMAT(/' FILE, ',A73/
     1' IS NOT AN ACCEPTABLE FORTRAN MODEL FILE; IN PARTICULAR, IT'/
     2' DOES NOT HAVE AN ACCEPTABLE SUBROUTINE SYMBOL. '//
     3' THE PROGRAM STOPS. ')
	  CLOSE(28)
	  CLOSE(52)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,29) PATHFILE
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	CALL SKIPLINE(READLINE,IYES)
	IF(IYES .EQ. 1) GO TO 160
	  WRITE(52,19) READLINE
  550	READ(28,19,IOSTAT=IEND) READLINE
	 IF(IEND .LT. 0) THEN
	  WRITE(*,124) PATHFILE
  124     FORMAT(/' FILE, ',A73/
     1' IS NOT AN ACCEPTABLE FORTRAN MODEL FILE; IN PARTICULAR, IT HAS'/
     2' NO SUBROUTINE GETFA. '//
     3' THE PROGRAM STOPS. ')
	  CLOSE(28)
	  CLOSE(52)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,124) PATHFILE
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	CALL CHECKLIN(READLINE,'SUBROUTINE GETFA(',IYES)
	IF(IYES .EQ. 0) THEN
	 WRITE(52,19) READLINE
	 GO TO 550
	ENDIF
   	READ(28,19,IOSTAT=IEND) READLIN2
	CALL CHECKLIN(READLIN2,'IMPLICIT REAL*8(A',IYES)
	 IF(IYES .EQ. 0) THEN
	  WRITE(52,19) READLINE
	  WRITE(52,19) READLIN2
	  GO TO 550
	 ENDIF
	  WRITE(52,19) READLINE
	  WRITE(52,19) READLIN2
  650	READ(28,19,IOSTAT=IEND) READLINE
	 IF(IEND .LT. 0) THEN
	  WRITE(*,224) PATHFILE
  224     FORMAT(/' FILE, ',A73/
     1' IS NOT AN ACCEPTABLE FORTRAN MODEL FILE; IN PARTICULAR, IT HAS'/
     2' NO SUBROUTINE GETIX. '//
     3' THE PROGRAM STOPS. ')
	  CLOSE(28)
	  CLOSE(52)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,224) PATHFILE
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	CALL CHECKLIN(READLINE,'SUBROUTINE GETIX(',IYES)
	IF(IYES .EQ. 0) THEN
	 WRITE(52,19) READLINE
	 GO TO 650
	ENDIF
   	READ(28,19,IOSTAT=IEND) READLIN2
	CALL CHECKLIN(READLIN2,'IMPLICIT REAL*8(A',IYES)
	 IF(IYES .EQ. 0) THEN
	  WRITE(52,19) READLINE
	  WRITE(52,19) READLIN2
	  GO TO 650
	 ENDIF
	  WRITE(52,19) READLINE
	  WRITE(52,19) READLIN2
  750	READ(28,19,IOSTAT=IEND) READLINE
	 IF(IEND .LT. 0) THEN
	  WRITE(*,324) PATHFILE
  324     FORMAT(/' FILE, ',A73/
     1' IS NOT AN ACCEPTABLE FORTRAN MODEL FILE; IN PARTICULAR, IT HAS'/
     2' NO SUBROUTINE GETTLAG. '//
     3' THE PROGRAM STOPS. ')
	  CLOSE(28)
	  CLOSE(52)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,324) PATHFILE
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	CALL CHECKLIN(READLINE,'SUBROUTINE GETTLA',IYES)
	IF(IYES .EQ. 0) THEN
	 WRITE(52,19) READLINE
	 GO TO 750
	ENDIF
   	READ(28,19,IOSTAT=IEND) READLIN2
	CALL CHECKLIN(READLIN2,'IMPLICIT REAL*8(A',IYES)
	 IF(IYES .EQ. 0) THEN
	  WRITE(52,19) READLINE
	  WRITE(52,19) READLIN2
	  GO TO 750
	 ENDIF
	  WRITE(52,19) READLINE
	  WRITE(52,19) READLIN2
  200	READ(28,19,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) GO TO 250
	WRITE(52,19) READLINE
	GO TO 200
  250   CLOSE(52)
	CLOSE(28)
	WRITE(*,251) PATHFILE
  251   FORMAT(/' YOUR ORIGINAL MODEL FILE IS ABOUT TO BE COPIED INTO'/
     1' A FILE WITH THE SAME NAME, BUT WITH "OLD" PRECEEDING IT. '//
     2' THE CORRECT MODEL FORTRAN CODE FOR THE LOCATION WHERE YOU ARE'/
     3' HAVING YOUR PROGRAM RUN WILL BE PLACED INTO YOUR ORIGINAL FILE .
     4..'/
     5' ',A73)
	READLINE = CopyFile//PATH(1:NOB)//FORFILE//' '//PATH(1:NOB)//
     1'OLD'//FORFILE
        CALL SYSTEM(READLINE)
        CALL SYSTEM(CopyFile//' TEMP28 '//PATH(1:NOB)//FORFILE)
	CALL SYSTEM(DeleteFile//' TEMP28')
	RETURN
	END
	SUBROUTINE CHECKLIN(READLINE,TARGET,IYES)
	CHARACTER TARGET*17,READLINE*1000
	IYES = 0
	DO I=7,67
	 IF(READLINE(I:I+16) .EQ. TARGET) THEN
	  IYES = 1
	  GO TO 10
	 ENDIF
	END DO
   10   RETURN
	END
	SUBROUTINE WRITEDIF(IVERS)
	CHARACTER READLINE*1000
    1   FORMAT(A1000)
	READLINE = '      SUBROUTINE DIFFEQ(NDIM,T,X,XP,RPAR,IPAR)'
	WRITE(52,1) READLINE
	READLINE = '      IMPLICIT REAL*8(A-H,O-Z)'
	WRITE(52,1) READLINE
	READLINE = '      COMMON /PARAMD/ P'
	WRITE(52,1) READLINE
	READLINE = '      COMMON /INPUT/ R,B'
	WRITE(52,1) READLINE
	READLINE = '      COMMON /DESCR/ AGE,HEIGHT,ISEX,IETHFLG'
	WRITE(52,1) READLINE
	IF(IVERS .EQ. 0) THEN
	 READLINE = '      COMMON /CNST2/ NPL,NUMEQT,NDRUG,NADD'
	 WRITE(52,1) READLINE
	ENDIF
	IF(IVERS .EQ. 1)
     1  READLINE = '      DIMENSION X(NDIM),XP(NDIM),P(25),R(37),B(20)'
	IF(IVERS .EQ. 0)
     1  READLINE = '      DIMENSION X(NDIM),XP(NDIM),P(32),R(37),B(20)'
	WRITE(52,1) READLINE
	IF(IVERS .EQ. 0) THEN
         READLINE = '      DIMENSION CV(26),RATEIV(7)'
	 WRITE(52,1) READLINE
	ENDIF
	WRITE(52,*)
	END
	SUBROUTINE WRITEOUT(IVERS)
	CHARACTER READLINE*1000
    1   FORMAT(A1000)
	IF(IVERS .EQ. 1)
     1  READLINE = '      SUBROUTINE OUTPUT(Y)'
	IF(IVERS .EQ. 0)
     1  READLINE = '      SUBROUTINE OUTPUT(T,Y)'
	WRITE(52,1) READLINE
	READLINE = '      IMPLICIT REAL*8(A-H,O-Z)'
	WRITE(52,1) READLINE
	READLINE = '      COMMON /PARAMD/ P'
	WRITE(52,1) READLINE
	READLINE = '      COMMON /STATE/ X'
	WRITE(52,1) READLINE
	READLINE = '      COMMON /INPUT/ R,B'
	WRITE(52,1) READLINE
	READLINE = '      COMMON /DESCR/ AGE,HEIGHT,ISEX,IETHFLG'
	WRITE(52,1) READLINE
	IF(IVERS .EQ. 0) THEN
	 READLINE = '      COMMON /CNST2/ NPL,NUMEQT,NDRUG,NADD'
	 WRITE(52,1) READLINE
	ENDIF
	IF(IVERS .EQ. 1)
     1  READLINE = '      DIMENSION X(20),P(25),Y(6),R(37),B(20)'
	IF(IVERS .EQ. 0)
     1  READLINE = '      DIMENSION X(20),P(32),Y(6),R(37),B(20)'
	WRITE(52,1) READLINE
	IF(IVERS .EQ. 0) THEN
         READLINE = '      DIMENSION CV(26)'
	 WRITE(52,1) READLINE
	ENDIF
	WRITE(52,*)
	RETURN
	END
	SUBROUTINE WRITESYM(IVERS)
	CHARACTER READLINE*1000
    1   FORMAT(A1000)
	READLINE = '      SUBROUTINE SYMBOL'
	WRITE(52,1) READLINE
        READLINE = '      IMPLICIT REAL*8(A-H,O-Z)'
	WRITE(52,1) READLINE
	READLINE = '      CHARACTER PSYM(32)*11'
	WRITE(52,1) READLINE
	IF(IVERS .EQ. 1) THEN
	 READLINE = '      COMMON /CNST/ N,ND,NI,NUP,NUIC,NP'
	 WRITE(52,1) READLINE
	ENDIF
	IF(IVERS .EQ. 0) THEN
	 READLINE = '      COMMON /CNST/ N,ND,NI,NUP,NUIC,NP'
	 WRITE(52,1) READLINE
	 READLINE = '      COMMON/BOLUSCOMP/NBCOMP'
	 WRITE(52,1) READLINE
	 READLINE = '      DIMENSION NBCOMP(7)'
	 WRITE(52,1) READLINE
	ENDIF
	RETURN
	END
	SUBROUTINE SKIPLINE(READLINE,IYES)
	CHARACTER READLINE*1000
	IYES = 1
	DO I=7,64
	 IF(READLINE(I:I+5) .EQ. 'COMMON') RETURN
	 IF(READLINE(I:I+8) .EQ. 'DIMENSION') RETURN
	 IF(READLINE(I:I+8) .EQ. 'CHARACTER') RETURN
	END DO
	IYES = 0
	RETURN
	END
	SUBROUTINE SEPARATE
	CHARACTER READLINE*1000
    1   FORMAT(A1000)
	OPEN(25)
	OPEN(34)
	OPEN(27)
	OPEN(47)
	REWIND(45)
   10	READ(45,1) READLINE
	IF(READLINE(17:42) .EQ. '* END OF THE OUTPUT FILE *') GO TO 20
	WRITE(25,1) READLINE
	GO TO 10
   20	READ(45,1) READLINE
	IF(READLINE(1:7) .NE. 'DENSITY') GO TO 20
   	WRITE(34,1) READLINE
   30   READ(45,1) READLINE
	IF(READLINE(17:43) .EQ. '* END OF THE DENSITY FILE *') GO TO 40
	WRITE(34,1) READLINE
	GO TO 30
   40   READ(45,1) READLINE
	IF(READLINE(3:16) .NE. 'LAST AND FIRST') GO TO 40
   	WRITE(27,1) READLINE
   50   READ(45,1) READLINE
	IF(READLINE(17:43) .EQ. '* END OF THE PATIENT DATA I') GO TO 60
	WRITE(27,1) READLINE
	GO TO 50
   60   READ(45,1) READLINE
	IF(READLINE(17:43) .NE. '* START OF THE npagdriv.f F') GO TO 60
   	WRITE(47,1) READLINE
   70   READ(45,1) READLINE
	IF(READLINE(17:43) .EQ. '* END OF THE npagdriv.f FIL') GO TO 80
	WRITE(47,1) READLINE
	GO TO 70
   80   WRITE(47,1) READLINE
	REWIND(25)
	REWIND(34)
	REWIND(27)
	REWIND(47)
	CLOSE(45)
	RETURN
	END
	SUBROUTINE GETNUM(NUMEQT)
	IMPLICIT REAL*8(A-H,O-Z)
	CHARACTER READLINE*1000,ERRFIL*20
      COMMON/ERROR/ERRFIL
    2   FORMAT(A1000)
   35	READ(27,2,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) THEN
	 WRITE(*,57)
   57    FORMAT(//' THE COMBINATION OUTPUT FILE YOU HAVE ENTERED TO'/
     1' THIS PROGRAM WAS NOT MADE BY A RECENT NPAG PROGRAM.'//
     2' SUCH A FILE MUST HAVE CONCATENATED PATIENT DATA FILES HAVING'/
     3' A LINE WITH "NO. OF TOTAL OUTPUT EQUATIONS" IN COLUMNS 12:40.'//
     3' THE PROGRAM STOPS. '//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,57)
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	IF(READLINE(12:40) .NE. 'NO. OF TOTAL OUTPUT EQUATIONS')GO TO 35
	BACKSPACE(27)
   13   FORMAT(T2,I5)
        READ(27,13) NUMEQT
	RETURN
	END
	SUBROUTINE GETCOVR2(NCOV,DESCR)
	IMPLICIT REAL*8(A-H,O-Z)
	CHARACTER READLINE*1000,DESCR(26)*20
    2   FORMAT(A20)
   33   FORMAT(A1000)
	REWIND(27)
   10	READ(27,33) READLINE
	IF(READLINE(12:28) .NE. 'NO. OF ADDITIONAL') GO TO 10
	BACKSPACE(27)
    3   FORMAT(T2,I5)
        READ(27,3) NADD
	NCOV = 4 + NADD
   20	READ(27,33) READLINE
	IF(READLINE(2:16) .NE. 'COVARIATE NAMES') GO TO 20
        IF(NCOV .GT. 4) THEN
         DO J = 1,NCOV-4
          READ(27,33) READLINE
          DO I = 3,20
           IF(READLINE(I:I) .EQ. ' ') GO TO 30
          END DO
   30     DESCR(J) = READLINE(1:I-1)
         END DO
        ENDIF
     	DESCR(NCOV-3) = 'AGE'
	DESCR(NCOV-2) = 'SEX'
	DESCR(NCOV-1) = 'HEIGHT'
	DESCR(NCOV) = 'ETHNICITY FLAG'
	REWIND(27)
	RETURN
	END
	SUBROUTINE GETIPAT(NSUBTOT,NSUB,ISUBALL,MAXSUB,IPATVEC)
	DIMENSION IPATVEC(MAXSUB),IPATVECC(9999)
	CHARACTER READLINE*1000
    3   FORMAT(A1000)
 4070	WRITE(*,121)
  121   FORMAT(/' ENTER THE NO. OF SUBJECTS IN YOUR ENTIRE DATA SET.'/
     1' THIS MAY BE DIFFERENT THAN THE NO. OF SUBJECTS TO BE TO BE '/
     2' ANALYZED IN THIS PARTICULAR RUN (SEE BELOW): ')
 	READ(*,*,ERR=4070) NSUBTOT
	IF(NSUBTOT .LE. 0) GO TO 4070
 4170	WRITE(*,2121) NSUBTOT
 2121   FORMAT(/' ENTER 1 IF ALL ',I4,' SUBJECTS IN YOUR DATA SET ARE'/
     1' 	TO BE ANALYZED IN THIS RUN; '/
     2'		ENTER 0 IF YOU WANT TO ANALYZE A SUBSET OF THIS SET: ')
	READ(*,*,ERR=4170) ISUBALL
	IF(ISUBALL .NE. 1 .AND. ISUBALL .NE. 0) GO TO 4170
	IF(ISUBALL .EQ. 1) THEN
	 NSUB = NSUBTOT
	 DO I=1,NSUB
	  IPATVEC(I) = I
	 END DO
	ENDIF
     	IF(ISUBALL .EQ. 0) THEN
 4180	 WRITE(*,2122)
 2122    FORMAT(/' ENTER 1 IF YOU WANT TO SELECT WHICH PATIENTS ARE TO'/
     1' 	BE INCLUDED IN THE ANALYSIS; '/
     2' ENTER 2 IF YOU WANT TO SELECT WHICH PATIENTS ARE NOT TO BE'/
     3'		INCLUDED IN THE ANALYSIS: ')
	 READ(*,*,ERR= 4180) IINCLUDE
	 IF(IINCLUDE .NE. 1 .AND. IINCLUDE .NE. 2) GO TO 4180
	  NSUBB = 0
	  NUMCUR = 0
 4200	   IF(IINCLUDE .EQ. 1) WRITE(*,2124)
 2124      FORMAT(/' ON EACH LINE, ENTER A SUBJECT OR A RANGE OF '/
     1' SUBJECTS TO BE INCLUDED IN THE ANALYSIS. YOU MAY ENTER '/
     2' MULTIPLE SUBJECTS USING HYPHENS, COMMAS, AND SPACES. FOR'/
     3' EXAMPLE, 17 - 28 INDICATES SUBJECTS 17 THROUGH 28; '/
     4'          17,28 INDICATES SUBJECTS 17 AND 28;'/
     5'          17 28 INDICATES SUBJECTS 17 AND 28. '//
     6' RESTRICTIONS: 1. ON EACH LINE, USE NO MORE THAN 70 CHARACTERS.'/
     7'		      2. PATIENT NOS., OR RANGES OF PATIENT NOS.,'/
     8'		         MUST BE LISTED IN ASCENDING ORDER.'//
     9' ENTER 0 WHEN YOU ARE FINISHED ENTERING PATIENT NOS.'//)
	IF(IINCLUDE .EQ. 2) WRITE(*,2123)
 2123      FORMAT(/' ON EACH LINE, ENTER A SUBJECT OR A RANGE OF '/
     1' SUBJECTS TO BE EXCLUDED IN THE ANALYSIS. YOU MAY ENTER '/
     2' MULTIPLE SUBJECTS USING HYPHENS, COMMAS, AND SPACES. FOR'/
     3' EXAMPLE, 17 - 28 INDICATES SUBJECTS 17 THROUGH 28; '/
     4'          17,28 INDICATES SUBJECTS 17 AND 28;'/
     5'          17 28 INDICATES SUBJECTS 17 AND 28. '//
     6' RESTRICTIONS: 1. ON EACH LINE, USE NO MORE THAN 70 CHARACTERS.'/
     7'		      2. PATIENT NOS., OR RANGES OF PATIENT NOS.,'/
     8'		         MUST BE LISTED IN ASCENDING ORDER.'//
     9' ENTER 0 WHEN YOU ARE FINISHED ENTERING PATIENT NOS.'//)
 4210	   READ(*,3,ERR=4200) READLINE
	   CALL GETNUMS(IINCLUDE,READLINE,NSUBB,NSUBTOT,NUMCUR,ISTOP,
     1                  MAXSUB,IPATVECC)
	   IF(ISTOP .EQ. -1) GO TO 4200
	   IF(ISTOP .EQ. 1) GO TO 4210
	IF(IINCLUDE .EQ. 1) THEN
	 NSUB = NSUBB
	  DO I = 1,NSUB
	   IPATVEC(I) = IPATVECC(I)
	  END DO
	ENDIF
	IF(IINCLUDE .EQ. 2) THEN
	 NSUB = NSUBTOT - NSUBB
	 INDPAT = 1
	 NEXT = 0
	 DO I = 1,NSUBTOT
	  IF(I .NE. IPATVECC(INDPAT)) THEN
	   NEXT = NEXT + 1
	   IPATVEC(NEXT) = I
	  ENDIF
	  IF(I .EQ. IPATVECC(INDPAT)) INDPAT = INDPAT + 1
	 END DO
	ENDIF
	ENDIF
	RETURN
	END
	SUBROUTINE GETNUMS(IINCLUDE,READLINE,NSUBB,NSUBTOT,NUMCUR,ISTOP,
     1                  MAXSUB,IPATVECC)
	DIMENSION IPATVECC(MAXSUB)
	CHARACTER READLINE*1000
	ISTOP = 1
	DO J = 1,70
	 IF(READLINE(J:J) .NE. ' ') GO TO 10
	END DO
	IF(NSUBB .EQ. 0) WRITE(*,1)
    1   FORMAT(/' YOU HAVE ENTERED A BLANK LINE. PLEASE ENTER SUBJECT'/
     1' NOS. AS INDICATED BELOW.' /)
	IF(NSUBB .GT. 0) WRITE(*,2) NSUBB,NUMCUR
    2   FORMAT(/' YOU HAVE ENTERED A BLANK LINE. THE LAST ACCEPTED '/
     1' SUBJECT NO. IS ',I4//
     3' PLEASE ENTER SUBJECT NOS. AS INDICATED BELOW. ')
	ISTOP = -1
	RETURN
   10   CONTINUE
	DO J = 1,70
	 IF(READLINE(J:J) .NE. ' ') GO TO 20
	END DO
   20   ISTART = J
	IF(READLINE(ISTART:ISTART) .NE. '0') GO TO 30
	DO I = ISTART+1,70
	 IF(READLINE(I:I) .NE. ' ') GO TO 30
	END DO
	IF(IINCLUDE .EQ. 1 .AND. NSUBB .EQ. 0) THEN
	 WRITE(*,3)
    3    FORMAT(/' YOU MUST ENTER AT LEAST ONE SUBJECT NO. TO BE'/
     1' ANALYZED. ')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(IINCLUDE .EQ. 2 .OR. NSUBB .GT. 0) THEN
	 ISTOP = 0
	 RETURN
	ENDIF
   30   CONTINUE
     	DO I = ISTART+1,70
	 IF(READLINE(I:I) .EQ. ' ' .OR. READLINE(I:I) .EQ. ',' .OR.
     1      READLINE(I:I) .EQ. '-') GO TO 40
	END DO
   40   IEND = I-1
	CALL GETSUB(READLINE,ISTART,IEND,ISUB,IERROR)
	IF(IERROR .EQ. -1) THEN
	 WRITE(*,7) NUMCUR
    7    FORMAT(/' YOU HAVE ENTERED AN INVALID CHARACTER; THE LAST'/
     1' ACCEPTED PATIENT NUMBER IS ',I4//
     2' PLEASE ENTER SUBJECT NOS. AS INDICATED BELOW. ')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .LE. NUMCUR) THEN
	 WRITE(*,4) ISUB,NUMCUR
    4    FORMAT(/' YOU MAY NOT ENTER A SUBJECT NO. (',I4,' ) WHICH IS '/
     1' LESS THAN OR EQUAL TO A PREVIOUSLY ENTERED SUBJECT NO.,'/
     2' IN PARTICULAR ',I4,' WHICH IS THE LAST ACCEPTED SUBJECT NO.'//
     3' PLEASE ENTER SUBJECT NOS. AS INDICATED BELOW. ')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .GT. NSUBTOT) THEN
	 WRITE(*,6) ISUB,NSUBTOT,NUMCUR
    6    FORMAT(/' YOU MAY NOT ENTER A SUBJECT NO. (',I4,' ) WHICH'/
     1' IS GREATER THAN THE NO. OF SUBJECTS IN YOUR DATA FILE = ',I4/
     2' THE LAST ACCEPTED SUBJECT NO. IS ',I4//
     3' PLEASE ENTER SUBJECT NOS. AS INDICATED BELOW. ')
	 ISTOP = -1
	 RETURN
	ENDIF
	DO I = IEND+1,70
	 IF(READLINE(I:I) .NE. ' ') GO TO 50
	END DO
	NUMCUR = ISUB
	NSUBB = NSUBB + 1
	IPATVECC(NSUBB) = ISUB
	RETURN
   50   CONTINUE
	IF(READLINE(I:I) .EQ. ',') THEN
	 NUMCUR = ISUB
 	 NSUBB = NSUBB + 1
	 IPATVECC(NSUBB) = ISUB
	 DO J = I+1,70
	  IF(READLINE(J:J) .NE. ' ') GO TO 60
	 END DO
	 RETURN
   60    ISTART = J
	 GO TO 30
	ENDIF
	INUM = 0
	IF(READLINE(I:I) .EQ. '0') INUM = 1
	IF(READLINE(I:I) .EQ. '1') INUM = 1
	IF(READLINE(I:I) .EQ. '2') INUM = 1
	IF(READLINE(I:I) .EQ. '3') INUM = 1
	IF(READLINE(I:I) .EQ. '4') INUM = 1
	IF(READLINE(I:I) .EQ. '5') INUM = 1
	IF(READLINE(I:I) .EQ. '6') INUM = 1
	IF(READLINE(I:I) .EQ. '7') INUM = 1
	IF(READLINE(I:I) .EQ. '8') INUM = 1
	IF(READLINE(I:I) .EQ. '9') INUM = 1
	IF(INUM .EQ. 1) THEN
	 NUMCUR = ISUB
 	 NSUBB = NSUBB + 1
	 IPATVECC(NSUBB) = ISUB
         ISTART = I
	 GO TO 30
	ENDIF
	IF(READLINE(I:I) .EQ. '-') THEN
	 NUMCUR1 = ISUB
	 DO J = I+1,70
	  IF(READLINE(J:J) .NE. ' ') GO TO 70
	 END DO
	 WRITE(*,8) NUMCUR
    8    FORMAT(/' YOU MAY NOT END A LINE WITH A DASH. THE LAST '/
     1' PATIENT NO. ASSUMED TO BE ENTERED IS ',I4//
     3' PLEASE ENTER SUBJECT NOS. AS INDICATED BELOW. ')
	 ISTOP = -1
	 RETURN
   70   ISTART = J
     	DO K = ISTART+1,70
	 IF(READLINE(K:K) .EQ. ' ' .OR. READLINE(K:K) .EQ. ',')
     1    GO TO 80
	END DO
   80   IEND = K-1
	CALL GETSUB(READLINE,ISTART,IEND,ISUB,IERROR)
	IF(IERROR .EQ. -1) THEN
	 WRITE(*,7) NUMCUR
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .LE. NUMCUR1) THEN
	 WRITE(*,9) NUMCUR
    9    FORMAT(/' YOU MAY NOT ENTER A RANGE OF SUBJECT NOS. WITH THE'/
     1' ENDING NO. LESS THAN OR EQUAL TO THE BEGINNING NO. THE LAST'/
     2' ACCEPTED SUBJECT NO. IS ',I4//
     3' PLEASE ENTER SUBJECT NOS. AS INDICATED BELOW. ')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .GT. NSUBTOT) THEN
	 WRITE(*,6) ISUB,NSUBTOT,NUMCUR
	 ISTOP = -1
	 RETURN
	ENDIF
	 NUMCUR = ISUB
	 NN = NSUBB
 	 NSUBB = NSUBB + (NUMCUR - NUMCUR1) + 1
	 NONEW = 0
	 DO K = NN+1,NSUBB
	  NONEW = NONEW + 1
	  IPATVECC(K) = NUMCUR1 - 1 + NONEW
	 END DO
	 DO J = IEND+1,70
	  IF(READLINE(J:J) .NE. ' ' .AND. READLINE(J:J) .NE. ',' )
     1    GO TO 90
	 END DO
	 RETURN
   90    ISTART = J
	 GO TO 30
	ENDIF
	WRITE(*,7) NUMCUR
	ISTOP = -1
	RETURN
	END
	SUBROUTINE GETSUB(READLINE,ISTART,IEND,ISUB,IERROR)
	CHARACTER READLINE*1000
    3   FORMAT(A1000)
	IERROR = 0
  	ISIZE = IEND-ISTART
	ISUB = 0
	 DO K=ISTART,IEND
	  IVAL = -9
	  IF(READLINE(K:K) .EQ. '0') IVAL = 0
	  IF(READLINE(K:K) .EQ. '1') IVAL = 1
	  IF(READLINE(K:K) .EQ. '2') IVAL = 2
	  IF(READLINE(K:K) .EQ. '3') IVAL = 3
	  IF(READLINE(K:K) .EQ. '4') IVAL = 4
	  IF(READLINE(K:K) .EQ. '5') IVAL = 5
	  IF(READLINE(K:K) .EQ. '6') IVAL = 6
	  IF(READLINE(K:K) .EQ. '7') IVAL = 7
	  IF(READLINE(K:K) .EQ. '8') IVAL = 8
	  IF(READLINE(K:K) .EQ. '9') IVAL = 9
	  IF(IVAL .EQ. -9) THEN
	   IERROR = -1
	   RETURN
	  ENDIF
	  ISUB = ISUB + IVAL*10**ISIZE
	  ISIZE = ISIZE-1
	 END DO
	RETURN
	END
	SUBROUTINE WRITEPAT(NSUB,MAXSUB,IPATVEC)
	DIMENSION IPATVEC(MAXSUB)
	WRITE(*,*)
	ILINES = 1
	NEXTIND = 0
   50   NEXTIND = NEXTIND + 1
	IF(NEXTIND .GT. NSUB) GO TO 100
	IFIRST = IPATVEC(NEXTIND)
	IF(NEXTIND .EQ. NSUB) THEN
	 WRITE(*,222) IFIRST
	 ILINES=ILINES+1
	  IF(ILINES .EQ. 20) THEN
	   ILINES=0
	  ENDIF
  222    FORMAT(1X,I5)
	 GO TO 100
	ENDIF
	IF(IPATVEC(NEXTIND+1) .NE. IFIRST + 1) THEN
	 WRITE(*,222) IFIRST
	 ILINES=ILINES+1
	  IF(ILINES .EQ. 20) THEN
	   ILINES=0
	  ENDIF
	 GO TO 50
	ENDIF
	ILAST = IPATVEC(NEXTIND+1)
	NEXT = NEXTIND+1
	DO I = NEXTIND+2,NSUB
	 IF(IPATVEC(I) .NE. ILAST + 1) GO TO 80
	 ILAST = IPATVEC(I)
	 NEXT = I
	END DO
   80	WRITE(*,221) IFIRST,ILAST
  221   FORMAT(1X,I5,'   - ',I5)
	ILINES=ILINES+1
	 IF(ILINES .EQ. 20) THEN
	  ILINES=0
	 ENDIF
	NEXTIND = NEXT
	GO TO 50
  100   RETURN
	END
	SUBROUTINE WRITEPT2(IFILE,NSUB,MAXSUB,IPATVEC)
	DIMENSION IPATVEC(MAXSUB)
	NEXTIND = 0
   50   NEXTIND = NEXTIND + 1
	IF(NEXTIND .GT. NSUB) GO TO 100
	IFIRST = IPATVEC(NEXTIND)
	IF(NEXTIND .EQ. NSUB) THEN
	 IF(IFILE .EQ. 27) WRITE(27,222) IFIRST
	 IF(IFILE .EQ. 29) WRITE(29,222) IFIRST
  222    FORMAT(1X,I5)
	 GO TO 100
	ENDIF
	IF(IPATVEC(NEXTIND+1) .NE. IFIRST + 1) THEN
	 IF(IFILE .EQ. 27) WRITE(27,222) IFIRST
	 IF(IFILE .EQ. 29) WRITE(29,222) IFIRST
	 GO TO 50
	ENDIF
	ILAST = IPATVEC(NEXTIND+1)
	NEXT = NEXTIND+1
	DO I = NEXTIND+2,NSUB
	 IF(IPATVEC(I) .NE. ILAST + 1) GO TO 80
	 ILAST = IPATVEC(I)
	 NEXT = I
	END DO
   80	IF(IFILE .EQ. 27) WRITE(27,221) IFIRST,ILAST
   	IF(IFILE .EQ. 29) WRITE(29,221) IFIRST,ILAST
  221   FORMAT(1X,I5,'   - ',I5)
	NEXTIND = NEXT
	GO TO 50
  100   RETURN
	END
	SUBROUTINE GETIPATF(IFILE,NSUBTOT,NSUB,MAXSUB,
     1   IPATVEC,IERRR)
	DIMENSION IPATVEC(MAXSUB)
	CHARACTER READLINE*1000
    3   FORMAT(A1000)
	NSUBB = 0
	NUMCUR = 0
 4210	IF(IFILE .EQ. 23) READ(23,3,ERR=4200) READLINE
	IF(IFILE .EQ. 25) READ(25,3,ERR=4200) READLINE
	CALL GETNUMSF(1,READLINE,NSUBB,NSUBTOT,NUMCUR,ISTOP,
     1                  MAXSUB,IPATVEC)
	IF(ISTOP .EQ. -1) GO TO 4200
	IF(ISTOP .EQ. 1) GO TO 4210
	IF(NSUB .EQ. NSUBB) THEN
	 IERRR = 0
	 RETURN
	ENDIF
	IF(NSUB .NE. NSUBB) THEN
         WRITE(*,2)
    2   FORMAT(//' THERE WAS AN ERROR IN THE READING OF PATIENT NOS.'/
     1' TO BE USED FOR THIS ANALYSIS. IN PARTICULAR, THE NO. OF '/
     2' SUBJECTS TO BE INCLUDED IN THE ANALYSIS, AS ENTERED IN THE'/
     3' INSTRUCTION FILE, DOES NOT MATCH THE LIST OF SUBJECT NOS.'/
     4' WHICH FOLLOW THAT NUMBER. PLEASE ENTER DATA VIA THE KEYBOARD'/
     5' OR USING ANOTHER INSTRUCTION FILE.'/)
       IERRR = -1
	 RETURN
	ENDIF
 4200   WRITE(*,1)
    1   FORMAT(//' THERE WAS AN ERROR IN THE READING OF PATIENT NOS.'/
     1' TO BE USED FOR THIS ANALYSIS. PLEASE ENTER DATA VIA THE '/
     2' KEYBOARD OR USING ANOTHER INSTRUCTION FILE.'/)
	IERRR = -1
	RETURN
	END
	SUBROUTINE GETNUMSF(IINCLUDE,READLINE,NSUBB,NSUBTOT,NUMCUR,
     1    ISTOP,MAXSUB,IPATVECC)
	DIMENSION IPATVECC(MAXSUB)
	CHARACTER READLINE*1000
	ISTOP = 1
	DO J = 1,70
	 IF(READLINE(J:J) .NE. ' ') GO TO 10
	END DO
	IF(NSUBB .EQ. 0) WRITE(*,1)
    1   FORMAT(/' THE INSTRUCTION OR OUTPUT FILE HAS AN IMPROPER BLANK'/
     1' LINE IN THE PATIENT NUMBER SECTION. ')
	ISTOP = -1
	RETURN
   10   CONTINUE
	DO J = 1,70
	 IF(READLINE(J:J) .NE. ' ') GO TO 20
	END DO
   20   ISTART = J
	IF(READLINE(ISTART:ISTART) .NE. '0') GO TO 30
	DO I = ISTART+1,70
	 IF(READLINE(I:I) .NE. ' ') GO TO 30
	END DO
	IF(IINCLUDE .EQ. 1 .AND. NSUBB .EQ. 0) THEN
	 WRITE(*,3)
    3    FORMAT(/' THE INSTRUCTION OR OUTPUT FILE HAS AN IMPROPER '/
     1' LINE - WITH JUST A "0" ON IT - IN THE PATIENT NUMBER SECTION.')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(IINCLUDE .EQ. 2 .OR. NSUBB .GT. 0) THEN
	 ISTOP = 0
	 RETURN
	ENDIF
   30   CONTINUE
     	DO I = ISTART+1,70
	 IF(READLINE(I:I) .EQ. ' ' .OR. READLINE(I:I) .EQ. ',' .OR.
     1      READLINE(I:I) .EQ. '-') GO TO 40
	END DO
   40   IEND = I-1
	CALL GETSUB(READLINE,ISTART,IEND,ISUB,IERROR)
	IF(IERROR .EQ. -1) THEN
	 WRITE(*,7)
    7    FORMAT(/' THE INSTRUCTION OR OUTPUT FILE HAS AN IMPROPER '/
     1' LINE - WITH AN INVALID CHARACTER ON IT - IN THE PATIENT '/
     2' NUMBER SECTION.')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .LE. NUMCUR) THEN
	 WRITE(*,4) ISUB,NUMCUR
    4    FORMAT(/' THE INSTRUCTION OR OUTPUT FILE HAS AN IMPROPER '/
     1' LINE IN IT IN THE PATIENT NUMBER SECTION.'//
     2' IT HAS A SUBJECT NO. (',I4,' ) WHICH IS LESS THAN OR EQUAL TO '/
     3' A PREVIOUSLY ENTERED SUBJECT NO. (',I4,').')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .GT. NSUBTOT) THEN
	 WRITE(*,6) ISUB,NSUBTOT
    6    FORMAT(/' THE INSTRUCTION OR OUTPUT FILE HAS AN IMPROPER '/
     1' LINE IN IT IN THE PATIENT NUMBER SECTION.'//
     2' IT HAS A SUBJECT NO. (',I4,' ) WHICH IS GREATER THAN THE NO.'/
     3' OF SUBJECTS IN YOUR DATA FILE (',I4,').')
	 ISTOP = -1
	 RETURN
	ENDIF
	DO I = IEND+1,70
	 IF(READLINE(I:I) .NE. ' ') GO TO 50
	END DO
	NUMCUR = ISUB
	NSUBB = NSUBB + 1
	IPATVECC(NSUBB) = ISUB
	RETURN
   50   CONTINUE
	IF(READLINE(I:I) .EQ. ',') THEN
	 NUMCUR = ISUB
 	 NSUBB = NSUBB + 1
	 IPATVECC(NSUBB) = ISUB
	 DO J = I+1,70
	  IF(READLINE(J:J) .NE. ' ') GO TO 60
	 END DO
	 RETURN
   60    ISTART = J
	 GO TO 30
	ENDIF
	INUM = 0
	IF(READLINE(I:I) .EQ. '0') INUM = 1
	IF(READLINE(I:I) .EQ. '1') INUM = 1
	IF(READLINE(I:I) .EQ. '2') INUM = 1
	IF(READLINE(I:I) .EQ. '3') INUM = 1
	IF(READLINE(I:I) .EQ. '4') INUM = 1
	IF(READLINE(I:I) .EQ. '5') INUM = 1
	IF(READLINE(I:I) .EQ. '6') INUM = 1
	IF(READLINE(I:I) .EQ. '7') INUM = 1
	IF(READLINE(I:I) .EQ. '8') INUM = 1
	IF(READLINE(I:I) .EQ. '9') INUM = 1
	IF(INUM .EQ. 1) THEN
	 NUMCUR = ISUB
 	 NSUBB = NSUBB + 1
	 IPATVECC(NSUBB) = ISUB
         ISTART = I
	 GO TO 30
	ENDIF
	IF(READLINE(I:I) .EQ. '-') THEN
	 NUMCUR1 = ISUB
	 DO J = I+1,70
	  IF(READLINE(J:J) .NE. ' ') GO TO 70
	 END DO
	 WRITE(*,8)
    8    FORMAT(/' THE INSTRUCTION OR OUTPUT FILE HAS AN IMPROPER '/
     1' LINE IN IT IN THE PATIENT NUMBER SECTION.'//
     2' A LINE HAS BEEN ENDED WITH A DASH.')
	 ISTOP = -1
	 RETURN
   70   ISTART = J
     	DO K = ISTART+1,70
	 IF(READLINE(K:K) .EQ. ' ' .OR. READLINE(K:K) .EQ. ',')
     1    GO TO 80
	END DO
   80   IEND = K-1
	CALL GETSUB(READLINE,ISTART,IEND,ISUB,IERROR)
	IF(IERROR .EQ. -1) THEN
	 WRITE(*,7)
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .LE. NUMCUR1) THEN
	 WRITE(*,9)
    9    FORMAT(/' THE INSTRUCTION OR OUTPUT FILE HAS AN IMPROPER '/
     1' LINE IN IT IN THE PATIENT NUMBER SECTION.'//
     2' IT HAS A RANGE OF SUBJECT NOS. WITH THE ENDING NO. LESS THAN '/
     3' OR EQUAL TO THE BEGINNING NO.')
	 ISTOP = -1
	 RETURN
	ENDIF
	IF(ISUB .GT. NSUBTOT) THEN
	 WRITE(*,6) ISUB,NSUBTOT
	 ISTOP = -1
	 RETURN
	ENDIF
	 NUMCUR = ISUB
	 NN = NSUBB
 	 NSUBB = NSUBB + (NUMCUR - NUMCUR1) + 1
	 NONEW = 0
	 DO K = NN+1,NSUBB
	  NONEW = NONEW + 1
	  IPATVECC(K) = NUMCUR1 - 1 + NONEW
	 END DO
	 DO J = IEND+1,70
	  IF(READLINE(J:J) .NE. ' ' .AND. READLINE(J:J) .NE. ',' )
     1    GO TO 90
	 END DO
	 RETURN
   90    ISTART = J
	 GO TO 30
	ENDIF
	WRITE(*,7)
	ISTOP = -1
	RETURN
	END
	SUBROUTINE GETNSUB2(NSUBTOT)
	CHARACTER READLINE*1000
        CHARACTER ERRFIL*20
      COMMON/ERROR/ERRFIL
    2   FORMAT(A1000)
   10   READ(25,2) READLINE
	ILINE=0
	 DO I=1,51
	  IF(READLINE(I:I+21) .EQ. 'CTS IN THE DATA SET IS') THEN
	   ILINE=1
	   GO TO 20
	  ENDIF
	 END DO
   20   IF(ILINE .EQ. 0) GO TO 10
	 IEND = 0
	 ISTART = 0
	  DO J = I+22, 72
	   IF(ISTART .EQ. 0 .AND. READLINE(J:J) .NE. ' ') ISTART = J
	   IF(ISTART .NE. 0 .AND. READLINE(J:J) .EQ. ' ') THEN
	    IEND = J-1
	    GO TO 30
	   ENDIF
	  END DO
   30	ISIZE = IEND-ISTART
	IF(ISIZE .GT. 3) THEN
	 WRITE(*,*)' NSUBTOT IS ',NSUBTOT,' WHICH IS TOO LARGE. '
	 WRITE(*,*)' THE PROGRAM STOPS. '
        OPEN(42,FILE=ERRFIL)
         WRITE(42,*)' NSUBTOT IS ',NSUBTOT,' WHICH IS TOO LARGE. '
         WRITE(42,*)' THE PROGRAM STOPS. '
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	NSUBTOT = 0
	 DO K=ISTART,IEND
	  IF(READLINE(K:K) .EQ. '0') IVAL = 0
	  IF(READLINE(K:K) .EQ. '1') IVAL = 1
	  IF(READLINE(K:K) .EQ. '2') IVAL = 2
	  IF(READLINE(K:K) .EQ. '3') IVAL = 3
	  IF(READLINE(K:K) .EQ. '4') IVAL = 4
	  IF(READLINE(K:K) .EQ. '5') IVAL = 5
	  IF(READLINE(K:K) .EQ. '6') IVAL = 6
	  IF(READLINE(K:K) .EQ. '7') IVAL = 7
	  IF(READLINE(K:K) .EQ. '8') IVAL = 8
	  IF(READLINE(K:K) .EQ. '9') IVAL = 9
	  NSUBTOT = NSUBTOT + IVAL*10**ISIZE
	  ISIZE = ISIZE-1
	 END DO
	RETURN
	END
	SUBROUTINE GETIPATFF(IFILE,NSUBTOT,NSUB,MAXSUB,
     1   IPATVEC,IERRR)
	DIMENSION IPATVEC(MAXSUB)
	CHARACTER READLINE*1000
    3   FORMAT(A1000)
	NSUBB = 0
	NUMCUR = 0
 4210	IF(IFILE .EQ. 23) READ(23,3,ERR=4200) READLINE
	IF(IFILE .EQ. 25) READ(25,3,ERR=4200) READLINE
	CALL GETNUMSF(1,READLINE,NSUBB,NSUBTOT,NUMCUR,ISTOP,
     1                  MAXSUB,IPATVEC)
	IF(ISTOP .EQ. -1) GO TO 4200
	IF(ISTOP .EQ. 1) GO TO 4210
	IF(NSUB .EQ. NSUBB) THEN
	 IERRR = 0
	 RETURN
	ENDIF
	IF(NSUB .NE. NSUBB) THEN
         WRITE(*,2)
    2   FORMAT(//' THERE WAS AN ERROR IN THE READING OF PATIENT NOS.'/
     1' USED FOR THIS ANALYSIS. IN PARTICULAR, THE NO. OF '/
     2' SUBJECTS TO BE INCLUDED IN THE ANALYSIS, AS ENTERED IN THE'/
     3' OUTPUT FILE, DOES NOT MATCH THE LIST OF SUBJECT NOS.'/
     4' WHICH FOLLOW THAT NUMBER. IF YOU DID NOT MANUALLY EDIT THE'/
     5' OUTPUT FILE AFTER THE RUN, PLEASE CONTACT LAPK AND REPORT THIS'/
     6' ERROR.'//)
	IERRR = -1
	 RETURN
	ENDIF
 4200   WRITE(*,1)
    1   FORMAT(//' THERE WAS AN ERROR IN THE READING OF PATIENT NOS.'/
     1' USED FOR THIS ANALYSIS FROM THE OUTPUT FILE. IF YOU DID NOT '/
     2' MANUALLY EDIT THE OUTPUT FILE AFTER THE RUN, PLEASE CONTACT '/
     3' LAPK AND REPORT THIS ERROR.'//)
	IERRR = -1
	RETURN
	END
	SUBROUTINE READBLOCK(ICALL,NSUB,MAXSUB,NOUT,NDRUG,PATH,C0P,C1P,
     1 C2P,C3P,MAXNUMEQ)
	IMPLICIT REAL*8(A-H,O-Z)
        CHARACTER ERRFIL*20
      COMMON/TOWRITE/IALLIN,IVERIFY,NCOVA,ICOVTYPE,COVNAME
      COMMON/ERROR/ERRFIL
	DIMENSION TIMOUT(MAXSUB,MAXNUMEQ,650),TIMIV(MAXSUB,7,650),
     1 NTIMOUT(MAXSUB,MAXNUMEQ),NTIMIV(MAXSUB,7),RATEIV(MAXSUB,7,650),
     2 BOLUS(MAXSUB,7,650),OUT(MAXSUB,MAXNUMEQ,650),COV(MAXSUB,26,650),
     3 ICOVTYPE(26),TIMBOL(MAXSUB,7,650),NTIMBOL(MAXSUB,7),
     4 NTIMCOV(MAXSUB,26),TIMCOV(MAXSUB,26,650),TIMALL(MAXSUB,5000),
     5 NTIMALL(MAXSUB),TIMI(5000),C0P(MAXNUMEQ),C1P(MAXNUMEQ),
     6 C2P(MAXNUMEQ),C3P(MAXNUMEQ),CSUB(MAXSUB,4,MAXNUMEQ),
     7 NSST(MAXSUB),DOSELINEST(MAXSUB,99,100)
      CHARACTER READLINE*1000,COVNAME(26)*11,NUMBER(MAXSUB)*3,PATFIL*20,
     1 CHARSUB*3,SUBID*11,SUBIDPREV*11,SUBARRAY(MAXSUB)*11,
     3 PATH*60,TMPFILE*13,PATHFILE*73
    1   FORMAT(A1000)
	NDRUG = 0
	NOUT = 0
      DO ISUB = 1,MAXSUB
       NSST(ISUB) = 0
      END DO
      READ(66,*)
	  READ(66,1) READLINE
        NCOMMA = 0
        DO ISTART = 1,1000
         IF(READLINE(ISTART:ISTART) .EQ. ',') THEN
          NCOMMA = NCOMMA + 1
         ENDIF
        END DO
        NCOVA = NCOMMA - 11
	IF(NCOVA .GT. 0) THEN
	REWIND(66)
  120	READ(66,1) READLINE
	IF(READLINE(1:3) .NE. '#ID' .AND. READLINE(1:4).NE. '"#ID'
     1  .AND. READLINE(1:3) .NE. '#id' .AND. READLINE(1:4).NE. '"#id')
     2   GO TO 120
	 DO ICOV = 1,NCOVA
	  CALL AFTERCOMMA(NCOVA,READLINE,11+ICOV)
	  BACKSPACE(57)
	  READ(57,2) COVNAME(ICOV)
    2   FORMAT(A11)
	  CLOSE(57)
	 END DO
	ENDIF
      TIMADD = 0
      IF(ICALL .EQ. 1) THEN
	CALL GETMAXTIM(NCOVA,TIMAX)
	IF(TIMAX .LT. 0) THEN
	 WRITE(*,11)
   11  FORMAT(/' THERE IS SOMETHING WRONG WITH YOUR BLOCK FORMAT'/
     1' FILE. THE TIMES IN COLUMN 3 AND/OR THE TIME DURATIONS'/
     2' IN COLUMN 4 ARE BAD. PLEASE CHECK YOUR VALUES. '//
     3' THE PROGRAM STOPS.')
        OPEN(42,FILE=ERRFIL)
         WRITE(42,11)
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
   	TIMADD = TIMAX + 1.D0
      ENDIF
	REWIND(66)
	READ(66,1)
	READ(66,1)
	SUBIDPREV = '%^&*'
	NSUB = 0
   10	READ(66,1,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) GO TO 100
	IF(READLINE(1:1) .EQ. '#' .OR. READLINE(1:2) .EQ. '"#') GO TO 10
	CALL AFTERCOMMA(NCOVA,READLINE,0)
	BACKSPACE(57)
	READ(57,2) SUBID
	CLOSE(57)
	CALL GETID(SUBID)
	IF(SUBID .NE. SUBIDPREV) THEN
	 SUBIDPREV = SUBID
	 NSUB = NSUB + 1
	 WRITE(*,8888) NSUB
 8888    FORMAT('+ ',' NOW WORKING ON SUBJECT NO. ',I4)
	 SUBARRAY(NSUB) = SUBID
	 NTIMALL(NSUB) = 0
	 DO K = 1,7
	  NTIMIV(NSUB,K) = 0
	  NTIMBOL(NSUB,K) = 0
	 END DO
	 DO K = 1,26
	  NTIMCOV(NSUB,K) = 0
	 END DO
        DO K = 1,MAXNUMEQ
         NTIMOUT(NSUB,K) = 0
         CSUB(NSUB,1,K) = C0P(K)
         CSUB(NSUB,2,K) = C1P(K)
         CSUB(NSUB,3,K) = C2P(K)
         CSUB(NSUB,4,K) = C3P(K)
        END DO
	NRESETADD = 0
	NRESET = 0
	TIMERESET = TIMADD*NRESET
       NRESETLAST = -1
       DOSELINEST(NSUB,1,100) = -99
	CALL AFTERCOMMA(NCOVA,READLINE,1)
	BACKSPACE(57)
      READ(57,*,ERR=470) IDEVENT
	CLOSE(57)
	IF(IDEVENT .NE. 1) THEN
	 WRITE(*,402) SUBARRAY(NSUB),IDEVENT
  402    FORMAT(/' THERE IS AN ERROR IN THE BLOCK FORMAT. FOR SUBJECT '/
     1 1X,A11,', THE FIRST EVENT ID IS NOT 1 AS REQUIRED. IT IS ',I3/
     3' THE PROGRAM STOPS.'/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,402) SUBARRAY(NSUB),IDEVENT
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	ENDIF
	CALL AFTERCOMMA(NCOVA,READLINE,1)
	BACKSPACE(57)
      READ(57,*,ERR=470) IDEVENT
	CLOSE(57)
      GO TO 480
  470  WRITE(*,471) NSUB,READLINE(1:75)
  471  FORMAT(/' THERE IS AN ERROR IN YOUR BLOCK FORMAT FILE FOR '/
     1' SUBJECT NO. ',I5,'. THERE IS NO EVENT ID. THE 1ST 75'/
     2' CHARACTERS OF THE LINE ARE:'/
     2A75//
     3' THE PROGRAM STOPS.'/)
	 WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,471) NSUB,READLINE(1:75)
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
  	 CALL PAUSE
	 STOP
  480  CONTINUE
	IF(IDEVENT .EQ. 4) THEN
	 NRESET = NRESET + 1
	 TIMERESET = TIMADD*NRESET
	ENDIF
	CALL AFTERCOMMA(NCOVA,READLINE,2)
	BACKSPACE(57)
	READ(57,*) TIMEVENT
	CLOSE(57)
      IF(TIMEVENT .LT. 0.D0) THEN
       IF(NRESET .GT. NRESETLAST) THEN
        NSST(NSUB) = NSST(NSUB) + 1
        IF(NSST(NSUB) .GT. 99) THEN
         WRITE(*,172) NSUB
  172    FORMAT(/' FOR SUBJECT NO. ',I5,' THE NO. OF STEADY STATE DOSE'/
     1' SETS IS MORE THAN 99, THE MAXIMUM ALLOWED. PLEASE RERUN THE'/
     2' PROGRAM AFTER REDUCING THE NO. OF STEADY STATE DOSE SETS TO'/
     3' NO MORE THAN 99.'//
     4' THE PROGRAM STOPS.'/)
	  WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,172) NSUB
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
         CALL PAUSE
         STOP
        ENDIF
        DOSELINEST(NSUB,NSST(NSUB),100) = NRESET
        DOSELINEST(NSUB,NSST(NSUB),1) = TIMEVENT
        DO I = 1,7
         DOSELINEST(NSUB,NSST(NSUB),2*I) = 0.D0
         DOSELINEST(NSUB,NSST(NSUB),2*I+1) = 0.D0
        END DO
        IF(NCOVA .GT. 0) THEN
         DO 110 ICOV = 1,NCOVA
          CALL AFTERCOMMA(NCOVA,READLINE,11+ICOV)
          BACKSPACE(57)
 	    READ(57,*,ERR=95) COVVAL
	    CLOSE(57)
          DOSELINEST(NSUB,NSST(NSUB),19+ICOV) = COVVAL
          GO TO 110
   95     DOSELINEST(NSUB,NSST(NSUB),19+ICOV) = -99.D0
  110    CONTINUE
        ENDIF
       IF(NRESET .GT. 0) THEN
        DO IOUTEQ = 1,MAXNUMEQ
         NTIMOUT(NSUB,IOUTEQ) = NTIMOUT(NSUB,IOUTEQ) + 1
         TIMOUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = TIMERESET
         OUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = -99.D0
        END DO
       ENDIF
       ENDIF
        CALL AFTERCOMMA(NCOVA,READLINE,3)
        BACKSPACE(57)
        READ(57,*,ERR=170) DUR
        CLOSE(57)
        CALL AFTERCOMMA(NCOVA,READLINE,4)
        BACKSPACE(57)
        READ(57,*,ERR=170) TOTDOS
        CLOSE(57)
        CALL AFTERCOMMA(NCOVA,READLINE,5)
        BACKSPACE(57)
        READ(57,*,ERR=170) IDRUGNO
	  IF(NDRUG .LT. IDRUGNO) NDRUG = IDRUGNO
        CLOSE(57)
        IF(DUR .LE. 0.D0)
     1   DOSELINEST(NSUB,NSST(NSUB),2*IDRUGNO) = 0.D0
        IF(DUR .GT. 0.D0)
     1   DOSELINEST(NSUB,NSST(NSUB),2*IDRUGNO) = TOTDOS/DUR
        DOSELINEST(NSUB,NSST(NSUB),2*IDRUGNO+1) = TOTDOS
       NRESETLAST = NRESET
       GO TO 10
  170  WRITE(*,171) NSUB,READLINE(1:75)
  171  FORMAT(/' THERE IS AN ERROR IN YOUR BLOCK FORMAT FILE FOR '/
     1' SUBJECT NO. ',I5,'. EITHER THE DURATION, THE DOSE, OR THE '/
     2' DRUG NUMBER IS MISSING. THE 1ST 75 CHARACTERS OF THE LINE ARE:'/
     2A75//
     3' THE PROGRAM STOPS.'/)
	 WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,171) NSUB,READLINE(1:75)
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
  	 CALL PAUSE
	 STOP
      ENDIF
	TIMEVENT = TIMEVENT + TIMERESET
	IF(IDEVENT .EQ. 0) THEN
	CALL AFTERCOMMA(NCOVA,READLINE,6)
	BACKSPACE(57)
	READ(57,*,ERR=30) YVAL
	CLOSE(57)
	CALL AFTERCOMMA(NCOVA,READLINE,7)
	BACKSPACE(57)
	READ(57,*,ERR=30) IOUTEQ
	IF(NOUT .LT. IOUTEQ) NOUT = IOUTEQ
	CLOSE(57)
	NTIMOUT(NSUB,IOUTEQ) = NTIMOUT(NSUB,IOUTEQ) + 1
	TIMOUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = TIMEVENT
	OUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = YVAL
	NRESETADD = 0
	GO TO 20
   30   WRITE(*,31) NSUB, TIMEVENT - TIMERESET
   31   FORMAT(/' THERE IS AN ERROR IN THE BLOCK FORMAT. FOR SUBJECT '/
     1' NO. ',I4,' AND TIME ',F10.4, ' A LINE HAS AN EVENT ID OF 0 IN'/
     2' COL. 2, INDICATING OBSERVED VALUE INFORMATION. BUT THERE IS '/
     3' EITHER NO OBSERVED VALUE IN COL. 7, OR NO OUTPUT EQUATION NO.'/
     4' IN ENTRY 8. '//
     3' THE PROGRAM STOPS.')
	WRITE(*,401) NSUB,SUBARRAY(NSUB)
  401   FORMAT(/' NOTE: THE ID FOR SUBJECT NO. ',I4,' IS ',A11/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,31) NSUB, TIMEVENT - TIMERESET
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
	CALL PAUSE
	STOP
   20 CONTINUE
        IMISSC0 = 0
        IMISSC1 = 0
        IMISSC2 = 0
        IMISSC3 = 0
        CALL AFTERCOMMA(NCOVA,READLINE,8)
        BACKSPACE(57)
        READ(57,*,ERR=230) C0
        CLOSE(57)
        GO TO 235
  230   IMISSC0 = 1
  235   CALL AFTERCOMMA(NCOVA,READLINE,9)
        BACKSPACE(57)
        READ(57,*,ERR=240) C1
        CLOSE(57)
        GO TO 245
  240   IMISSC1 = 1
  245   CALL AFTERCOMMA(NCOVA,READLINE,10)
        BACKSPACE(57)
        READ(57,*,ERR=250) C2
        CLOSE(57)
        GO TO 255
  250   IMISSC2 = 1
  255   CALL AFTERCOMMA(NCOVA,READLINE,11)
        BACKSPACE(57)
        READ(57,*,ERR=260) C3
        CLOSE(57)
        GO TO 265
  260   IMISSC3 = 1
  265   CONTINUE
        ISUMC = IMISSC0 + IMISSC1 + IMISSC2 + IMISSC3
        IF(ISUMC .EQ. 0) THEN
         CSUB(NSUB,1,IOUTEQ) = C0
         CSUB(NSUB,2,IOUTEQ) = C1
         CSUB(NSUB,3,IOUTEQ) = C2
         CSUB(NSUB,4,IOUTEQ) = C3
        ENDIF
        IF(ISUMC .NE. 0 .AND. ISUMC .NE. 4) THEN
         WRITE(*,231) NSUB, TIMEVENT - TIMERESET,IOUTEQ
  231    FORMAT(/' THERE IS AN ERROR IN THE BLOCK FORMAT. FOR SUBJECT '/
     1' NO. ',I4,' AND TIME ',F10.4, ' A LINE HAS AN EVENT ID OF 0 IN'/
     2' COL. 2, INDICATING OBSERVED VALUE INFORMATION, BUT THIS LINE'/
     3' HAS AN INCOMPLETE SET OF ASSAY COEFFICIENTS FOR OUTPUT EQ. '/
     4' NUMBER ',I3,'. THERE MUST BE EITHER 4 ASSAY COEFFICIENTS ON'/
     5' AN OUTPUT LINE, OR NONE (IF NO OUTPUT LINES FOR A PARTICULAR'/
     6' SUBJECT x OUTPUT EQ. COMBO HAVE ASSAY COEFFICIENTS, THEN THE'/
     7' POPULATION COEFFICIENTS WILL BE USED).'//
     8' THE PROGRAM STOPS.')
         WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,231) NSUB, TIMEVENT - TIMERESET,IOUTEQ
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
         CALL PAUSE
         STOP
        ENDIF
	ENDIF
	IF(IDEVENT .EQ. 1 .OR. IDEVENT .EQ. 4) THEN
	CALL AFTERCOMMA(NCOVA,READLINE,4)
	BACKSPACE(57)
	READ(57,*,ERR=40) TOTDOS
	CLOSE(57)
	CALL AFTERCOMMA(NCOVA,READLINE,3)
	BACKSPACE(57)
	READ(57,*,ERR=50) DUR
	CLOSE(57)
	CALL AFTERCOMMA(NCOVA,READLINE,5)
	BACKSPACE(57)
	READ(57,*,ERR=50) IDRUGNO
	IF(NDRUG .LT. IDRUGNO) NDRUG = IDRUGNO
	CLOSE(57)
	IF(DUR .GT. 0) THEN
	 NTIMALL(NSUB) = NTIMALL(NSUB) + 1
	 IF(NTIMALL(NSUB) .GT. 5000) THEN
	  WRITE(*,3001) NSUB
 3001     FORMAT(/' THE NO. OF LINES IN THE DOSAGE REGIMEN FOR SUBJECT'/
     1' NO. ',I5,' IS MORE THAN THE LIMIT OF 5000. PLEASE RERUN THE'/
     2' PROGRAM AFTER REDUCING THIS NO. TO BE LESS THAN 5000.'/)
	  WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3001) NSUB
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 TIMALL(NSUB,NTIMALL(NSUB)) = TIMEVENT
	 IF(IDEVENT .EQ. 4) THEN
	  IF(NRESETADD .EQ. 0) THEN
           DO IOUTEQ = 1,MAXNUMEQ
	    NTIMOUT(NSUB,IOUTEQ) = NTIMOUT(NSUB,IOUTEQ) + 1
            TIMOUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = TIMEVENT
   	    OUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = -99.D0
	   END DO
	   NRESETADD = 1
	  ENDIF
	 ENDIF
        ISAME = 0
        IF(NTIMIV(NSUB,IDRUGNO) .GT. 0)
     1   CALL THESAME(TIMEVENT,TIMIV(NSUB,IDRUGNO,NTIMIV(NSUB,IDRUGNO)),
     2    ISAME)
        IF(ISAME .EQ. 0) NTIMIV(NSUB,IDRUGNO) = NTIMIV(NSUB,IDRUGNO) + 1
        TIMIV(NSUB,IDRUGNO,NTIMIV(NSUB,IDRUGNO)) = TIMEVENT
        RATEIV(NSUB,IDRUGNO,NTIMIV(NSUB,IDRUGNO)) = TOTDOS/DUR
	 NTIMALL(NSUB) = NTIMALL(NSUB) + 1
	 IF(NTIMALL(NSUB) .GT. 5000) THEN
	  WRITE(*,3001) NSUB
	  WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3001) NSUB
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 TIMALL(NSUB,NTIMALL(NSUB)) = TIMEVENT + DUR
	 NTIMIV(NSUB,IDRUGNO) = NTIMIV(NSUB,IDRUGNO) + 1
	 TIMIV(NSUB,IDRUGNO,NTIMIV(NSUB,IDRUGNO)) = TIMEVENT + DUR
	 RATEIV(NSUB,IDRUGNO,NTIMIV(NSUB,IDRUGNO)) = 0.D0
	ENDIF
	IF(DUR .LE. 0) THEN
	 NTIMALL(NSUB) = NTIMALL(NSUB) + 1
	 IF(NTIMALL(NSUB) .GT. 5000) THEN
	  WRITE(*,3001) NSUB
	  WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3001) NSUB
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 TIMALL(NSUB,NTIMALL(NSUB)) = TIMEVENT
	 IF(IDEVENT .EQ. 4) THEN
	  IF(NRESETADD .EQ. 0) THEN
           DO IOUTEQ = 1,MAXNUMEQ
	    NTIMOUT(NSUB,IOUTEQ) = NTIMOUT(NSUB,IOUTEQ) + 1
            TIMOUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = TIMEVENT
   	    OUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = -99.D0
	   END DO
	   NRESETADD = 1
	  ENDIF
	 ENDIF
	 NTIMBOL(NSUB,IDRUGNO) = NTIMBOL(NSUB,IDRUGNO) + 1
	 TIMBOL(NSUB,IDRUGNO,NTIMBOL(NSUB,IDRUGNO)) = TIMEVENT
	 BOLUS(NSUB,IDRUGNO,NTIMBOL(NSUB,IDRUGNO)) = TOTDOS
	ENDIF
	GO TO 40
   50   WRITE(*,51) NSUB, TIMEVENT - TIMERESET
   51   FORMAT(/' THERE IS AN ERROR IN THE BLOCK FORMAT. FOR SUBJECT '/
     1' NO. ',I4,' AND TIME ',F10.4,' A LINE HAS A DOSAGE AMT., BUT NO'/
     2' DURATION (EVEN A BOLUS SHOULD HAVE A DURATION OF 0) IN '/
     3' ENTRY 4., OR NO DRUG NO. IN ENTRY 5.'//
     3' THE PROGRAM STOPS.')
	WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,51) NSUB, TIMEVENT - TIMERESET
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
	CALL PAUSE
	STOP
   40   CONTINUE
	IF(NCOVA .GT. 0) THEN
       DO 60 ICOV = 1,NCOVA
	  CALL AFTERCOMMA(NCOVA,READLINE,11+ICOV)
	  BACKSPACE(57)
 	  READ(57,*,ERR=70) COVVAL
	  CLOSE(57)
	  NTIMALL(NSUB) = NTIMALL(NSUB) + 1
	 IF(NTIMALL(NSUB) .GT. 5000) THEN
	  WRITE(*,3001) NSUB
	  WRITE(*,401) NSUB,SUBARRAY(NSUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,3001) NSUB
         WRITE(42,401) NSUB,SUBARRAY(NSUB)
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 TIMALL(NSUB,NTIMALL(NSUB)) = TIMEVENT
	 IF(IDEVENT .EQ. 4) THEN
	  IF(NRESETADD .EQ. 0) THEN
           DO IOUTEQ = 1,MAXNUMEQ
	    NTIMOUT(NSUB,IOUTEQ) = NTIMOUT(NSUB,IOUTEQ) + 1
            TIMOUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = TIMEVENT
   	    OUT(NSUB,IOUTEQ,NTIMOUT(NSUB,IOUTEQ)) = -99.D0
	   END DO
	   NRESETADD = 1
	  ENDIF
	 ENDIF
	  IF(NTIMCOV(NSUB,ICOV) .GT. 0) THEN
	   CALL THESAME(TIMEVENT,TIMCOV(NSUB,ICOV,NTIMCOV(NSUB,ICOV)),
     1                  ISAMETIME)
	   CALL THESAME(COVVAL,COV(NSUB,ICOV,NTIMCOV(NSUB,ICOV)),
     1                  ISAMECOV)
	   IF(ISAMETIME .EQ. 1 .AND. ISAMECOV .EQ. 1) GO TO 60
	   IF(ISAMETIME .EQ. 1 .AND. ISAMECOV .EQ. 0) THEN
            WRITE(*,41) NSUB,TIMEVENT-TIMERESET,ICOV,
     1       COV(NSUB,ICOV,NTIMCOV(NSUB,ICOV)),COVVAL
   41       FORMAT(/' FOR SUBJECT, 'I2,' AT TIME ',G12.4,', COVARIATE'/
     1' NO. ',I2,' WAS SET TO BOTH ',G12.4,' AND ',G12.4,'. YOU SHOULD'/
     2' CHECK YOUR BLOCK FILE. FOR NOW, THE FIRST VALUE WILL BE USED.')
	    GO TO 60
	   ENDIF
	  ENDIF
	  NTIMCOV(NSUB,ICOV) = NTIMCOV(NSUB,ICOV) + 1
	  TIMCOV(NSUB,ICOV,NTIMCOV(NSUB,ICOV)) = TIMEVENT
	  COV(NSUB,ICOV,NTIMCOV(NSUB,ICOV)) = COVVAL
	  GO TO 60
   70     CONTINUE
   60   CONTINUE
	ENDIF
	ENDIF
	GO TO 10
  100   CONTINUE
	IF(ICALL .EQ. 2) RETURN
      IF(IALLIN .EQ. 1 .AND. IVERIFY .EQ. 0) THEN
       DO ICOV = 1,NCOVA
        IF(ICOVTYPE(ICOV) .NE. 1) ICOVTYPE(ICOV) = 2
       END DO
       GO TO 1050
      ENDIF
	IF(NCOVA .GT. 0) THEN
	 WRITE(*,111) NCOVA
  111    FORMAT(/' YOUR BLOCK FORMAT PATIENT INFORMATION FILE SHOWS'/
     1' ',I2,' COVARIATES. EACH COVARIATE MUST BE SPECIFIED TO BE '/
     2' EITHER A PIECEWISE CONSTANT COVARIATE OR AN INTERPOLATED '/
     3' COVARIATE.'//
     4' A PIECEWISE CONSTANT COVARIATE WILL HAVE THE SAME VALUE FROM'/
     5' ONE EXPLICITLY CODED VALUE, THROUGH ALL INTERVEENING DOSE'/
     6' TIMES, TO THE NEXT EXPLICITLY CODED VALUE (WHEN IT WILL CHANGE).
     7 '//
     8' AN INTERPOLATED COVARIATE WILL HAVE INTERPOLATED VALUES FROM'/
     9' ONE EXPLICITY CODED VALUE, THROUGH ALL INTERVEENING DOSE '/
     1' TIMES, TO THE NEXT EXPLCITLY CODED VALUE.'//)
	 DO ICOV = 1,NCOVA
  130	  WRITE(*,112) COVNAME(ICOV)
  112     FORMAT(/' FOR COVARIATE ',A11/
     1'  ENTER 1 IF IT IS TO BE PIECEWISE CONSTANT; '/
     2'  ENTER 2 IF IT IS TO BE INTERPOLATED: ')
	  READ(*,*,ERR=130) ITYPE
	  IF(ITYPE .NE. 1 .AND. ITYPE .NE. 2) GO TO 130
	  ICOVTYPE(ICOV) = ITYPE
	 END DO
	ENDIF
 1050 CONTINUE
	DO JSUB = 1,NSUB
	 CALL GETCHAR(JSUB,CHARSUB)
	 NUMBER(JSUB) = CHARSUB
	END DO
	DO 1000 ISUB = 1,NSUB
	 PATFIL = 'XQZPJ'//NUMBER(ISUB)//'.ZMQ'
         TMPFILE = ' '
	 TMPFILE = PATFIL
	 CALL FULLNAME(PATH,TMPFILE,PATHFILE)
	 OPEN(33,FILE=PATHFILE)
	 IF(NDRUG .GT. 7) THEN
	  WRITE(*,101) NDRUG
  101     FORMAT(/' NO. OF DRUGS IN THIS PATIENT DATA SET IS ',I2/
     1'  THIS IS MORE THAN 7, THE MAXIMUM --> PROGRAM STOPS.'/)
	  WRITE(*,401) ISUB,SUBARRAY(ISUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,101) NDRUG
         WRITE(42,401) ISUB,SUBARRAY(ISUB)
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 IF(NOUT .GT. MAXNUMEQ) THEN
	  WRITE(*,106) NOUT,MAXNUMEQ
  106     FORMAT(/' NO. OF OUTPUT EQS. THIS PATIENT DATA SET IS ',I2/
     1' THIS IS MORE THAN THE MAX. ALLOWED VALUE OF ',I2,'. SO THE'/
     2' PROGRAM STOPS.'/)
	  WRITE(*,401) ISUB,SUBARRAY(ISUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,106) NOUT,MAXNUMEQ
         WRITE(42,401) ISUB,SUBARRAY(ISUB)
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 IF(NCOVA .GT. 26) THEN
	  WRITE(*,103) NCOVA
  103     FORMAT(/' NO. OF COVARIATES IN THIS PATIENT DATA SET IS ',I3/
     1'  THIS IS MORE THAN 26, THE MAXIMUM --> PROGRAM STOPS.'/)
	  WRITE(*,401) ISUB,SUBARRAY(ISUB)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,103) NCOVA
         WRITE(42,401) ISUB,SUBARRAY(ISUB)
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
       CALL TIMESET(MAXSUB,ISUB,SUBARRAY(ISUB),NTIMALL,TIMALL,NTIMI,
     1    TIMI)
	 CALL WRITEDOS(ISUB,NTIMIV,TIMIV,RATEIV,NTIMBOL,TIMBOL,BOLUS,
     1    NTIMCOV,TIMCOV,COV,ICOVTYPE,NDRUG,NCOVA,NOUT,NTIMOUT,
     2    TIMOUT,OUT,SUBARRAY(ISUB),COVNAME,MAXSUB,NTIMI,TIMI,TIMADD,
     3    CSUB,NSST,DOSELINEST,MAXNUMEQ)
 1000   CONTINUE
	RETURN
	END
	SUBROUTINE AFTERCOMMA(NCOVA,READLINE,NCOMMA)
	CHARACTER READLINE*1000
        CHARACTER ERRFIL*20
      COMMON/ERROR/ERRFIL
    1   FORMAT(A1000)
	IF(NCOMMA .EQ. 0) THEN
	 ISTART = 0
	 GO TO 10
	ENDIF
	ICOMMA = 0
	DO ISTART = 1,300
	 IF(READLINE(ISTART:ISTART) .EQ. ',') THEN
	  ICOMMA = ICOMMA + 1
	  IF(ICOMMA .EQ. NCOMMA) GO TO 10
	 ENDIF
	END DO
	WRITE(*,2) NCOMMA,ICOMMA,READLINE
    2   FORMAT(/' THE FOLLOWING LINE WAS SUPPOSED TO HAVE AT LEAST ',I3/
     1' COMMAS, BUT IT HAD ONLY ',I3,' SO THE PROGRAM STOPS.'//
     2A1000)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,2) NCOMMA,ICOMMA,READLINE
        CLOSE(42)
	CALL PAUSE
	STOP
   10	ICOMMA = 0
	DO IEND = 1,300
	 IF(READLINE(IEND:IEND) .EQ. ',') THEN
	  ICOMMA = ICOMMA + 1
	  IF(ICOMMA .EQ. NCOMMA+1) GO TO 20
	 ENDIF
	END DO
	IF(NCOMMA .LT. 11 + NCOVA) THEN
	 WRITE(*,2) NCOMMA+1,ICOMMA,READLINE
        OPEN(42,FILE=ERRFIL)
         WRITE(42,2) NCOMMA+1,ICOMMA,READLINE
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	IF(NCOMMA .EQ. 11 + NCOVA) IEND = 301
   20	  OPEN(57,STATUS='SCRATCH')
        NUMCHAR = IEND - ISTART - 1
        IF(NUMCHAR .EQ. 1) WRITE(57,101) READLINE(ISTART+1:IEND-1)
  101   FORMAT(A1)
        IF(NUMCHAR .EQ. 2) WRITE(57,102) READLINE(ISTART+1:IEND-1)
  102   FORMAT(A2)
        IF(NUMCHAR .EQ. 3) WRITE(57,103) READLINE(ISTART+1:IEND-1)
  103   FORMAT(A3)
        IF(NUMCHAR .EQ. 4) WRITE(57,104) READLINE(ISTART+1:IEND-1)
  104   FORMAT(A4)
        IF(NUMCHAR .EQ. 5) WRITE(57,105) READLINE(ISTART+1:IEND-1)
  105   FORMAT(A5)
        IF(NUMCHAR .EQ. 6) WRITE(57,106) READLINE(ISTART+1:IEND-1)
  106   FORMAT(A6)
        IF(NUMCHAR .EQ. 7) WRITE(57,107) READLINE(ISTART+1:IEND-1)
  107   FORMAT(A7)
        IF(NUMCHAR .EQ. 8) WRITE(57,108) READLINE(ISTART+1:IEND-1)
  108   FORMAT(A8)
        IF(NUMCHAR .EQ. 9) WRITE(57,109) READLINE(ISTART+1:IEND-1)
  109   FORMAT(A9)
        IF(NUMCHAR .EQ. 10) WRITE(57,110) READLINE(ISTART+1:IEND-1)
  110   FORMAT(A10)
        IF(NUMCHAR .EQ. 11) WRITE(57,111) READLINE(ISTART+1:IEND-1)
  111   FORMAT(A11)
        IF(NUMCHAR .GT. 11) WRITE(57,*) READLINE(ISTART+1:IEND-1)
	RETURN
	END
	SUBROUTINE WRITEDOS(ISUB,NTIMIV,TIMIV,RATEIV,NTIMBOL,TIMBOL,
     1   BOLUS,NTIMCOV,TIMCOV,COV,ICOVTYPE,NDRUG,NCOVA,NOUT,NTIMOUT,
     2   TIMOUT,OUT,SUBID,COVNAME,MAXSUB,NTIMI,TIMI,TIMADD,CSUB,NSST,
     3   DOSELINEST,MAXNUMEQ)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION BOLVAL(7),COVVAL(26),XIVVAL(7),DOSELINE(650,43),
     1 TIMOUT(MAXSUB,MAXNUMEQ,650),TIMIV(MAXSUB,7,650),
     2 NTIMOUT(MAXSUB,MAXNUMEQ),
     2 NTIMIV(MAXSUB,7),RATEIV(MAXSUB,7,650),BOLUS(MAXSUB,7,650),
     3 OUT(MAXSUB,MAXNUMEQ,650),COV(MAXSUB,26,650),ICOVTYPE(26),
     4 TIMBOL(MAXSUB,7,650),NTIMBOL(MAXSUB,7),NTIMCOV(MAXSUB,26),
     5 TIMCOV(MAXSUB,26,650),INDIV(7),INDBOL(7),INDCOV(26),
     6 TIMI(5000),TIMORD(3900),BLOCKOUT(3900,MAXNUMEQ),
     7 CSUB(MAXSUB,4,MAXNUMEQ),
     7 NSST(MAXSUB),DOSELINEST(MAXSUB,99,100),DOSELINES(100)
	CHARACTER SUBID*11,COVNAME(26)*11,ERRFIL*20
      COMMON/ERROR/ERRFIL
	WRITE(33,301) SUBID
  301   FORMAT('  LAST AND FIRST NAMES ARE: ',A11)
	WRITE(33,302) SUBID
  302   FORMAT(' CHART NUMBER IS: ',A11//
     1' WARD NO, PATIENT AGE (YEARS), SEX, HEIGHT (INCHES),'/
     2' ETHNICITY FLAG, AND ETHNICITY DESCRIPTION (IF ANY)   FOLLOW ON'/
     3' THE NEXT 6 LINES:'/
     4'-99'/
     5'-99'/
     6'M'/
     7'-99'/
     8'1'/
     9'Ethnicity Description'//
     1' DATE OF FIRST THERAPY IS   1   1   08'/
     2'CCR ML/MIN/    0.00 150.00'/
     3'HOURS    MG     MG/HR    MCG/ML KG       MG/DL    60  .00 ')
	 WRITE(33,102) NDRUG
  102    FORMAT(/'     ',I1,' ... NO. OF DRUGS')
	 WRITE(33,104) NCOVA
  104    FORMAT('    ',I2,' ... NO. OF ADDITIONAL COVARIATES')
	WRITE(33,2) NTIMI + NSST(ISUB)
    2   FORMAT('   ',I3,' ... NO. OF DOSE EVENTS'//
     1'    TIME, IV/PO FOR EACH DRUG; ADDITIONAL COVARIATES IF ANY')
	DO IDRUG = 1,NDRUG
	 XIVVAL(IDRUG) = 0.D0
	 BOLVAL(IDRUG) = 0.D0
	END DO
	DO ICOV = 1,NCOVA
	 COVVAL(ICOV) = COV(ISUB,ICOV,1)
	END DO
	DO IDRUG = 1,NDRUG
	 INDIV(IDRUG) = 1
	 INDBOL(IDRUG) = 1
	END DO
	DO ICOV = 1,NCOVA
	 INDCOV(ICOV) = 1
	END DO
	NRESET = 0
	TIMERESET = TIMADD*NRESET
      NSSEVENTS = 1
      CALL THESAME(DOSELINEST(ISUB,1,100),0.D0,ISAME)
      IF(ISAME .EQ. 1) THEN
	 DOSELINES(1) = DOSELINEST(ISUB,1,1)
	 NENTRY = 1
	 DO IDRUG = 1,NDRUG
	  NENTRY = NENTRY+1
        DOSELINES(NENTRY) = DOSELINEST(ISUB,1,2*IDRUG)
	  NENTRY = NENTRY+1
	  DOSELINES(NENTRY) = DOSELINEST(ISUB,1,2*IDRUG+1)
	 END DO
       IF(NCOVA .GT. 0) THEN
	  DO ICOV = 1,NCOVA
	   NENTRY = NENTRY+1
	   DOSELINES(NENTRY) = DOSELINEST(ISUB,1,19+ICOV)
	  END DO
       ENDIF
       WRITE(33,1) (DOSELINES(J),J=1,NENTRY)
       NSSEVENTS = NSSEVENTS + 1
      ENDIF
	DO 1000 ITIM = 1,NTIMI
	 TIME = TIMI(ITIM)
       CALL THESAME(TIME,TIMADD*(NRESET+1),ISAMERESET)
       IF(TIME .GE. TIMADD*(NRESET+1)) THEN
	  NRESET = NRESET + 1
	  TIMERESET = TIMADD*NRESET
        IF(NSSEVENTS .LE. NSST(ISUB)) THEN
         XRESET = NRESET
         CALL THESAME(DOSELINEST(ISUB,NSSEVENTS,100),XRESET,ISAME)
         IF(ISAME .EQ. 1) THEN
          DOSELINES(1) = DOSELINEST(ISUB,NSSEVENTS,1)
          NENTRY = 1
          DO IDRUG = 1,NDRUG
           NENTRY = NENTRY+1
           DOSELINES(NENTRY) = DOSELINEST(ISUB,NSSEVENTS,2*IDRUG)
           NENTRY = NENTRY+1
           DOSELINES(NENTRY) = DOSELINEST(ISUB,NSSEVENTS,2*IDRUG+1)
          END DO
          IF(NCOVA .GT. 0) THEN
           DO ICOV = 1,NCOVA
            NENTRY = NENTRY+1
            DOSELINES(NENTRY) = DOSELINEST(ISUB,NSSEVENTS,19+ICOV)
           END DO
          ENDIF
          WRITE(33,1) (DOSELINES(J),J=1,NENTRY)
          NSSEVENTS = NSSEVENTS + 1
         ENDIF
        ENDIF
	 ENDIF
	DO IDRUG = 1,NDRUG
	 IF(INDBOL(IDRUG) .GT. NTIMBOL(ISUB,IDRUG)) TIMEB = -99.D0
	 IF(INDBOL(IDRUG) .LE. NTIMBOL(ISUB,IDRUG)) THEN
	  TIMEB = TIMBOL(ISUB,IDRUG,INDBOL(IDRUG))
	 ENDIF
	 CALL THESAME(TIME,TIMEB,ISAME)
	  IF(ISAME .EQ. 0) BOLVAL(IDRUG) = 0.D0
	  IF(ISAME .EQ. 1) THEN
	   BOLVAL(IDRUG) = BOLUS(ISUB,IDRUG,INDBOL(IDRUG))
	   INDBOL(IDRUG) = INDBOL(IDRUG) + 1
	  ENDIF
	 END DO
	DO ICOV = 1,NCOVA
	 IF(INDCOV(ICOV) .GT. NTIMCOV(ISUB,ICOV)) TIMEC = -99.D0
	 IF(INDCOV(ICOV) .LE. NTIMCOV(ISUB,ICOV)) THEN
	  TIMEC = TIMCOV(ISUB,ICOV,INDCOV(ICOV))
	 ENDIF
	 CALL THESAME(TIME,TIMEC,ISAME)
        IF(ISAME .EQ. 1) THEN
         COVVAL(ICOV) = COV(ISUB,ICOV,INDCOV(ICOV))
         INDCOV(ICOV) = INDCOV(ICOV) + 1
        ENDIF
	IF(ISAME .EQ. 0) THEN
	 INTERP = 1
	 IF(ICOVTYPE(ICOV) .EQ. 1 .OR. ICOVTYPE(ICOV) .EQ. 0)
     1    INTERP = 0
	 IF(TIMEC .LE. -99) INTERP = 0
	 IF(ISAMERESET .EQ. 1) INTERP = 0
	 IF(TIMEC .GE. TIMERESET + TIMADD) INTERP = 0
	 IF(INDCOV(ICOV) .EQ. 1) THEN
	  WRITE(*,111) ICOV
  111     FORMAT(/' THERE IS A MISTAKE IN THE BLOCK FORMAT PATIENT'/
     1' DATA FILE. THE FIRST VALUE FOR COVARIATE NO. ',I2,' WAS NOT'/
     2' SPECIFIED AT THE ORIGINAL TIME = 0, AS IS REQUIRED. PLEASE'/
     3' FIX THIS ERROR AND RERUN THE PROGRAM. '//)
	  WRITE(*,401) ISUB,SUBID
  401     FORMAT(/' NOTE: THE ID FOR SUBJECT NO. ',I4,' IS ',A11/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,111) ICOV
         WRITE(42,401) ISUB,SUBID
        CLOSE(42)
	  CALL PAUSE
	  STOP
	 ENDIF
	 CLAST = COV(ISUB,ICOV,INDCOV(ICOV)-1)
	 IF(INTERP .EQ. 0) COVVAL(ICOV) = CLAST
	 IF(INTERP .EQ. 1) THEN
	  TLAST = TIMCOV(ISUB,ICOV,INDCOV(ICOV)-1) - TIMERESET
	  CNEXT = COV(ISUB,ICOV,INDCOV(ICOV))
	  TNEXT = TIMCOV(ISUB,ICOV,INDCOV(ICOV)) - TIMERESET
	  TIMEREAL = TIME - TIMERESET
	  COVVAL(ICOV) = (TIMEREAL-TLAST)/(TNEXT-TLAST) * (CNEXT-CLAST)
     1     + CLAST
	 ENDIF
	ENDIF
	 END DO
	DO IDRUG = 1,NDRUG
	 IF(INDIV(IDRUG) .GT. NTIMIV(ISUB,IDRUG)) TIMEI = -99.D0
	 IF(INDIV(IDRUG) .LE. NTIMIV(ISUB,IDRUG)) THEN
	  TIMEI = TIMIV(ISUB,IDRUG,INDIV(IDRUG))
	 ENDIF
	 CALL THESAME(TIME,TIMEI,ISAME)
	  IF(ISAME .EQ. 1) THEN
	   XIVVAL(IDRUG) = RATEIV(ISUB,IDRUG,INDIV(IDRUG))
	   INDIV(IDRUG) = INDIV(IDRUG) + 1
	  ENDIF
	 END DO
	 DOSELINE(ITIM,1) = TIME - TIMERESET
	 NENTRY = 1
	 DO IDRUG = 1,NDRUG
	  NENTRY = NENTRY+1
	  DOSELINE(ITIM,NENTRY) = XIVVAL(IDRUG)
	  NENTRY = NENTRY+1
	  DOSELINE(ITIM,NENTRY) = BOLVAL(IDRUG)
	 END DO
	 DO ICOV = 1,NCOVA
	  NENTRY = NENTRY+1
	  DOSELINE(ITIM,NENTRY) = COVVAL(ICOV)
	 END DO
       WRITE(33,1) (DOSELINE(ITIM,J),J=1,NENTRY)
    1  FORMAT(43(G19.9,1X))
 1000   CONTINUE
 1010   CONTINUE
        IF(NSSEVENTS .LE. NSST(ISUB)) THEN
          DOSELINES(1) = DOSELINEST(ISUB,NSSEVENTS,1)
          NENTRY = 1
          DO IDRUG = 1,NDRUG
           NENTRY = NENTRY+1
           DOSELINES(NENTRY) = DOSELINEST(ISUB,NSSEVENTS,2*IDRUG)
           NENTRY = NENTRY+1
           DOSELINES(NENTRY) = DOSELINEST(ISUB,NSSEVENTS,2*IDRUG+1)
          END DO
          IF(NCOVA .GT. 0) THEN
           DO ICOV = 1,NCOVA
            NENTRY = NENTRY+1
            DOSELINES(NENTRY) = DOSELINEST(ISUB,NSSEVENTS,19+ICOV)
           END DO
          ENDIF
          WRITE(33,1) (DOSELINES(J),J=1,NENTRY)
          NSSEVENTS = NSSEVENTS + 1
          GO TO 1010
        ENDIF
	WRITE(33,106) NOUT
  106   FORMAT(/'     ',I1,' ... NO. OF TOTAL OUTPUT EQUATIONS')
	CALL FIXOUTIM(MAXSUB,ISUB,SUBID,NOUT,NTIMOUT,TIMOUT,OUT,NTIMORD,
     1   TIMORD,BLOCKOUT,TIMADD,MAXNUMEQ)
      	WRITE(33,62) NTIMORD
   62   FORMAT('   ',I3,' ... NO. OF OBSERVED VALUE TIMES')
	DO I = 1,NTIMORD
	 WRITE(33,63) TIMORD(I),(BLOCKOUT(I,J),J=1,NOUT)
   63    FORMAT(7(G16.8,1X))
	END DO
	WRITE(33,303)
  303   FORMAT(/' COVARIATE NAMES AND VALUES (1ST, LAST, AND MEAN) FOLLO
     1W:')
	XMEAN = -99
	DO ICOV = 1,NCOVA
   	 WRITE(33,304) COVNAME(ICOV),COV(ISUB,ICOV,1),
     1    COV(ISUB,ICOV,NTIMCOV(ISUB,ICOV)),XMEAN
	END DO
  304   FORMAT(A11,3X,3(F15.5,1X))
	WRITE(33,306)
  306   FORMAT(/'ASSAY COEFFICIENTS FOLLOW, ONE SET FOR EACH OUTPUT EQUA
     1TION:')
        DO K = 1,NOUT
         WRITE(33,3061) (CSUB(ISUB,I,K),I=1,4)
        END DO
 3061   FORMAT(4(F17.8,1X))
	CLOSE(33)
	RETURN
	END
	SUBROUTINE THESAME(X1,X2,ISAME)
	IMPLICIT REAL*8(A-H,O-Z)
	ISAME = 0
	XDEL = DABS(X1-X2)
	IF(XDEL .LE. 1.D-10) ISAME = 1
	RETURN
	END
	SUBROUTINE GETID(SUBID)
	CHARACTER SUBID*11,SUB*11
	SUB = '           '
	DO I = 1,11
	 IF(SUBID(I:I) .NE. ',') SUB(I:I) = SUBID(I:I)
	 IF(SUBID(I:I) .EQ. ',') GO TO 10
	END DO
   10   SUBID = SUB
	RETURN
	END
	SUBROUTINE TIMESET(MAXSUB,ISUB,SUBID,NTIMALL,TIMALL,NTIMI,
     1    TIMI)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION TIMALL(MAXSUB,5000),NTIMALL(MAXSUB),TIMI(5000),
     1   TIM(5000)
	CHARACTER SUBID*11
	CALL THESAME(TIMALL(ISUB,1),0.D0,ISAME)
	DO I = 1,NTIMALL(ISUB)
	 TIM(I) = TIMALL(ISUB,I)
	END DO
	CALL PUTORDER(NTIMALL(ISUB),TIM)
	TIMELAST = -1.D39
	NTIMI = 0
	DO I = 1,NTIMALL(ISUB)
	 TIME = TIM(I)
	 CALL THESAME(TIME,TIMELAST,ISAME)
	 IF(ISAME .EQ. 1) GO TO 30
	  NTIMI = NTIMI + 1
	  TIMI(NTIMI) = TIME
	  TIMELAST = TIME
   30    CONTINUE
	END DO
	RETURN
	END
	SUBROUTINE PUTORDER(NX,XX)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION XX(5000),Y(5000),IZ(5000),IZZ(5000)
	 DO I=1,NX
	  Y(I) = XX(I)
	  IZ(I) = -99
	 END DO
	 DO IPLACE = 1,NX
	  TEMP = 1.D50
	  DO I=1,NX
	   IF(Y(I) .LT. TEMP .AND. IZ(I) .EQ. -99) THEN
	    TEMP = Y(I)
	    IND = I
	   ENDIF
	  END DO
	  IZZ(IPLACE) = IND
	  IZ(IND) = 0
	 END DO
	 DO I = 1,NX
	  XX(I) = Y(IZZ(I))
	 END DO
	RETURN
	END
	SUBROUTINE FIXOUTIM(MAXSUB,ISUB,SUBID,NOUT,NTIMOUT,TIMOUT,OUT,
     1   NTIMORD,TIMORD,BLOCKOUT,TIMADD,MAXNUMEQ)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION TIMOUT(MAXSUB,MAXNUMEQ,650),NTIMOUT(MAXSUB,MAXNUMEQ),
     1 IENTRY(MAXNUMEQ),OUT(MAXSUB,MAXNUMEQ,650),TIMORD(3900),
     2 BLOCKOUT(3900,MAXNUMEQ)
	CHARACTER SUBID*11,ERRFIL*20
      COMMON/ERROR/ERRFIL
	DO IOUT = 1,NOUT
	 IENTRY(IOUT) = 1
	END DO
	INEXT = 1
   20	TIMENEXT = 1.D50
	 IANOTHER = 0
        DO IOUT	= 1,NOUT
	 IF(IENTRY(IOUT) .LE. NTIMOUT(ISUB,IOUT)) THEN
	  IANOTHER = 1
	  IF(TIMOUT(ISUB,IOUT,IENTRY(IOUT)) .LE. TIMENEXT)
     1     TIMENEXT = TIMOUT(ISUB,IOUT,IENTRY(IOUT))
	 ENDIF
	END DO
	IF(IANOTHER .EQ. 0) GO TO 100
	IF(INEXT .GT. 3900) THEN
	 WRITE(*,1)
    1    FORMAT(/' THE TOTAL NO. OF OBSERVATION TIMES IS GREATER THAN'/
     1' THE MAXIMUM ALLOWABLE VALUE OF 3900 (SUBROUTINE FIXOUTIM).'/
     2' RERUN THE PROGRAM AFTER REDUCING THE NO. OF OBS. TIMES.'/)
	 WRITE(*,401) ISUB,SUBID
  401    FORMAT(/' NOTE: THE ID FOR SUBJECT NO. ',I4,' IS ',A11/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,1)
         WRITE(42,401) ISUB,SUBID
        CLOSE(42)
	 CALL PAUSE
	 STOP
	ENDIF
	TIMORD(INEXT) = TIMENEXT
        DO IOUT	= 1,NOUT
	  BLOCKOUT(INEXT,IOUT) = -99.D0
	  CALL THESAME(TIMENEXT,TIMOUT(ISUB,IOUT,IENTRY(IOUT)),ISAME)
	  IF(ISAME .EQ. 1) THEN
	   BLOCKOUT(INEXT,IOUT) = OUT(ISUB,IOUT,IENTRY(IOUT))
	   IENTRY(IOUT) = IENTRY(IOUT) + 1
	  ENDIF
	END DO
	INEXT = INEXT + 1
	GO TO 20
  100   NTIMORD = INEXT - 1
	NRESET = 0
	TIMERESET = TIMADD*NRESET
	DO I = 1,NTIMORD
	 CALL THESAME(TIMORD(I),TIMADD*(NRESET+1),ISAME)
	 IF(ISAME .EQ. 1) THEN
	  NRESET = NRESET + 1
	  TIMERESET = TIMADD*NRESET
	 ENDIF
	 TIMORD(I) = TIMORD(I) - TIMERESET
	END DO
	RETURN
	END
	SUBROUTINE GETMAXTIM(NCOVA,TIMAX)
	IMPLICIT REAL*8(A-H,O-Z)
	CHARACTER READLINE*1000
      WRITE(*,103)
  103 FORMAT(' FINDING THE MAXIMUM TIME OVER ALL SUBJECTS ... '/)
      TIMAX = -1.D0
   10 READ(66,1,IOSTAT=IEND) READLINE
    1 FORMAT(A1000)
      IF(IEND .LT. 0) RETURN
      IF(READLINE(1:1) .EQ. '#' .OR. READLINE(1:2) .EQ. '"#') GO TO 10
      CALL AFTERCOMMA(NCOVA,READLINE,2)
      BACKSPACE(57)
      READ(57,*) TIMEVENT
      CLOSE(57)
      CALL AFTERCOMMA(NCOVA,READLINE,3)
      BACKSPACE(57)
      READ(57,*,ERR=15) TIMDUR
      GO TO 20
   15 TIMDUR = 0.D0
   20 TIME = TIMEVENT + TIMDUR
      CLOSE(57)
      IF(TIMAX .LT. TIME) TIMAX = TIME
      WRITE(*,104) TIME,TIMAX
  104 FORMAT(' TIME AND MAX TIME ARE: ',2(G20.10,2X))
      GO TO 10
      END
      SUBROUTINE WRITEINFILE(NENTRY,PATHFILAST,IDELTA,XMIC,ICENT,
     1   AUCINT,AF,INDPTS,MAXCYC,JSTOP,TOLC,NUMEQT,C0P,C1P,C2P,C3P,
     2   IERRMOD,GAMLAM0,IASS,NOFIX,VALFIX,NVAR,AB,NSUB,NSUBTOT,MAXSUB,
     3   IPATVEC,IFORMT,BLOCKPAT,PREFIX,EXT,NDRUG,FORFILE,NDIM,NP,IRAN,
     4   PAR,PARFIX,TOLER,INPRI,PRIFIL2,MAXNUMEQ,NRANFIX,PARRANFIX,
     5   RANFIXEST)
	IMPLICIT REAL*8(A-H,O-Z)
      COMMON/TOWRITE/IALLIN,IVERIFY,NCOVA,ICOVTYPE,COVNAME
      DIMENSION C0P(MAXNUMEQ),C1P(MAXNUMEQ),C2P(MAXNUMEQ),C3P(MAXNUMEQ),
     1 IASS(MAXNUMEQ),VALFIX(20),AB(30,2),IPATVEC(MAXSUB),AF(7),
     2 IRAN(32),ICOVTYPE(26),RANFIXEST(20)
	CHARACTER PATHFILAST*73,PREFIX*5,EXT*3,BLOCKPAT*20,PAR(30)*11,
     1  PARFIX(20)*11,PRIFIL2*20,FORFILE*20,COVNAME(26)*11,
     2  PARRANFIX(20)*11
	IF(NENTRY .LT. 2) THEN
	 NSUB = 1
	 NSUBTOT = NSUB
	 IPATVEC(1) = I
	ENDIF
	IF(NENTRY .LT. 3) THEN
       NDRUG = 1
       AF(1) = 1.D0
	 IF(NOFIX .GT. 0) THEN
	  DO I = 1,NOFIX
	   VALFIX(I) = -99.D0
	  END DO
	 ENDIF
	 IF(NRANFIX .GT. 0) THEN
	  DO I = 1,NRANFIX
	   RANFIXEST(I) = -99.D0
	  END DO
	 ENDIF
	 DO I=1,NVAR
	  AB(I,1) = -99.D0
	  AB(I,2) = -99.D0
	 END DO
	ENDIF
	IF(NENTRY .LT. 4) THEN
	 IF(NENTRY .LT. 3) NUMEQT = 1
	 DO IEQ = 1,NUMEQT
	  C0P(IEQ) = 0
	  C1P(IEQ) = .1
	  C2P(IEQ) = 0
	  C3P(IEQ) = 0
        IASS(IEQ) = 1
	 END DO
	 IERRMOD = 1
	 GAMLAM0 = -99.D0
	ENDIF
	IF(NENTRY .LT. 5) THEN
       DO I = 1,NDRUG
        AF(I) = 1.D0
       END DO
	 INDPTS=6
	 MAXCYC=99
	 JSTOP=3
       TOLC = .01D0
	ENDIF
	IF(NENTRY .LT. 6) THEN
	 IDELTA=12
	 XMIC=1.D0
	 ICENT=2
	 AUCINT = 24.D0
	ENDIF
      IF(NENTRY .LT. 7) THEN
       INPRI = 1
       PRIFIL2 = ' '
      ENDIF
      IF(NENTRY .LT. 8) THEN
       NCOVA = -99
      ENDIF
        OPEN(29,FILE=PATHFILAST)
        WRITE(29,7123) 'REM_BAK OCT_15'
7123    FORMAT(A14)
        IVERIFY = 1
        WRITE(29,9111)
 9111   FORMAT(' IVERIFY: 1 --> YES; 0 --> NO')
        WRITE(29,*) IVERIFY
        WRITE(29,9112)
 9112   FORMAT(' FORTRAN MODEL FILE')
        WRITE(29,2) FORFILE
    2   FORMAT(A20)
        WRITE(29,9113)
 9113   FORMAT(' NDIM')
        WRITE(29,*) NDIM
        WRITE(29,9114)
 9114   FORMAT(' NP')
        WRITE(29,*) NP
        WRITE(29,9116)
 9116   FORMAT(' IRAN INDICES')
        WRITE(29,*) (IRAN(I),I=1,NP)
        WRITE(29,9117)
 9117   FORMAT(' NVAR')
        WRITE(29,*) NVAR
        WRITE(29,9118)
 9118   FORMAT(' PAR(I),I=1,NVAR')
        DO I = 1,NVAR
         WRITE(29,1717) PAR(I)
        END DO
 1717   FORMAT(A11)
        WRITE(29,9119)
 9119   FORMAT(' AB ARRAY')
        DO I = 1,NVAR
         WRITE(29,*) (AB(I,J),J=1,2)
        END DO
        WRITE(29,9121)
 9121   FORMAT(' NOFIX')
        WRITE(29,*) NOFIX
        WRITE(29,9122)
 9122   FORMAT(' PARFIX(I),I=1,NOFIX, IF NOFIX > 0')
        IF(NOFIX .GT. 0) THEN
         DO I = 1,NOFIX
          WRITE(29,1717) PARFIX(I)
         END DO
        ENDIF
        WRITE(29,9123)
 9123   FORMAT(' VALFIX ARRAY IF NOFIX > 0')
        IF(NOFIX .GT. 0) WRITE(29,*) (VALFIX(I),I=1,NOFIX)
        WRITE(29,9137)
 9137   FORMAT(' NRANFIX')
        WRITE(29,*) NRANFIX
        WRITE(29,9138)
 9138   FORMAT(' PARRANFIX(I),I=1,NRANFIX, IF NRANFIX > 0')
        IF(NRANFIX .GT. 0) THEN
         DO I = 1,NRANFIX
          WRITE(29,1717) PARRANFIX(I)
         END DO
        ENDIF
        WRITE(29,9139)
 9139   FORMAT(' RANFIXEST ARRAY IF NRANFIX > 0')
        IF(NRANFIX .GT. 0) WRITE(29,*) (RANFIXEST(I),I=1,NRANFIX)
        WRITE(29,9124)
 9124   FORMAT(' O.D.E. TOLERANCE')
        WRITE(29,*) TOLER
        WRITE(29,8111)
 8111   FORMAT(' IFORMT ')
        IF(IFORMT .EQ. 3) IFORMTT = 1
        IF(IFORMT .EQ. 1) IFORMTT = 2
        WRITE(29,*) IFORMTT
        IF(IFORMT .EQ. 1) THEN
         WRITE(29,8112)
 8112    FORMAT(' PREFIX')
         WRITE(29,2222) PREFIX
 2222    FORMAT(A5)
         WRITE(29,8113)
 8113    FORMAT(' EXT')
         WRITE(29,222) EXT
  222    FORMAT(A3)
        ENDIF
        IF(IFORMT .EQ. 3) THEN
         WRITE(29,8114)
 8114    FORMAT(' BLOCKPAT')
         WRITE(29,2) BLOCKPAT
         WRITE(29,9141)
 9141    FORMAT(' NCOVA')
         WRITE(29,*) NCOVA
         WRITE(29,9142)
 9142    FORMAT(' COVNAME(I),I=1,NCOVA, IF NCOVA > 0')
         IF(NCOVA .GT. 0) THEN
         DO I = 1,NCOVA
          WRITE(29,1717) COVNAME(I)
         END DO
        ENDIF
        WRITE(29,9143)
 9143   FORMAT(' ICOVTYPE ARRAY IF NCOVA > 0')
        IF(NCOVA .GT. 0) WRITE(29,*) (ICOVTYPE(I),I=1,NCOVA)
        ENDIF
        WRITE(29,8116)
 8116   FORMAT(' NSUBTOT')
        WRITE(29,*) NSUBTOT
        WRITE(29,8117)
 8117   FORMAT(' NSUB')
        WRITE(29,*) NSUB
        WRITE(29,8118)
 8118   FORMAT(' ACTIVE PATIENT NUMBERS, FOLLOWED BY A LINE WITH 0')
        CALL WRITEPT2(29,NSUB,MAXSUB,IPATVEC)
        WRITE(29,*) '    0'
        WRITE(29,8124)
 8124   FORMAT(' NUMEQT')
        WRITE(29,*) NUMEQT
        WRITE(29,8126)
 8126   FORMAT(' NUMEQT LINES OF ASSAY COEFFICIENTS')
        DO IEQ=1,NUMEQT
         WRITE(29,161) C0P(IEQ),C1P(IEQ),C2P(IEQ),C3P(IEQ)
        END DO
  161   FORMAT(4(G16.10,2X))
        WRITE(29,8127)
 8127   FORMAT(' IERRMOD')
        WRITE(29,*) IERRMOD
        WRITE(29,8128)
 8128   FORMAT(' GAMLAM0')
        WRITE(29,*) GAMLAM0
        WRITE(29,8129)
 8129   FORMAT(' IASS(I),I=1,NUMEQT')
        WRITE(29,*) (IASS(I),I=1,NUMEQT)
        WRITE(29,9131)
 9131   FORMAT(' NDRUG')
        WRITE(29,*) NDRUG
        WRITE(29,8131)
 8131   FORMAT(' AF(I),I=1,NDRUG')
        WRITE(29,*) (AF(I),I=1,NDRUG)
        WRITE(29,8132)
 8132   FORMAT(' INDPTS')
        WRITE(29,*) INDPTS
        WRITE(29,8133)
 8133   FORMAT(' MAXCYC')
        WRITE(29,*) MAXCYC
        WRITE(29,8134)
 8134   FORMAT(' JSTOP')
        WRITE(29,*) JSTOP
        WRITE(29,8136)
 8136   FORMAT(' IF JSTOP .NE. 1, TOLC IS ON NEXT LINE')
        IF(JSTOP .NE. 1) WRITE(29,*) TOLC
        WRITE(29,8137)
 8137   FORMAT(' IDELTA')
        WRITE(29,*) IDELTA
        WRITE(29,8138)
 8138   FORMAT(' XMIC')
        WRITE(29,*) XMIC
        WRITE(29,8139)
8139   FORMAT(' ICENT, WHICH IS NOW IRRELEVANT')
        WRITE(29,*) ICENT
        WRITE(29,8141)
 8141   FORMAT(' AUCINT')
        WRITE(29,*) AUCINT
        WRITE(29,9126)
 9126   FORMAT(' INPRI')
        WRITE(29,*) INPRI
        WRITE(29,9127)
 9127   FORMAT(' NAME OF APRIORI DENSITY FILE IF INPRI = 0')
        IF(INPRI .EQ. 0) WRITE(29,2) PRIFIL2
        CLOSE(29)
        RETURN
        END
        SUBROUTINE PAUSE
        WRITE(*,1)
    1   FORMAT(' HIT ANY KEY TO CONTINUE: ')
        READ(*,*,ERR=10) IKEY
        IF(IKEY .EQ. 1) RETURN
   10   RETURN
        END
        SUBROUTINE NEWCSV
        IMPLICIT REAL*8(A-H,O-Z)
        CHARACTER READLINE*1000
   10   READ(77,4,IOSTAT=IEND) READLINE
    4   FORMAT(A1000)
        IF(IEND .LT. 0) GO TO 100
        DO IENDL = 1000,1,-1
         IF(READLINE(IENDL:IENDL) .NE. ' ') GO TO 20
        END DO
   20   CONTINUE
        DO I = 1,IENDL-2
         IF(READLINE(I:I+2) .EQ. ',.,') READLINE(I:I+2) = ',n,'
        END DO
        IF(READLINE(IENDL-1:IENDL) .EQ. ',.')
     1   READLINE(IENDL-1:IENDL) = ',n'
	IF(IENDL .LE. 26) THEN
	 WRITE(67,26) READLINE
   26    FORMAT(A26)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 51) THEN
	 WRITE(67,51) READLINE
   51    FORMAT(A51)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 76) THEN
	 WRITE(67,76) READLINE
   76    FORMAT(A76)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 101) THEN
	 WRITE(67,101) READLINE
  101    FORMAT(A101)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 126) THEN
	 WRITE(67,126) READLINE
  126    FORMAT(A126)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 151) THEN
	 WRITE(67,151) READLINE
  151    FORMAT(A151)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 176) THEN
	 WRITE(67,176) READLINE
  176    FORMAT(A176)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 201) THEN
	 WRITE(67,201) READLINE
  201    FORMAT(A201)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 226) THEN
	 WRITE(67,226) READLINE
  226    FORMAT(A226)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 251) THEN
	 WRITE(67,251) READLINE
  251    FORMAT(A251)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 276) THEN
	 WRITE(67,276) READLINE
  276    FORMAT(A276)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 301) THEN
	 WRITE(67,301) READLINE
  301    FORMAT(A301)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 326) THEN
	 WRITE(67,326) READLINE
  326    FORMAT(A326)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 351) THEN
	 WRITE(67,351) READLINE
  351    FORMAT(A351)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 376) THEN
	 WRITE(67,376) READLINE
  376    FORMAT(A376)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 401) THEN
	 WRITE(67,401) READLINE
  401    FORMAT(A401)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 426) THEN
	 WRITE(67,426) READLINE
  426    FORMAT(A426)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 451) THEN
	 WRITE(67,451) READLINE
  451    FORMAT(A451)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 476) THEN
	 WRITE(67,476) READLINE
  476    FORMAT(A476)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 501) THEN
	 WRITE(67,501) READLINE
  501    FORMAT(A501)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 526) THEN
	 WRITE(67,526) READLINE
  526    FORMAT(A526)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 551) THEN
	 WRITE(67,551) READLINE
  551    FORMAT(A551)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 576) THEN
	 WRITE(67,576) READLINE
  576    FORMAT(A576)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 601) THEN
	 WRITE(67,601) READLINE
  601    FORMAT(A601)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 626) THEN
	 WRITE(67,626) READLINE
  626    FORMAT(A626)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 651) THEN
	 WRITE(67,651) READLINE
  651    FORMAT(A651)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 676) THEN
	 WRITE(67,676) READLINE
  676    FORMAT(A676)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 701) THEN
	 WRITE(67,701) READLINE
  701    FORMAT(A701)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 726) THEN
	 WRITE(67,726) READLINE
  726    FORMAT(A726)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 751) THEN
	 WRITE(67,751) READLINE
  751    FORMAT(A751)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 776) THEN
	 WRITE(67,776) READLINE
  776    FORMAT(A776)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 801) THEN
	 WRITE(67,801) READLINE
  801    FORMAT(A801)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 826) THEN
	 WRITE(67,826) READLINE
  826    FORMAT(A826)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 851) THEN
	 WRITE(67,851) READLINE
  851    FORMAT(A851)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 876) THEN
	 WRITE(67,876) READLINE
  876    FORMAT(A876)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 901) THEN
	 WRITE(67,901) READLINE
  901    FORMAT(A901)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 926) THEN
	 WRITE(67,926) READLINE
  926    FORMAT(A926)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 951) THEN
	 WRITE(67,951) READLINE
  951    FORMAT(A951)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 976) THEN
	 WRITE(67,976) READLINE
  976    FORMAT(A976)
	 GO TO 10
	ENDIF
	WRITE(67,4) READLINE
	GO TO 10
  100   CLOSE(77)
        REWIND(67)
        RETURN
        END
      SUBROUTINE CONVERTCSV
      IMPLICIT REAL*8(A-H,O-Z)
      CHARACTER READLINE*1000,ERRFIL*20
      COMMON/ERROR/ERRFIL
        READ(87,*)
        READ(87,4) READLINE
        ICOMMA = 0
        ISEMICOLON = 0
        DO I = 1,20
         IF(READLINE(I:I) .EQ. ',') ICOMMA = 1
         IF(READLINE(I:I) .EQ. ';') ISEMICOLON = 1
        END DO
        IF(ICOMMA .EQ. 1 .AND. ISEMICOLON .EQ. 1) THEN
         WRITE(*,121)
  121    FORMAT(/' YOUR .CSV FILE HAS BOTH COMMAS AND SEMICOLONS IN '/
     1' THE SECOND LINE. THIS IS A CONFLICT. IF YOU ARE USING THE '/
     2' "EUROPEAN" VERSION OF A .CSV FILE, WITH SEMICOLONS AS FIELD'/
     3' SEPARATORS AND COMMAS TO SEPARATE THE WHOLE AND FRACTIONAL'/
     4' PARTS OF NUMBERS, THERE SHOULD BE NO COMMAS IN THE SECOND'/
     5' LINE.'//
     6' SIMILARLY IF YOU ARE USING THE "AMERICAN" VERSION OF A .CSV'/
     7' FILE, WITH COMMAS AS FIELD SEPARATORS, AND PERIODS TO SEPARTE'/
     8' THE WHOLE AND FRACTIONAL PARTS OF NUMBERS, THERE SHOULD BE NO'/
     9' SEMICOLONS IN THE SECOND LINE.'//
     1' PLEASE CORRECT YOUR .CSV FILE AND RERUN THE PROGRAM.'//)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,121)
        CLOSE(42)
         CALL PAUSE
         STOP
        ENDIF
        IF(ICOMMA .EQ. 1 .AND. ISEMICOLON .EQ. 0) ICONVERT = 0
        IF(ICOMMA .EQ. 0 .AND. ISEMICOLON .EQ. 1) ICONVERT = 1
        REWIND(87)
        OPEN(77)
   10   READ(87,4,IOSTAT=IEND) READLINE
    4   FORMAT(A1000)
        IF(IEND .LT. 0) GO TO 100
        DO IENDL = 1000,1,-1
         IF(READLINE(IENDL:IENDL) .NE. ' ') GO TO 20
        END DO
   20   CONTINUE
        DO I = 1,IENDL
         IF(ICONVERT .EQ. 1) THEN
          IF(READLINE(I:I) .EQ. ',') READLINE(I:I) = '.'
          IF(READLINE(I:I) .EQ. ';') READLINE(I:I) = ','
         ENDIF
        END DO
	IF(IENDL .LE. 26) THEN
	 WRITE(77,26) READLINE
   26    FORMAT(A26)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 51) THEN
	 WRITE(77,51) READLINE
   51    FORMAT(A51)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 76) THEN
	 WRITE(77,76) READLINE
   76    FORMAT(A76)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 101) THEN
	 WRITE(77,101) READLINE
  101    FORMAT(A101)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 126) THEN
	 WRITE(77,126) READLINE
  126    FORMAT(A126)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 151) THEN
	 WRITE(77,151) READLINE
  151    FORMAT(A151)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 176) THEN
	 WRITE(77,176) READLINE
  176    FORMAT(A176)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 201) THEN
	 WRITE(77,201) READLINE
  201    FORMAT(A201)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 226) THEN
	 WRITE(77,226) READLINE
  226    FORMAT(A226)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 251) THEN
	 WRITE(77,251) READLINE
  251    FORMAT(A251)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 276) THEN
	 WRITE(77,276) READLINE
  276    FORMAT(A276)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 301) THEN
	 WRITE(77,301) READLINE
  301    FORMAT(A301)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 326) THEN
	 WRITE(77,326) READLINE
  326    FORMAT(A326)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 351) THEN
	 WRITE(77,351) READLINE
  351    FORMAT(A351)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 376) THEN
	 WRITE(77,376) READLINE
  376    FORMAT(A376)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 401) THEN
	 WRITE(77,401) READLINE
  401    FORMAT(A401)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 426) THEN
	 WRITE(77,426) READLINE
  426    FORMAT(A426)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 451) THEN
	 WRITE(77,451) READLINE
  451    FORMAT(A451)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 476) THEN
	 WRITE(77,476) READLINE
  476    FORMAT(A476)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 501) THEN
	 WRITE(77,501) READLINE
  501    FORMAT(A501)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 526) THEN
	 WRITE(77,526) READLINE
  526    FORMAT(A526)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 551) THEN
	 WRITE(77,551) READLINE
  551    FORMAT(A551)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 576) THEN
	 WRITE(77,576) READLINE
  576    FORMAT(A576)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 601) THEN
	 WRITE(77,601) READLINE
  601    FORMAT(A601)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 626) THEN
	 WRITE(77,626) READLINE
  626    FORMAT(A626)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 651) THEN
	 WRITE(77,651) READLINE
  651    FORMAT(A651)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 676) THEN
	 WRITE(77,676) READLINE
  676    FORMAT(A676)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 701) THEN
	 WRITE(77,701) READLINE
  701    FORMAT(A701)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 726) THEN
	 WRITE(77,726) READLINE
  726    FORMAT(A726)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 751) THEN
	 WRITE(77,751) READLINE
  751    FORMAT(A751)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 776) THEN
	 WRITE(77,776) READLINE
  776    FORMAT(A776)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 801) THEN
	 WRITE(77,801) READLINE
  801    FORMAT(A801)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 826) THEN
	 WRITE(77,826) READLINE
  826    FORMAT(A826)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 851) THEN
	 WRITE(77,851) READLINE
  851    FORMAT(A851)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 876) THEN
	 WRITE(77,876) READLINE
  876    FORMAT(A876)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 901) THEN
	 WRITE(77,901) READLINE
  901    FORMAT(A901)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 926) THEN
	 WRITE(77,926) READLINE
  926    FORMAT(A926)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 951) THEN
	 WRITE(77,951) READLINE
  951    FORMAT(A951)
	 GO TO 10
	ENDIF
	IF(IENDL .LE. 976) THEN
	 WRITE(77,976) READLINE
  976    FORMAT(A976)
	 GO TO 10
	ENDIF
	WRITE(77,4) READLINE
	GO TO 10
  100   CLOSE(87)
        REWIND(77)
        RETURN
        END
      SUBROUTINE CSVCHANGE
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION TIMENTRY(99999),IDENTRY(99999)
      CHARACTER READLINE*1000,CODEPAT*15,
     1 READLINE2*1000,HOLDMAT(99999)*1000,TIMCHAR*50,SUBID*11,
     2 SUBIDPREV*11,ERRFIL*20
      COMMON/ERROR/ERRFIL
    1 FORMAT(A1000)
    2 FORMAT(A20)
      OPEN(66)
      ICODEPAT = 0
    6 FORMAT(A15)
      ICODEPAT = -1
      READ(67,6) CODEPAT
      IF(CODEPAT .EQ. '"POPDATA DEC_11') ICODEPAT = 1
      IF(CODEPAT(1:14) .EQ. 'POPDATA DEC_11') ICODEPAT = 1
      IF(CODEPAT .EQ. '"POPDATA APR_11') ICODEPAT = 0
      IF(CODEPAT(1:14) .EQ. 'POPDATA APR_11') ICODEPAT = 0
      IF(ICODEPAT .EQ. -1) THEN
       WRITE(*,7)
    7  FORMAT(//' YOUR PATIENT DATA BLOCK FILE IS NOT FROM THE'/
     1' ALLOWABLE SET OF SUCH FILES.'//
     2' A PATIENT DATA BLOCK FILE MUST HAVE "POPDATA XXX_XX IN'/
     3' COLUMNS 1 THROUGH 15 ON LINE 1, WHERE  XXX_XX  IS APR_11 OR A '/
     4' MORE RECENT DATE.'//)
       WRITE(*,*)' THE PROGRAM STOPS.'
        OPEN(42,FILE=ERRFIL)
         WRITE(42,7)
         WRITE(42,*)' THE PROGRAM STOPS.'
        CLOSE(42)
       CALL PAUSE
       STOP
      ENDIF
      IF(ICODEPAT .EQ. 0) THEN
       CODEPAT = 'POPDATA APR_11'
       WRITE(66,6) CODEPAT
 1020  READ(67,1,IOSTAT=IEND) READLINE
        IF(IEND .LT. 0) THEN
         CLOSE(67)
         RETURN
        ENDIF
       WRITE(66,1) READLINE
       GO TO 1020
      ENDIF
      CODEPAT = 'POPDATA APR_11'
      WRITE(66,6) CODEPAT
      READ(67,1) READLINE
      DO I = 1,50
       IF(READLINE(I:I+7) .EQ. ',ADDL,II') THEN
        ISS = I
        GO TO 10
       ENDIF
      END DO
       WRITE(*,8)
    8  FORMAT(//' YOUR PATIENT DATA BLOCK FILE IS NOT FROM THE '/
     1' ALLOWABLE SET OF SUCH FILES.'//
     2' A PATIENT DATA BLOCK FILE MUST HAVE ",ADDL,II" AS THE 6TH AND'/
     3' 7TH COLUMN HEADINGS ON LINE 2.'//)
       WRITE(*,*)' THE PROGRAM STOPS.'
        OPEN(42,FILE=ERRFIL)
         WRITE(42,8)
         WRITE(42,*)' THE PROGRAM STOPS.'
        CLOSE(42)
       CALL PAUSE
       STOP
   10 CONTINUE
      READLINE2(1:ISS-1) = READLINE(1:ISS-1)
      READLINE2(ISS:992) = READLINE(ISS+8:1000)
      WRITE(66,1) READLINE2
        NCOMMA = 0
        DO ISTART = 1,1000
         IF(READLINE(ISTART:ISTART) .EQ. ',') THEN
          NCOMMA = NCOMMA + 1
         ENDIF
        END DO
        NCOVA = NCOMMA - 13
	SUBIDPREV = '%^&*'
	SUBID = '%^&*'
      NROW = 0
   20 READ(67,1,IOSTAT=IEND) READLINE
	IF(IEND .LT. 0) GO TO 100
      IF(READLINE(1:1) .EQ. '#') GO TO 20
	CALL AFTERCOMMA(NCOVA,READLINE,0)
	BACKSPACE(57)
	READ(57,222) SUBID
  222 FORMAT(A11)
	CLOSE(57)
	CALL GETID(SUBID)
      IF(SUBID .NE. SUBIDPREV) GO TO 100
	CALL AFTERCOMMA(NCOVA,READLINE,1)
	BACKSPACE(57)
      READ(57,*,ERR=470) IDEVENT
	CLOSE(57)
      GO TO 480
  470  WRITE(*,471) READLINE(1:75)
  471  FORMAT(/' THERE IS AN ERROR IN YOUR BLOCK FORMAT FILE FOR '/
     1' ONE OF YOUR SUBJECTS. THE EVENT ID IS MISSING. THE 1ST 75'/
     2' CHARACTERS OF THE LINE ARE: '/
     2A75//
     3' THE PROGRAM STOPS.'/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,471) READLINE(1:75)
        CLOSE(42)
  	 CALL PAUSE
	 STOP
 480  CONTINUE
      IF(IDEVENT .EQ. 0) THEN
       NROW = NROW + 1
       CALL GETCOM(NCOMMA,READLINE,I5,I7)
       HOLDMAT(NROW) = READLINE(1:I5)//READLINE(I7+1:1000)
      ENDIF
      IF(IDEVENT .EQ. 1 .OR. IDEVENT .EQ. 4) THEN
       CALL AFTERCOMMA(NCOVA,READLINE,5)
       BACKSPACE(57)
       READ(57,*,ERR=25) IADDL
       CLOSE(57)
       GO TO 30
   25  IADDL = 0
   30  CONTINUE
       IF(IADDL .GE. 0) THEN
        NROW = NROW + 1
        CALL GETCOM(NCOMMA,READLINE,I5,I7)
        HOLDMAT(NROW) = READLINE(1:I5)//READLINE(I7+1:1000)
       ENDIF
       IF(IADDL .GT. 0) THEN
	  CALL AFTERCOMMA(NCOVA,READLINE,6)
	  BACKSPACE(57)
	  READ(57,*,ERR=35) XII
	  CLOSE(57)
        GO TO 40
   35   WRITE(*,36) NROW + 3
   36   FORMAT(/' THE INTERDOSE INTERVAL IS MISSING ON LINE NO. ',I6//
     1' PLEASE CORRECT YOUR .csv FILE AND RERUN THE PROGRAM.'/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,36) NROW + 3
        CLOSE(42)
        CALL PAUSE
        STOP
   40   CONTINUE
	  CALL AFTERCOMMA(NCOVA,READLINE,2)
	  BACKSPACE(57)
	  READ(57,*) TIM
	  CLOSE(57)
        DO IADD = 1,IADDL
         READLINE(1:1000) = HOLDMAT(NROW)
         OPEN(57,STATUS='SCRATCH')
         WRITE(57,*) TIM + XII*IADD
         BACKSPACE(57)
         READ(57,41) TIMCHAR
   41    FORMAT(A50)
         CLOSE(57)
         DO IEND = 50,1,-1
          IF(TIMCHAR(IEND:IEND) .NE. ' ') GO TO 50
         END DO
   50    CONTINUE
         ICOMMA = 0
         DO I = 1,1000
          IF(READLINE(I:I) .EQ. ',') THEN
           ICOMMA = ICOMMA + 1
           IF(ICOMMA .EQ. 1) I1 = I
           IF(ICOMMA .EQ. 2) I2 = I
           IF(ICOMMA .EQ. 3) THEN
            I3 = I
            GO TO 60
           ENDIF
          ENDIF
         END DO
   60    READLINE2 =
     1    READLINE(1:I1)//'1,'//TIMCHAR(1:IEND)//READLINE(I3:1000)
         NROW = NROW + 1
         HOLDMAT(NROW) = READLINE2(1:1000)
        END DO
       ENDIF
       IF(IADDL .EQ. -1) THEN
	  CALL AFTERCOMMA(NCOVA,READLINE,6)
	  BACKSPACE(57)
	  READ(57,*,ERR=65) XII
	  CLOSE(57)
        GO TO 70
   65   WRITE(*,36) NROW + 3
        OPEN(42,FILE=ERRFIL)
         WRITE(42,36) NROW + 3
        CLOSE(42)
        CALL PAUSE
        STOP
   70   CONTINUE
        NROW = NROW + 1
        CALL GETCOM(NCOMMA,READLINE,I5,I7)
        HOLDMAT(NROW) = READLINE(1:I5)//READLINE(I7+1:1000)
        READLINE(1:1000) = HOLDMAT(NROW)
         OPEN(57,STATUS='SCRATCH')
         WRITE(57,*) -XII
         BACKSPACE(57)
         READ(57,41) TIMCHAR
         CLOSE(57)
         DO IEND = 50,1,-1
          IF(TIMCHAR(IEND:IEND) .NE. ' ') GO TO 80
         END DO
   80    CONTINUE
         ICOMMA = 0
         DO I = 1,1000
          IF(READLINE(I:I) .EQ. ',') THEN
           ICOMMA = ICOMMA + 1
           IF(ICOMMA .EQ. 2) I2 = I
           IF(ICOMMA .EQ. 3) THEN
            I3 = I
            GO TO 90
           ENDIF
          ENDIF
         END DO
   90    READLINE2 =
     1    READLINE(1:I2)//TIMCHAR(1:IEND)//READLINE(I3:1000)
         HOLDMAT(NROW) = READLINE2(1:1000)
       ENDIF
      ENDIF
      GO TO 20
  100 CONTINUE
      WRITE(*,103) SUBID
  103 FORMAT(' EXAMINING .CSV FORMAT FOR SUBJECT  ',A11)
      DO I = 1,NROW
       READLINE(1:1000) = HOLDMAT(I)
	CALL AFTERCOMMA(NCOVA,READLINE,1)
	BACKSPACE(57)
      READ(57,*,ERR=570) IDEVENT
	CLOSE(57)
      GO TO 580
  570  WRITE(*,471) READLINE(1:75)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,471) READLINE(1:75)
        CLOSE(42)
  	 CALL PAUSE
	 STOP
 580  CONTINUE
       IDENTRY(I) = IDEVENT
	 CLOSE(57)
       CALL AFTERCOMMA(NCOVA,READLINE,2)
	 BACKSPACE(57)
	 READ(57,*) TIM
       TIMENTRY(I) = TIM
	 CLOSE(57)
      END DO
      NN = 0
      NFIRST = 1
  150 CONTINUE
      NN = NN + 1
      IF(NN .GT. NROW) GO TO 200
      IF(IDENTRY(NN) .NE. 4 .AND. NN .LT. NROW) GO TO 150
      IF(NN .EQ. NROW) NLAST = NROW
      IF(IDENTRY(NN) .EQ. 4) NLAST = NN - 1
      CALL ORDERHOLD(HOLDMAT,NFIRST,NLAST,IDENTRY,TIMENTRY)
      DO I = NFIRST,NLAST
       CALL CONDENSE(HOLDMAT(I))
      END DO
      NFIRST = NLAST + 1
      GO TO 150
  200 CONTINUE
	IF(IEND .LT. 0) THEN
       CLOSE(67)
       RETURN
      ENDIF
      SUBIDPREV = SUBID
      NROW = 0
      BACKSPACE(67)
      GO TO 20
      END
      SUBROUTINE GETCOM(NCOMMA,READLINE,I5,I7)
      CHARACTER READLINE*1000,ERRFIL*20
      COMMON/ERROR/ERRFIL
    1 FORMAT(A1000)
      ICOMMA = 0
      DO I = 1,300
       IF(READLINE(I:I) .EQ. ',') THEN
        ICOMMA = ICOMMA + 1
         IF(ICOMMA .EQ. 5) I5 = I
          IF(ICOMMA .EQ. 7) THEN
           I7 = I
           RETURN
          ENDIF
       ENDIF
      END DO
      WRITE(*,2) NCOMMA,READLINE(1:70)
    2 FORMAT(/' ONE OF THE LINES IN YOUR .cvs FILE HAS AN ERROR.'/
     1' IT IS SUPPOSED TO HAVE ',I2,' COMMAS, BUT IT HAS FEWER THAN'/
     2' 7. THE FOLLOWING LINE SHOWS THE 1ST 70 CHARACTERS OF THE LINE:'/
     3' ',A70//
     4' THE PROGRAM STOPS.'/)
        OPEN(42,FILE=ERRFIL)
         WRITE(42,2) NCOMMA,READLINE(1:70)
        CLOSE(42)
      CALL PAUSE
      STOP
      END
      SUBROUTINE ORDERHOLD(HOLDMAT,NFIRST,NLAST,IDENTRY,TIMENTRY)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION TIMENTRY(99999),IDENTRY(99999),IZ(99999),IZZ(99999),
     1 DOSTIME(99999)
      CHARACTER HOLDMAT(99999)*1000,HOLDMAT2(99999)*1000
      NDOSE = 0
      DO I = NFIRST,NLAST
       IF(IDENTRY(I) .EQ. 1 .OR. IDENTRY(I) .EQ. 4) THEN
        NDOSE = NDOSE + 1
        HOLDMAT2(NDOSE) = HOLDMAT(I)
        DOSTIME(NDOSE) = TIMENTRY(I)
        IZ(NDOSE) = -99
       ENDIF
      END DO
      NEXT = NDOSE
      DO I = NFIRST,NLAST
       IF(IDENTRY(I) .EQ. 0) THEN
        NEXT = NEXT + 1
        HOLDMAT2(NEXT) = HOLDMAT(I)
       ENDIF
      END DO
	 DO IPLACE = 1,NDOSE
	  TEMP = 1.D50
	  DO I=1,NDOSE
	   IF(DOSTIME(I) .LT. TEMP .AND. IZ(I) .EQ. -99) THEN
	    TEMP = DOSTIME(I)
	    IND = I
	   ENDIF
	  END DO
	  IZZ(IPLACE) = IND
	  IZ(IND) = 0
	 END DO
      DO IDOSE = 1,NDOSE
       HOLDMAT(NFIRST-1+IDOSE) = HOLDMAT2(IZZ(IDOSE))
      END DO
      NEXT = NDOSE
      DO IOBS = NFIRST + NDOSE,NLAST
       NEXT = NEXT + 1
       HOLDMAT(IOBS) = HOLDMAT2(NEXT)
      END DO
      RETURN
      END
        SUBROUTINE CONDENSE(READLINE)
        CHARACTER READLINE*1000
	DO IEND = 1000,1,-1
	 IF(READLINE(IEND:IEND) .NE. ' ') GO TO 20
	END DO
   20   CONTINUE
	IF(IEND .LE. 26) THEN
	 WRITE(66,26) READLINE
   26    FORMAT(A26)
	 RETURN
	ENDIF
	IF(IEND .LE. 51) THEN
	 WRITE(66,51) READLINE
   51    FORMAT(A51)
	 RETURN
	ENDIF
	IF(IEND .LE. 76) THEN
	 WRITE(66,76) READLINE
   76    FORMAT(A76)
	 RETURN
	ENDIF
	IF(IEND .LE. 101) THEN
	 WRITE(66,101) READLINE
  101    FORMAT(A101)
	 RETURN
	ENDIF
	IF(IEND .LE. 126) THEN
	 WRITE(66,126) READLINE
  126    FORMAT(A126)
	 RETURN
	ENDIF
	IF(IEND .LE. 151) THEN
	 WRITE(66,151) READLINE
  151    FORMAT(A151)
	 RETURN
	ENDIF
	IF(IEND .LE. 176) THEN
	 WRITE(66,176) READLINE
  176    FORMAT(A176)
	 RETURN
	ENDIF
	IF(IEND .LE. 201) THEN
	 WRITE(66,201) READLINE
  201    FORMAT(A201)
	 RETURN
	ENDIF
	IF(IEND .LE. 226) THEN
	 WRITE(66,226) READLINE
  226    FORMAT(A226)
	 RETURN
	ENDIF
	IF(IEND .LE. 251) THEN
	 WRITE(66,251) READLINE
  251    FORMAT(A251)
	 RETURN
	ENDIF
	IF(IEND .LE. 276) THEN
	 WRITE(66,276) READLINE
  276    FORMAT(A276)
	 RETURN
	ENDIF
	IF(IEND .LE. 301) THEN
	 WRITE(66,301) READLINE
  301    FORMAT(A301)
	 RETURN
	ENDIF
	IF(IEND .LE. 326) THEN
	 WRITE(66,326) READLINE
  326    FORMAT(A326)
	 RETURN
	ENDIF
	IF(IEND .LE. 351) THEN
	 WRITE(66,351) READLINE
  351    FORMAT(A351)
	 RETURN
	ENDIF
	IF(IEND .LE. 376) THEN
	 WRITE(66,376) READLINE
  376    FORMAT(A376)
	 RETURN
	ENDIF
	IF(IEND .LE. 401) THEN
	 WRITE(66,401) READLINE
  401    FORMAT(A401)
	 RETURN
	ENDIF
	IF(IEND .LE. 426) THEN
	 WRITE(66,426) READLINE
  426    FORMAT(A426)
	 RETURN
	ENDIF
	IF(IEND .LE. 451) THEN
	 WRITE(66,451) READLINE
  451    FORMAT(A451)
	 RETURN
	ENDIF
	IF(IEND .LE. 476) THEN
	 WRITE(66,476) READLINE
  476    FORMAT(A476)
	 RETURN
	ENDIF
	IF(IEND .LE. 501) THEN
	 WRITE(66,501) READLINE
  501    FORMAT(A501)
	 RETURN
	ENDIF
	IF(IEND .LE. 526) THEN
	 WRITE(66,526) READLINE
  526    FORMAT(A526)
	 RETURN
	ENDIF
	IF(IEND .LE. 551) THEN
	 WRITE(66,551) READLINE
  551    FORMAT(A551)
	 RETURN
	ENDIF
	IF(IEND .LE. 576) THEN
	 WRITE(66,576) READLINE
  576    FORMAT(A576)
	 RETURN
	ENDIF
	IF(IEND .LE. 601) THEN
	 WRITE(66,601) READLINE
  601    FORMAT(A601)
	 RETURN
	ENDIF
	IF(IEND .LE. 626) THEN
	 WRITE(66,626) READLINE
  626    FORMAT(A626)
	 RETURN
	ENDIF
	IF(IEND .LE. 651) THEN
	 WRITE(66,651) READLINE
  651    FORMAT(A651)
	 RETURN
	ENDIF
	IF(IEND .LE. 676) THEN
	 WRITE(66,676) READLINE
  676    FORMAT(A676)
	 RETURN
	ENDIF
	IF(IEND .LE. 701) THEN
	 WRITE(66,701) READLINE
  701    FORMAT(A701)
	 RETURN
	ENDIF
	IF(IEND .LE. 726) THEN
	 WRITE(66,726) READLINE
  726    FORMAT(A726)
	 RETURN
	ENDIF
	IF(IEND .LE. 751) THEN
	 WRITE(66,751) READLINE
  751    FORMAT(A751)
	 RETURN
	ENDIF
	IF(IEND .LE. 776) THEN
	 WRITE(66,776) READLINE
  776    FORMAT(A776)
	 RETURN
	ENDIF
	IF(IEND .LE. 801) THEN
	 WRITE(66,801) READLINE
  801    FORMAT(A801)
	 RETURN
	ENDIF
	IF(IEND .LE. 826) THEN
	 WRITE(66,826) READLINE
  826    FORMAT(A826)
	 RETURN
	ENDIF
	IF(IEND .LE. 851) THEN
	 WRITE(66,851) READLINE
  851    FORMAT(A851)
	 RETURN
	ENDIF
	IF(IEND .LE. 876) THEN
	 WRITE(66,876) READLINE
  876    FORMAT(A876)
	 RETURN
	ENDIF
	IF(IEND .LE. 901) THEN
	 WRITE(66,901) READLINE
  901    FORMAT(A901)
	 RETURN
	ENDIF
	IF(IEND .LE. 926) THEN
	 WRITE(66,926) READLINE
  926    FORMAT(A926)
	 RETURN
	ENDIF
	IF(IEND .LE. 951) THEN
	 WRITE(66,951) READLINE
  951    FORMAT(A951)
	 RETURN
	ENDIF
	IF(IEND .LE. 976) THEN
	 WRITE(66,976) READLINE
  976    FORMAT(A976)
	 RETURN
	ENDIF
	WRITE(66,4) READLINE
    4    FORMAT(A1000)
        RETURN
        END
 	SUBROUTINE SCATPLOT(IMETH,ICENTER,IOUT,IQUAL,JSUB,IPUT,N,X,Y,
     1  C0,C1,C2,C3,AMIN,AMAX,ISCALE,IERRMOD,GAMLAM)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION COEFF(999,5)
        REAL X(150000),Y(150000)
	REAL XMIN,XMAX,YMIN,YMAX,XX(200),YY(200),AMIN,AMAX
	CHARACTER CHARSUB*3,TIT*70,XLAB*59
	COMMON/TOSCAT/MAXSER,MINSER,SERMEN,SERSD,COEFF
	COMMON/BEEP/IBEEP
	IF(IPUT .EQ. 1) THEN
	WRITE(31,2)
    2   FORMAT(//' THE FOLLOWING RESULTS ARE FOR PREDICTED VALUES'/
     1' WHICH WERE GENERATED BY PARAMETER VALUES EQUAL TO ')
	IF(IMETH .EQ. 1 .AND. ICENTER .EQ. 1) THEN
	WRITE(31,*)' FINAL CYCLE POPULATION MEANS.'
	WRITE(31,*)
	ENDIF
	IF(IMETH .EQ. 1 .AND. ICENTER .EQ. 2) THEN
	WRITE(31,*)' FINAL CYCLE POPULATION MEDIANS.'
	WRITE(31,*)
	ENDIF
	IF(IMETH .EQ. 1 .AND. ICENTER .EQ. 3) THEN
	WRITE(31,*)' FINAL CYCLE POPULATION MODES.'
	WRITE(31,*)
	ENDIF
	IF(IMETH .EQ. 2 .AND. ICENTER .EQ. 1) THEN
	WRITE(31,*)' INDIVIDUAL POSTERIOR PARAMETER VALUES BASED ON '
	WRITE(31,*)' POPULATION MEANS.'
	WRITE(31,*)
	ENDIF
	IF(IMETH .EQ. 2 .AND. ICENTER .EQ. 2) THEN
	WRITE(31,*)' INDIVIDUAL POSTERIOR PARAMETER VALUES BASED ON'
	WRITE(31,*)' POPULATION MEDIANS.'
	WRITE(31,*)
	ENDIF
	IF(IMETH .EQ. 3 .AND. ICENTER .EQ. 1) THEN
	WRITE(31,*)' PARAMETER MEANS FROM INDIVIDUAL POSTERIOR'
	WRITE(31,*)' DISTRIBUTIONS.'
	WRITE(31,*)
	ENDIF
	IF(IMETH .EQ. 3 .AND. ICENTER .EQ. 2) THEN
	WRITE(31,*)' PARAMETER MEDIANS FROM INDIVIDUAL POSTERIOR'
	WRITE(31,*)' DISTRIBUTIONS.'
	WRITE(31,*)
	ENDIF
	IF(IMETH .EQ. 3 .AND. ICENTER .EQ. 3) THEN
	WRITE(31,*)' PARAMETER MODES FROM INDIVIDUAL POSTERIOR'
	WRITE(31,*)' DISTRIBUTIONS.'
	WRITE(31,*)
	ENDIF
	ENDIF
	IF(N .EQ. 0) THEN
	 WRITE(*,*)' THERE ARE NO OBSERVATIONS TO PLOT. '
	 WRITE(*,*)
	 CALL PAUSE
	 RETURN
	ENDIF
	SUMX=0.D0
	SUMY=0.D0
	SUMXX=0.D0
	SUMYY=0.D0
	SUMXY=0.D0
	DO I=1,N
	 SUMX=SUMX+X(I)
	 SUMY=SUMY+Y(I)
	 SUMXX=SUMXX+X(I)*X(I)
	 SUMYY=SUMYY+Y(I)*Y(I)
	 SUMXY=SUMXY+X(I)*Y(I)
	END DO
	XBAR = SUMX/N
	YBAR = SUMY/N
	SXX = SUMXX - N*XBAR*XBAR
	SYY = SUMYY - N*YBAR*YBAR
	SXY = SUMXY - N*XBAR*YBAR
	IREG = 1
	IF(SXX .EQ. 0.D0) THEN
	 IF(JSUB .GT. 0) WRITE(*,17) JSUB
   17    FORMAT(/' ALL PREDICTED VALUES ARE THE SAME --> NO REGRESSION'/
     1' LINE STATISTICS FOR SUBJECT NO. ',I4,/)
	 IF(IPUT .EQ. 1 .AND. JSUB .GT. 0) WRITE(31,17) JSUB
	 IF(JSUB .LT. 0) WRITE(*,177)
  177    FORMAT(/' ALL PREDICTED VALUES ARE THE SAME --> NO REGRESSION'/
     1' LINE STATISTICS FOR THE POPULATION. '/)
	 IF(IPUT .EQ. 1 .AND. JSUB .LT. 0) WRITE(31,177)
	 CALL PAUSE
	 IREG=0
	 GO TO 10
	ENDIF
	IF(SYY .EQ. 0.D0) THEN
	 IF(JSUB .GT. 0) WRITE(*,18) JSUB
   18    FORMAT(/' ALL OBSERVED VALUES ARE THE SAME --> NO REGRESSION'/
     1' LINE STATISTICS FOR SUBJECT NO. ',I4,/)
	 IF(IPUT .EQ. 1 .AND. JSUB .GT. 0) WRITE(31,18) JSUB
	 IF(JSUB .LT. 0) WRITE(*,188)
  188    FORMAT(/' ALL OBSERVED VALUES ARE THE SAME --> NO REGRESSION'/
     1' LINE STATISTICS FOR FOR THE POPULATION.'/)
	 IF(IPUT .EQ. 1 .AND. JSUB .LT. 0) WRITE(31,188)
	 CALL PAUSE
	 IREG=0
	 GO TO 10
	ENDIF
	B = SXY/SXX
	A = YBAR - B*XBAR
	RSQUAR = B*B*SXX/SYY
	R = DSQRT(RSQUAR)
   10   CONTINUE
	IF(JSUB .LT. 0) WRITE(*,11) -JSUB
   11   FORMAT(//' FOR THE ENTIRE POPULATION OF ',I3,' SUBJECTS: ')
	IF(JSUB .GE. 1) WRITE(*,12) JSUB
   12   FORMAT(//' FOR SUBJECT NO. ',I4,': ')
	CALL PAUSE
	IF(IREG	.EQ. 1) THEN
	 WRITE(*,13)
   13    FORMAT(/' THE BEST LEAST SQUARES LINE IS  YOBS = A + B*YPRED,'/
     1' WHERE A AND B ARE: ')
	 WRITE(*,*) A,B
	 WRITE(*,*)' R-SQUARED = ',RSQUAR,'     R = ',R
  	ENDIF
	IF(JSUB .LT. 0 .AND. IPUT .EQ. 1) WRITE(31,11) -JSUB
	IF(JSUB .GE. 1 .AND. IPUT .EQ. 1) WRITE(31,12) JSUB
	IF(IREG .EQ. 1) THEN
	 IF(IPUT .EQ. 1) WRITE(31,13)
	 IF(IPUT .EQ. 1) WRITE(31,*) A,B
	 IF(IPUT .EQ. 1) WRITE(31,*)' R-SQUARED = ',RSQUAR,'     R = ',R
	ENDIF
	IF(RSQUAR .NE. 1.D0 .AND. N .NE. 2 .AND. IREG .EQ. 1) THEN
	 FACT = (N - 2.D0)/(1.D0 - RSQUAR)
	 T = R*DSQRT(FACT)
	 WRITE(*,14) T,N-2
   14    FORMAT(' ',' T = ',F10.5,' ... DEG. OF FREEDOM = ',I7)
	 IF(IPUT .EQ. 1) WRITE(31,14) T,N-2
	DF = N-2.D0
	CALL TDIST(DF,T,P)
	IF(P .GT. 1.D0) P=1.D0
	PVALUE=1.D0-P
	IF(PVALUE .GT. 5.D-10) THEN
	 WRITE(*,16) PVALUE
	 IF(IPUT .EQ. 1) WRITE(31,16) PVALUE
   16   FORMAT(' ',' THE ASSOCIATED P-VALUE IS ',F11.9/)
	ENDIF
	IF(PVALUE .LE. 5.D-10 .AND. PVALUE .GE. 1.D-300) THEN
	 WRITE(*,21) PVALUE
	 IF(IPUT .EQ. 1) WRITE(31,21) PVALUE
   21   FORMAT(' ',' THE ASSOCIATED P-VALUE IS ',G16.9/)
	ENDIF
	IF(PVALUE .LT. 1.D-300) THEN
	 WRITE(*,22)
	 IF(IPUT .EQ. 1) WRITE(31,22)
   22    FORMAT(' ',' THE ASSOCIATED P-VALUE IS LESS THAN 10 TO THE '/
     1' POWER OF -300.'/)
	ENDIF
	CALL PAUSE
	ENDIF
	IF(JSUB .LT. 0) THEN
	WRITE(*,32) -JSUB
   32   FORMAT(' ','NO. OF SERUM LEVELS -- STATISTICS OVER ALL ',I3,' SU
     1BJECTS: ')
	WRITE(*,33) N,SERMEN,MAXSER,MINSER,SERSD
   33   FORMAT(' ',' TOTAL = ',I4,'  MEAN = ',F6.2,'  MAX = ',I3,'  MIN
     1= ',I3,'  S.D. = ',F6.2)
	IF(IPUT .EQ. 1) WRITE(31,32) -JSUB
	IF(IPUT .EQ. 1) WRITE(31,33) N,SERMEN,MAXSER,MINSER,SERSD
	ENDIF
	IF(IPUT .EQ. 1) WRITE(31,71)
   71 FORMAT(//'   PREDICTED    OBSERVED   PRED.-OBS.   (PRED.-OBS.)^2'/
     1'   ---------    --------   ----------   --------------')
	SUMD=0.0
	SUMDS=0.D0
	SUMWD=0.D0
	SUMWDS=0.D0
	 NNOW = 0
	 ISUB = 0
	 NOBSER = 0
      DO I = 1,N
	 D = X(I)-Y(I)
	 DS = D*D
	 SUMD = SUMD + D
	 SUMDS = SUMDS + DS
	 YI = Y(I)
	 IF(JSUB .LT. 0) THEN
	  NNOW = NNOW+1
	  IF(NNOW .GT. NOBSER) THEN
	   NNOW = 1
   90    ISUB = ISUB + 1
	   NOBSER = COEFF(ISUB,1)
         IF(NOBSER .EQ. 0) GO TO 90
	   C0 = COEFF(ISUB,2)
	   C1 = COEFF(ISUB,3)
	   C2 = COEFF(ISUB,4)
	   C3 = COEFF(ISUB,5)
	  ENDIF
	ENDIF
	 SDI1 = C0 + C1*YI + C2*YI*YI + C3*YI**3
	 IF(IERRMOD .EQ. 1) SDI = SDI1
	 IF(IERRMOD .EQ. 2) SDI = SDI1*GAMLAM
	 IF(IERRMOD .EQ. 3) SDI = DSQRT(SDI1*SDI1 + GAMLAM*GAMLAM)
	 IF(IERRMOD .EQ. 4) SDI = GAMLAM
	 SUMWD = SUMWD + D/SDI
	 SUMWDS = SUMWDS + (D/SDI)**2
	 IF(IPUT .EQ. 1) WRITE(31,72) X(I),Y(I),D,DS
      END DO
   72   FORMAT(3X,3(F9.4,3X),F12.4)
	WRITE(*,23)
   23   FORMAT(/' MEASURES OF BIAS: ')
	WRITE(*,24) SUMD/N
   24   FORMAT('  MEAN ERROR (PRED. - OBS.) = ',F15.6)
	WRITE(*,26) SUMWD/N
   26   FORMAT('  MEAN WEIGHTED ERROR (PRED. - OBS.) = ',F15.6)
	WRITE(*,27)
   27   FORMAT(/' MEASURES OF PRECISION: ')
	WRITE(*,28) SUMDS/N
   28   FORMAT('  MEAN SQUARED ERROR (PRED. - OBS.) = ',F15.6)
	WRITE(*,281) SUMDS/N - (SUMD/N)**2.D0
  281   FORMAT('  BIAS-ADJUSTED MEAN SQUARED ERROR = ',F15.6)
	WRITE(*,29) SUMWDS/N
   29   FORMAT('  MEAN WEIGHTED SQUARED ERROR (PRED. - OBS.) = ',F15.6)
	WRITE(*,291) SUMWDS/N - (SUMWD/N)**2.D0
  291   FORMAT('  BIAS-ADJUSTED MEAN WEIGHTED SQUARED ERROR = ',F15.6)
	IF(IPUT .EQ. 1) THEN
	 WRITE(31,*)
	 WRITE(31,23)
	 WRITE(31,24) SUMD/N
	 WRITE(31,26) SUMWD/N
	 WRITE(31,27)
	 WRITE(31,28) SUMDS/N
	 WRITE(31,281) SUMDS/N - (SUMD/N)**2.D0
	 WRITE(31,29) SUMWDS/N
	 WRITE(31,291) SUMWDS/N - (SUMWD/N)**2.D0
	ENDIF
	RETURN
	END
	SUBROUTINE TDIST(DF,U,P)
	IMPLICIT REAL*8(A-H,O-Z)
	COMMON/TOSUB/IR
	EXTERNAL GOFT
	IR=DF
	N=1000
	CALL CALCGAM(GAMRAT)
      DEL=U/N/2.D0
      CALL INTEG(N,DEL,GOFT,VALUE)
      P = .5D0 + GAMRAT*VALUE/DSQRT(3.14159D0*IR)
      RETURN
      END
	SUBROUTINE CALCGAM(GAMRAT)
	IMPLICIT REAL*8(A-H,O-Z)
	COMMON/TOSUB/IR
	SQRTPI = 1.77245385090552
	IF(IR .EQ. 1) GAMRAT = 1.D0/SQRTPI
	IF(IR .EQ. 2) GAMRAT = SQRTPI/2.D0
	IF(IR .EQ. 3) GAMRAT = 2.D0/SQRTPI
	IF(IR .LE. 3) RETURN
	IHALF=IR/2
	IH2 = IHALF*2
	IF(IH2 .EQ. IR) THEN
	FACT = SQRTPI/2.D0
	DO I=1,IHALF-1
	 FACT = FACT*(2.D0*I+1.D0)/2.D0/I
	END DO
	GAMRAT = FACT
	RETURN
	ENDIF
	FACT = 2.D0/SQRTPI
	DO I=1,(IR-3)/2
	 FACT = FACT*(2.D0*I+2.D0)/(2.D0*I+1.D0)
	END DO
	GAMRAT = FACT
	RETURN
	END
      	SUBROUTINE GOFT(ARG,OUT)
	IMPLICIT REAL*8(A-H,O-Z)
      	COMMON /TOSUB/ IR
      EX=-(IR+1.D0)/2.D0
      OUT=(1.D0+ARG*ARG/IR)**EX
      RETURN
      END
	SUBROUTINE INTEG(N,D,FUNC,RSLT)
	IMPLICIT REAL*8(A-H,O-Z)
        EXTERNAL FUNC
      CALL FUNC(0.D0,V1)
      B=2.D0*N*D
      CALL FUNC(B,V2)
      SUM=V1+V2
      IFAC=4
      DO 10 I=1,2*N-1
      ARGMNT=I*D
      CALL FUNC(ARGMNT,V)
      SUM=SUM+V*IFAC
      IFAC=IFAC/2
      IF(IFAC .EQ. 1) IFAC=4
   10 CONTINUE
      RSLT=D*SUM/3.D0
      RETURN
      END
	SUBROUTINE GETCHAR(JSUB,CHARSUB)
	CHARACTER CHARSUB*3
	CHARACTER*1 B,C,D
	ILEFT = JSUB
	I3 = ILEFT/100
	ILEFT = ILEFT - I3*100
	I2 = ILEFT/10
 	ILEFT = ILEFT - I2*10
	I1 = ILEFT
	IF(I3 .EQ. 1) B='1'
	IF(I3 .EQ. 2) B='2'
	IF(I3 .EQ. 3) B='3'
	IF(I3 .EQ. 4) B='4'
	IF(I3 .EQ. 5) B='5'
	IF(I3 .EQ. 6) B='6'
	IF(I3 .EQ. 7) B='7'
	IF(I3 .EQ. 8) B='8'
	IF(I3 .EQ. 9) B='9'
	IF(I3 .EQ. 0) B='0'
	IF(I2 .EQ. 1) C='1'
	IF(I2 .EQ. 2) C='2'
	IF(I2 .EQ. 3) C='3'
	IF(I2 .EQ. 4) C='4'
	IF(I2 .EQ. 5) C='5'
	IF(I2 .EQ. 6) C='6'
	IF(I2 .EQ. 7) C='7'
	IF(I2 .EQ. 8) C='8'
	IF(I2 .EQ. 9) C='9'
	IF(I2 .EQ. 0) C='0'
	IF(I1 .EQ. 1) D='1'
	IF(I1 .EQ. 2) D='2'
	IF(I1 .EQ. 3) D='3'
	IF(I1 .EQ. 4) D='4'
	IF(I1 .EQ. 5) D='5'
	IF(I1 .EQ. 6) D='6'
	IF(I1 .EQ. 7) D='7'
	IF(I1 .EQ. 8) D='8'
	IF(I1 .EQ. 9) D='9'
	IF(I1 .EQ. 0) D='0'
	CHARSUB = B//C//D
	RETURN
	END
	SUBROUTINE SCATGRAM(IOUT,IQUAL,N,XLABEL,YLABEL,XLABEL2,YLABEL2,
     1  X,Y,ILOWER,ICONF,IPUT)
	IMPLICIT REAL*8(A-H,O-Z)
        REAL X(999),Y(999)
	REAL XMIN,XMAX,YMIN,YMAX,XX(200),YY(200),AMIN,AMAX,
     1  YYU(200),YYL(200)
	CHARACTER CHARSUB*3,TIT*70,XLAB*59,YLAB*59
	CHARACTER XLABEL*20,YLABEL*20,XLABEL2*10,YLABEL2*10
	COMMON/BEEP/IBEEP
	IF(IPUT .EQ. 1)	WRITE(35,2) YLABEL2, YLABEL, XLABEL2, XLABEL,N
    2   FORMAT(//' THE FOLLOWING RESULTS ARE FOR THE LINEAR REGRESSION'/
     1' LINE OF ',A10,1X,A20,' AS A FUNCTION OF '/
     2' ',A10,1X,A20/
     2' ... OVER ALL ',I4,' SUBJECT(S). ')
	IF(N .EQ. 0) THEN
	 WRITE(*,*)' THERE ARE NO VALUES TO PLOT. '
	 WRITE(*,*)
	 CALL PAUSE
	 RETURN
	ENDIF
	SUMX=0.D0
	SUMY=0.D0
	SUMXX=0.D0
	SUMYY=0.D0
	SUMXY=0.D0
	DO I=1,N
	 SUMX=SUMX+X(I)
	 SUMY=SUMY+Y(I)
	 SUMXX=SUMXX+X(I)*X(I)
	 SUMYY=SUMYY+Y(I)*Y(I)
	 SUMXY=SUMXY+X(I)*Y(I)
	END DO
	XBAR = SUMX/N
	YBAR = SUMY/N
	SXX = SUMXX - N*XBAR*XBAR
	SYY = SUMYY - N*YBAR*YBAR
	SXY = SUMXY - N*XBAR*YBAR
	IREG = 1
	IF(SXX .EQ. 0.D0) THEN
	 WRITE(*,17)  XLABEL2,XLABEL, N
	 IF(IPUT .EQ. 1) WRITE(35,17) XLABEL2,XLABEL, N
   17    FORMAT(/' ALL THE VALUES FOR ',A10,1X,A20/
     1' ARE THE SAME ACROSS ALL ',I4,' SUBJECT(S).'//
     2' THERE WILL BE NO REGRESSION LINE STATISTICS. '/)
	 IREG=0
	 GO TO 10
	ENDIF
	IF(SYY .EQ. 0.D0) THEN
	 WRITE(*,17)  YLABEL2,YLABEL, N
	 IF(IPUT .EQ. 1) WRITE(35,17) YLABEL2,YLABEL, N
	 IREG=0
	 GO TO 10
	ENDIF
	B = SXY/SXX
	A = YBAR - B*XBAR
	RSQUAR = B*B*SXX/SYY
	R = DSQRT(RSQUAR)
	IF(N .GE. 3) SE = DSQRT(SYY*(1.D0 - RSQUAR)/(N - 2.D0))
   10   CONTINUE
	IF(IREG	.EQ. 1) THEN
	 CALL SYSTEM('CLS')
	 WRITE(*,13)
   13    FORMAT(/' THE BEST LEAST SQUARES LINE IS  Y = A + B*X,'/
     1' WHERE A AND B ARE: ')
	 WRITE(*,*) A,B
	 WRITE(*,*)' R-SQUARED = ',RSQUAR,'     R = ',R
	  IF(IPUT .EQ. 1) THEN
	   WRITE(35,13)
	   WRITE(35,*) A,B
	   WRITE(35,*)' R-SQUARED = ',RSQUAR,'     R = ',R
	  ENDIF
	ENDIF
	IF(RSQUAR .NE. 1.D0 .AND. N .NE. 2 .AND. IREG .EQ. 1) THEN
	 FACT = (N - 2.D0)/(1.D0 - RSQUAR)
	 T = R*DSQRT(FACT)
	 WRITE(*,14) T,N-2
   14    FORMAT(' ',' T = ',F10.5,' ... DEG. OF FREEDOM = ',I7)
	 IF(IPUT .EQ. 1) WRITE(35,14) T,N-2
	DF = N-2.D0
	CALL TDIST(DF,T,P)
	IF(P .GT. 1.D0) P=1.D0
	PVALUE=1.D0-P
	IF(PVALUE .GT. 5.D-10) THEN
	 WRITE(*,16) PVALUE
	 IF(IPUT .EQ. 1) WRITE(35,16) PVALUE
   16   FORMAT(' ',' THE ASSOCIATED P-VALUE IS ',F11.9/)
	ENDIF
	IF(PVALUE .LE. 5.D-10 .AND. PVALUE .GE. 1.D-300) THEN
	 WRITE(*,21) PVALUE
	 IF(IPUT .EQ. 1) WRITE(35,21) PVALUE
   21   FORMAT(' ',' THE ASSOCIATED P-VALUE IS ',G16.9/)
	ENDIF
	IF(PVALUE .LT. 1.D-300) THEN
	 WRITE(*,22)
	 IF(IPUT .EQ. 1) WRITE(35,22)
   22    FORMAT(' ',' THE ASSOCIATED P-VALUE IS LESS THAN 10 TO THE '/
     1' POWER OF -300.'/)
	ENDIF
	 CALL GETT995(DF,T995)
	 CALL GETT975(DF,T975)
	 CALL GETT900(DF,T900)
	 IF(ICONF .EQ. 1) PAREN = 1.D0/N + XBAR*XBAR/SXX
	 IF(ICONF .EQ. 0) PAREN = 1.D0 + 1.D0/N + XBAR*XBAR/SXX
	 DELTA1 = SE*DSQRT(PAREN)
	 YINT = A
	 YUP1 = A + T900*DELTA1
	 YDN1 = A - T900*DELTA1
	 YUP2 = A + T975*DELTA1
	 YDN2 = A - T975*DELTA1
	 YUP3 = A + T995*DELTA1
	 YDN3 = A - T995*DELTA1
	 IF(ICONF .EQ. 1) THEN
	  WRITE(*,101)
	  IF(IPUT .EQ. 1) WRITE(35,101)
	 ENDIF
  101    FORMAT(/' FOR THIS CASE (THE EXPECTED VALUE OF Y GIVEN X), AT X
     1 = 0:')
	 IF(ICONF .EQ. 0) THEN
	  WRITE(*,102)
	  IF(IPUT .EQ. 1) WRITE(35,102)
	 ENDIF
  102    FORMAT(/' FOR THIS CASE (AN ADDITIONAL VALUE OF Y GIVEN X), AT
     1X = 0:')
	 WRITE(*,107) YINT
	 IF(IPUT .EQ. 1) WRITE(35,107) YINT
  107    FORMAT(' THE POINT ESTIMATE IS ',G11.4)
	 WRITE(*,103) YDN3,YUP3
	 IF(IPUT .EQ. 1) WRITE(35,103) YDN3,YUP3
  103    FORMAT('  A 99% CONFIDENCE INTERVAL IS [',G11.4,', ',G11.4,']')
	 WRITE(*,104) YDN2,YUP2
	 IF(IPUT .EQ. 1) WRITE(35,104) YDN2,YUP2
  104    FORMAT('  A 95% CONFIDENCE INTERVAL IS [',G11.4,', ',G11.4,']')
	 WRITE(*,106) YDN1,YUP1
	 IF(IPUT .EQ. 1) WRITE(35,106) YDN1,YUP1
  106    FORMAT(' AN 80% CONFIDENCE INTERVAL IS [',G11.4,', ',G11.4,']')
	ENDIF
	RETURN
	END
	SUBROUTINE GETT975(DF,T975)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION TVAL(34)
	DATA (TVAL(K),K=1,34)/12.71,4.30,3.18,2.78,2.57,2.45,2.36,2.31,
     1   2.26,2.23,2.20,2.18,2.16,2.14,2.13,2.12,2.11,2.10,2.09,2.09,
     2   2.08,2.07,2.07,2.06,2.06,2.06,2.05,2.05,2.04,2.04,2.02,2.00,
     3   1.98,1.96/
	IDF = DF
	IF(IDF .GE. 1 .AND. IDF .LE. 30) T975 = TVAL(IDF)
	IF(IDF .GT. 30 .AND. IDF .LT. 40) T975 = TVAL(30)
	IF(IDF .GE. 40 .AND. IDF .LT. 60) T975 = TVAL(31)
	IF(IDF .GE. 60 .AND. IDF .LT. 120) T975 = TVAL(32)
	IF(IDF .GE. 120 .AND. IDF .LT. 500) T975 = TVAL(33)
	IF(IDF .GE. 500) T975 = TVAL(34)
	RETURN
	END
	SUBROUTINE GETT995(DF,T995)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION TVAL(34)
	DATA (TVAL(K),K=1,34)/63.66,9.92,5.84,4.60,4.03,3.71,3.50,3.36,
     1   3.25,3.17,3.11,3.06,3.01,2.98,2.95,2.92,2.90,2.88,2.86,2.84,
     2   2.83,2.82,2.81,2.80,2.79,2.78,2.77,2.76,2.76,2.75,2.70,2.66,
     3   2.62,2.58/
	IDF = DF
	IF(IDF .GE. 1 .AND. IDF .LE. 30) T995 = TVAL(IDF)
	IF(IDF .GT. 30 .AND. IDF .LT. 40) T995 = TVAL(30)
	IF(IDF .GE. 40 .AND. IDF .LT. 60) T995 = TVAL(31)
	IF(IDF .GE. 60 .AND. IDF .LT. 120) T995 = TVAL(32)
	IF(IDF .GE. 120 .AND. IDF .LT. 500) T995 = TVAL(33)
	IF(IDF .GE. 500) T995 = TVAL(34)
	RETURN
	END
	SUBROUTINE GETT900(DF,T900)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION TVAL(34)
	DATA (TVAL(K),K=1,34)/ 3.08,1.89,1.64,1.53,1.48,1.44,1.42,1.40,
     1   1.38,1.37,1.36,1.36,1.35,1.34,1.34,1.34,1.33,1.33,1.33,1.32,
     2   1.32,1.32,1.32,1.32,1.32,1.32,1.31,1.31,1.31,1.31,1.30,1.30,
     3   1.29,1.28/
	IDF = DF
	IF(IDF .GE. 1 .AND. IDF .LE. 30) T900 = TVAL(IDF)
	IF(IDF .GT. 30 .AND. IDF .LT. 40) T900 = TVAL(30)
	IF(IDF .GE. 40 .AND. IDF .LT. 60) T900 = TVAL(31)
	IF(IDF .GE. 60 .AND. IDF .LT. 120) T900 = TVAL(32)
	IF(IDF .GE. 120 .AND. IDF .LT. 500) T900 = TVAL(33)
	IF(IDF .GE. 500) T900 = TVAL(34)
	RETURN
	END
