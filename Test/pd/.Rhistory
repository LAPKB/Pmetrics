data <- readLines(files[i])
tabata$dt[i] <- chron(dates.=paste(strsplit(data[2],",")[[1]][c(4,6,2)],collapse="/"),
times.=paste(strsplit(data[2],",")[[1]][c(8,10,12)],collapse=":"),
format=c(dates="m/d/y",times="h:m:s"))
skip <- grep("pwr_torque",data)
dur <- length(data)-skip
workout <- matrix(scan(files[i],skip=skip,sep=",",nlines=dur,quiet=T),nrow=dur,byrow=T)
hr[1:dur,i] <- workout[,10]
}
tabata
numWrkouts
files <- paste("~/Dropbox/Apps/WahooFitness/",list.files("/Users/neely/Dropbox/Apps/WahooFitness",pattern="[[:alnum:]]*.csv",recursive=T),sep="")
tabata <- read.csv(files[length(files)])
files <- files[1:(length(files)-1)]
numWrkouts <- length(files)
hr <- matrix(NA,nrow=5000,ncol=numWrkouts,dimnames=list(time=1:5000,workout=1:numWrkouts))
for (i in 1:numWrkouts){
data <- readLines(files[i])
tabata$dt[i] <- chron(dates.=paste(strsplit(data[2],",")[[1]][c(4,6,2)],collapse="/"),
times.=paste(strsplit(data[2],",")[[1]][c(8,10,12)],collapse=":"),
format=c(dates="m/d/y",times="h:m:s"))
skip <- grep("pwr_torque",data)
dur <- length(data)-skip
workout <- matrix(scan(files[i],skip=skip,sep=",",nlines=dur,quiet=T),nrow=dur,byrow=T)
hr[1:dur,i] <- workout[,10]
}
tabata
chron(dates.=paste(strsplit(data[2],",")[[1]][c(4,6,2)],collapse="/"),
times.=paste(strsplit(data[2],",")[[1]][c(8,10,12)],collapse=":"),
format=c(dates="m/d/y",times="h:m:s"))
as.Date(tabata$dt)
chron(tabata$dt)
tabata$dt <- chron(tabata$dt)
tabata
plot(Lunge~dt,tabata)
plot(Lunge~I(dt-dt[1]),tabata)
plot(Lunge~I((dt-dt[1])/24,tabata,xlab="Day")
plot(Lunge~I((dt-dt[1])/24),tabata,xlab="Day")
?chron
??date
?diff
diff(dt,dt[1])
days(dt)
days(dt[1])
days(dt-dt[1])
plot(Lunge~I(days(dt-dt[1])),tabata,xlab="Day")
dt-dt[1]
files <- paste("~/Dropbox/Apps/WahooFitness/",list.files("/Users/neely/Dropbox/Apps/WahooFitness",pattern="[[:alnum:]]*.csv",recursive=T),sep="")
tabata <- read.csv(files[length(files)])
files <- files[1:(length(files)-1)]
numWrkouts <- length(files)
hr <- matrix(NA,nrow=5000,ncol=numWrkouts,dimnames=list(time=1:5000,workout=1:numWrkouts))
for (i in 1:numWrkouts){
data <- readLines(files[i])
tabata$dt[i] <- chron(dates.=paste(strsplit(data[2],",")[[1]][c(4,6,2)],collapse="/"),
times.=paste(strsplit(data[2],",")[[1]][c(8,10,12)],collapse=":"),
format=c(dates="m/d/y",times="h:m:s"))
skip <- grep("pwr_torque",data)
dur <- length(data)-skip
workout <- matrix(scan(files[i],skip=skip,sep=",",nlines=dur,quiet=T),nrow=dur,byrow=T)
hr[1:dur,i] <- workout[,10]
}
hr <- hr[apply(hr,1,function(x) !all(is.na(x))),]
hr <- matrix(hr,ncol=numWrkouts)
#tabata$dt <- chron(tabata$dt)
times <- (1:nrow(hr))/60
dt-dt[1]
tabata$dt
tabata$dt-tabata$dt[1]
plot(Lunge~I(dt-dt[1]),tabata,xlab="Day")
tabata
max(tabata)
max(tabata[,-1])
which(tabata==max(tabata[,-1]))
tabata[8]
tabata[,8]
tabata[,which(tabata==max(tabata[,-1]))/nrow(tabata)]
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt,y=tabata[,which(tabata==max(tabata[,-1]))/nrow(tabata)],type="n",xlab="Day",ylab="Reps")
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt[j]-tabata$dt[1]),col=cols[j-1])
}
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt,y=tabata[,which(tabata==max(tabata[,-1]))/nrow(tabata)],type="n",xlab="Day",ylab="Reps")
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt[j]-tabata$dt[1],col=cols[j-1])
}
tabata$dt
tabata[,which(tabata==max(tabata[,-1]))/nrow(tabata)]
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt,y=tabata[,which(tabata==max(tabata[,-1]))/nrow(tabata)],type="n",xlab="Day",ylab="Reps")
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt[,j]-tabata$dt[1],col=cols[j-1])
}
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt,y=tabata[,which(tabata==max(tabata[,-1]))/nrow(tabata)],type="n",xlab="Day",ylab="Reps")
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt-tabata$dt[1],col=cols[j-1])
}
tabata[,j]
j
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt-tabata$dt[1],y=tabata[,which(tabata==max(tabata[,-1]))/nrow(tabata)],type="n",xlab="Day",ylab="Reps")
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt-tabata$dt[1],col=cols[j-1])
}
range(tabata[,-1])
?seq
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt-tabata$dt[1],y=seq(min(tabata[,-1]),max(tabata[,-1]),length.out=nrow(tabata)),
type="n",xlab="Day",ylab="Reps")
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt-tabata$dt[1],col=cols[j-1])
}
legend("topleft",lty=1,col=cols,legend=names(tabata))
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt-tabata$dt[1],y=seq(min(tabata[,-1]),max(tabata[,-1]),length.out=nrow(tabata)),
type="n",xlab="Day",ylab="Reps")
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt-tabata$dt[1],col=cols[j-1],type="o")
}
legend("topleft",lty=1,col=cols,legend=names(tabata)[-1])
legend("topleft",lty=1,col=cols,legend=names(tabata)[-1],cex=0.7)
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt-tabata$dt[1],y=seq(min(tabata[,-1]),max(tabata[,-1]),length.out=nrow(tabata)),
type="n",xlab="Day",ylab="Reps")
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt-tabata$dt[1],col=cols[j-1],type="o")
}
legend("topleft",lty=1,col=cols,legend=names(tabata)[-1],cex=0.7)
lines(y=apply(tabata[,-1],1,mean),x=tabata$dt-tabata$dt[1],col="grey90",lwd=4)
lines(y=apply(tabata[,-1],1,mean),x=tabata$dt-tabata$dt[1],col="grey90",lwd=10)
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt-tabata$dt[1],y=seq(min(tabata[,-1]),max(tabata[,-1]),length.out=nrow(tabata)),
type="n",xlab="Day",ylab="Reps")
lines(y=apply(tabata[,-1],1,mean),x=tabata$dt-tabata$dt[1],col="grey90",lwd=20)
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt-tabata$dt[1],col=cols[j-1],type="o")
}
legend("topleft",lty=1,col=c(cols,"grey90"),legend=c(names(tabata)[-1],"Mean"),cex=0.7)
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt-tabata$dt[1],y=seq(min(tabata[,-1]),max(tabata[,-1]),length.out=nrow(tabata)),
type="n",xlab="Day",ylab="Reps")
lines(y=apply(tabata[,-1],1,mean),x=tabata$dt-tabata$dt[1],col="grey90",lwd=20)
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt-tabata$dt[1],col=cols[j-1],type="o")
}
legend("topleft",lty=c(rep(1,6),20),col=c(cols,"grey90"),legend=c(names(tabata)[-1],"Mean"),cex=0.7)
legend("topleft",lty=c(rep(1,6),10),col=c(cols,"grey90"),legend=c(names(tabata)[-1],"Mean"),cex=0.7)
legend("topleft",lty=1,lwd=c(rep(1,6),5),col=c(cols,"grey90"),legend=c(names(tabata)[-1],"Mean"),cex=0.7)
legend("topleft",lty=1,lwd=c(rep(1,6),20),col=c(cols,"grey90"),legend=c(names(tabata)[-1],"Mean"),cex=0.7)
legend("topleft",lty=1,lwd=c(rep(1,6),10),col=c(cols,"grey90"),legend=c(names(tabata)[-1],"Mean"),cex=0.7)
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt-tabata$dt[1],y=seq(min(tabata[,-1]),max(tabata[,-1]),length.out=nrow(tabata)),
type="n",xlab="Day",ylab="Reps",main="Tacfit Mission 1 Recruit Tabata")
lines(y=apply(tabata[,-1],1,mean),x=tabata$dt-tabata$dt[1],col="grey90",lwd=20)
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt-tabata$dt[1],col=cols[j-1],type="o")
}
legend("topleft",lty=1,lwd=c(rep(1,6),10),col=c(cols,"grey90"),legend=c(names(tabata)[-1],"Mean"),cex=0.7)
files <- paste("~/Dropbox/Apps/WahooFitness/",list.files("/Users/neely/Dropbox/Apps/WahooFitness",pattern="[[:alnum:]]*.csv",recursive=T),sep="")
tabata <- read.csv(files[length(files)])
files <- files[1:(length(files)-1)]
numWrkouts <- length(files)
hr <- matrix(NA,nrow=5000,ncol=numWrkouts,dimnames=list(time=1:5000,workout=1:numWrkouts))
for (i in 1:numWrkouts){
data <- readLines(files[i])
tabata$dt[i] <- chron(dates.=paste(strsplit(data[2],",")[[1]][c(4,6,2)],collapse="/"),
times.=paste(strsplit(data[2],",")[[1]][c(8,10,12)],collapse=":"),
format=c(dates="m/d/y",times="h:m:s"))
skip <- grep("pwr_torque",data)
dur <- length(data)-skip
workout <- matrix(scan(files[i],skip=skip,sep=",",nlines=dur,quiet=T),nrow=dur,byrow=T)
hr[1:dur,i] <- workout[,10]
}
hr <- hr[apply(hr,1,function(x) !all(is.na(x))),]
hr <- matrix(hr,ncol=numWrkouts)
#tabata$dt <- chron(tabata$dt)
times <- (1:nrow(hr))/60
plot(x=range(times),y=range(hr,na.rm=T),type="n",xlab="Minutes",ylab="Heart Rate")
for(i in 1:ncol(hr)){
lines(x=times,y=hr[,i],col=c("black","red")[i])
}
hrMean <- apply(hr,1,mean,na.rm=T)
hrSD <- apply(hr,1,sd,na.rm=T)
hrSD[is.na(hrSD)] <- 0
plot(x=times,y=hrMean,type="n",xlab="Minutes",ylab="Average Heart Rate",ylim=c(50,180),main="Tacfit Mission 1 Recruit Heart Rate")
polygon(x=c(times,rev(times)),y=c(hrMean+hrSD,rev(hrMean)-rev(hrSD)),col="lightblue",border=NA)
lines(x=times,y=hrMean)
abline(v=c(6,36),lty=2,lwd=2)
abline(v=seq(11,36,5),lty=3,lwd=1)
text(x=c(3,seq(8.5,33.5,5),39),y=rep(175,8),adj=0.5,label=c("Warmup","Lunge","Plank knee","Sit twist","Push-up","Spinal rock","Tripod","Cool down"),cex=0.7)
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt-tabata$dt[1],y=seq(min(tabata[,-1]),max(tabata[,-1]),length.out=nrow(tabata)),
type="n",xlab="Day",ylab="Reps",main="Tacfit Mission 1 Recruit Tabata")
lines(y=apply(tabata[,-1],1,mean),x=tabata$dt-tabata$dt[1],col="grey90",lwd=20)
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt-tabata$dt[1],col=cols[j-1],type="o")
}
legend("topleft",lty=1,lwd=c(rep(1,6),10),col=c(cols,"grey90"),legend=c(names(tabata)[-1],"Mean"),cex=0.7)
files <- paste("~/Dropbox/Apps/WahooFitness/",list.files("/Users/neely/Dropbox/Apps/WahooFitness",pattern="[[:alnum:]]*.csv",recursive=T),sep="")
tabata <- read.csv(files[length(files)])
files <- files[1:(length(files)-1)]
numWrkouts <- length(files)
hr <- matrix(NA,nrow=5000,ncol=numWrkouts,dimnames=list(time=1:5000,workout=1:numWrkouts))
for (i in 1:numWrkouts){
data <- readLines(files[i])
tabata$dt[i] <- chron(dates.=paste(strsplit(data[2],",")[[1]][c(4,6,2)],collapse="/"),
times.=paste(strsplit(data[2],",")[[1]][c(8,10,12)],collapse=":"),
format=c(dates="m/d/y",times="h:m:s"))
skip <- grep("pwr_torque",data)
dur <- length(data)-skip
workout <- matrix(scan(files[i],skip=skip,sep=",",nlines=dur,quiet=T),nrow=dur,byrow=T)
hr[1:dur,i] <- workout[,10]
}
hr <- hr[apply(hr,1,function(x) !all(is.na(x))),]
hr <- matrix(hr,ncol=numWrkouts)
#tabata$dt <- chron(tabata$dt)
times <- (1:nrow(hr))/60
plot(x=range(times),y=range(hr,na.rm=T),type="n",xlab="Minutes",ylab="Heart Rate")
for(i in 1:ncol(hr)){
lines(x=times,y=hr[,i],col=c("black","red")[i])
}
hrMean <- apply(hr,1,mean,na.rm=T)
hrSD <- apply(hr,1,sd,na.rm=T)
hrSD[is.na(hrSD)] <- 0
plot(x=times,y=hrMean,type="n",xlab="Minutes",ylab="Average Heart Rate",ylim=c(50,180),main="Tacfit Mission 1 Recruit Heart Rate")
polygon(x=c(times,rev(times)),y=c(hrMean+hrSD,rev(hrMean)-rev(hrSD)),col="lightblue",border=NA)
lines(x=times,y=hrMean)
abline(v=c(6,36),lty=2,lwd=2)
abline(v=seq(11,36,5),lty=3,lwd=1)
text(x=c(3,seq(8.5,33.5,5),39),y=rep(175,8),adj=0.5,label=c("Warmup","Lunge","Plank knee","Sit twist","Push-up","Spinal rock","Tripod","Cool down"),cex=0.7)
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt-tabata$dt[1],y=seq(min(tabata[,-1]),max(tabata[,-1]),length.out=nrow(tabata)),
type="n",xlab="Day",ylab="Reps",main="Tacfit Mission 1 Recruit Tabata")
lines(y=apply(tabata[,-1],1,mean),x=tabata$dt-tabata$dt[1],col="grey90",lwd=20)
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt-tabata$dt[1],col=cols[j-1],type="o")
}
legend("topleft",lty=1,lwd=c(rep(1,6),10),col=c(cols,"grey90"),legend=c(names(tabata)[-1],"Mean"),cex=0.7)
library(chron)
files <- paste("~/Dropbox/Apps/WahooFitness/",list.files("/Users/neely/Dropbox/Apps/WahooFitness",pattern="[[:alnum:]]*.csv",recursive=T),sep="")
tabata <- read.csv(files[length(files)])
files <- files[1:(length(files)-1)]
numWrkouts <- length(files)
hr <- matrix(NA,nrow=5000,ncol=numWrkouts,dimnames=list(time=1:5000,workout=1:numWrkouts))
for (i in 1:numWrkouts){
data <- readLines(files[i])
tabata$dt[i] <- chron(dates.=paste(strsplit(data[2],",")[[1]][c(4,6,2)],collapse="/"),
times.=paste(strsplit(data[2],",")[[1]][c(8,10,12)],collapse=":"),
format=c(dates="m/d/y",times="h:m:s"))
skip <- grep("pwr_torque",data)
dur <- length(data)-skip
workout <- matrix(scan(files[i],skip=skip,sep=",",nlines=dur,quiet=T),nrow=dur,byrow=T)
hr[1:dur,i] <- workout[,10]
}
hr <- hr[apply(hr,1,function(x) !all(is.na(x))),]
hr <- matrix(hr,ncol=numWrkouts)
hr <- hr[,-1]
times <- (1:nrow(hr))/60
plot(x=range(times),y=range(hr,na.rm=T),type="n",xlab="Minutes",ylab="Heart Rate")
for(i in 1:ncol(hr)){
lines(x=times,y=hr[,i],col=c("black","red")[i])
}
hrMean <- apply(hr,1,mean,na.rm=T)
hrSD <- apply(hr,1,sd,na.rm=T)
hrSD[is.na(hrSD)] <- 0
plot(x=times,y=hrMean,type="n",xlab="Minutes",ylab="Average Heart Rate",ylim=c(50,180),main="Tacfit Mission 1 Recruit Heart Rate")
polygon(x=c(times,rev(times)),y=c(hrMean+hrSD,rev(hrMean)-rev(hrSD)),col="lightblue",border=NA)
lines(x=times,y=hrMean)
abline(v=c(6,36),lty=2,lwd=2)
abline(v=seq(11,36,5),lty=3,lwd=1)
text(x=c(3,seq(8.5,33.5,5),39),y=rep(175,8),adj=0.5,label=c("Warmup","Lunge","Plank knee","Sit twist","Push-up","Spinal rock","Tripod","Cool down"),cex=0.7)
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt-tabata$dt[1],y=seq(min(tabata[,-1]),max(tabata[,-1]),length.out=nrow(tabata)),
type="n",xlab="Day",ylab="Reps",main="Tacfit Mission 1 Recruit Tabata")
lines(y=apply(tabata[,-1],1,mean),x=tabata$dt-tabata$dt[1],col="grey90",lwd=20)
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt-tabata$dt[1],col=cols[j-1],type="o")
}
legend("topleft",lty=1,lwd=c(rep(1,6),10),col=c(cols,"grey90"),legend=c(names(tabata)[-1],"Mean"),cex=0.7)
library(chron)
files <- paste("~/Dropbox/Apps/WahooFitness/",list.files("/Users/neely/Dropbox/Apps/WahooFitness",pattern="[[:alnum:]]*.csv",recursive=T),sep="")
tabata <- read.csv(files[length(files)])
files <- files[1:(length(files)-1)]
numWrkouts <- length(files)
hr <- matrix(NA,nrow=5000,ncol=numWrkouts,dimnames=list(time=1:5000,workout=1:numWrkouts))
for (i in 1:numWrkouts){
data <- readLines(files[i])
tabata$dt[i] <- chron(dates.=paste(strsplit(data[2],",")[[1]][c(4,6,2)],collapse="/"),
times.=paste(strsplit(data[2],",")[[1]][c(8,10,12)],collapse=":"),
format=c(dates="m/d/y",times="h:m:s"))
skip <- grep("pwr_torque",data)
dur <- length(data)-skip
workout <- matrix(scan(files[i],skip=skip,sep=",",nlines=dur,quiet=T),nrow=dur,byrow=T)
hr[1:dur,i] <- workout[,10]
}
hr <- hr[apply(hr,1,function(x) !all(is.na(x))),]
hr <- hr[,-1]
hr <- matrix(hr,ncol=numWrkouts)
times <- (1:nrow(hr))/60
plot(x=range(times),y=range(hr,na.rm=T),type="n",xlab="Minutes",ylab="Heart Rate")
for(i in 1:ncol(hr)){
lines(x=times,y=hr[,i],col=c("black","red")[i])
}
hrMean <- apply(hr,1,mean,na.rm=T)
hrSD <- apply(hr,1,sd,na.rm=T)
hrSD[is.na(hrSD)] <- 0
plot(x=times,y=hrMean,type="n",xlab="Minutes",ylab="Average Heart Rate",ylim=c(50,180),main="Tacfit Mission 1 Recruit Heart Rate")
polygon(x=c(times,rev(times)),y=c(hrMean+hrSD,rev(hrMean)-rev(hrSD)),col="lightblue",border=NA)
lines(x=times,y=hrMean)
abline(v=c(6,36),lty=2,lwd=2)
abline(v=seq(11,36,5),lty=3,lwd=1)
text(x=c(3,seq(8.5,33.5,5),39),y=rep(175,8),adj=0.5,label=c("Warmup","Lunge","Plank knee","Sit twist","Push-up","Spinal rock","Tripod","Cool down"),cex=0.7)
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt-tabata$dt[1],y=seq(min(tabata[,-1]),max(tabata[,-1]),length.out=nrow(tabata)),
type="n",xlab="Day",ylab="Reps",main="Tacfit Mission 1 Recruit Tabata")
lines(y=apply(tabata[,-1],1,mean),x=tabata$dt-tabata$dt[1],col="grey90",lwd=20)
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt-tabata$dt[1],col=cols[j-1],type="o")
}
legend("topleft",lty=1,lwd=c(rep(1,6),10),col=c(cols,"grey90"),legend=c(names(tabata)[-1],"Mean"),cex=0.7)
hr
hr <- hr[,-1]
hr
hr <- matrix(hr,ncol=numWrkouts)
hr
library(chron)
files <- paste("~/Dropbox/Apps/WahooFitness/",list.files("/Users/neely/Dropbox/Apps/WahooFitness",pattern="[[:alnum:]]*.csv",recursive=T),sep="")
tabata <- read.csv(files[length(files)])
files <- files[1:(length(files)-1)]
numWrkouts <- length(files)
hr <- matrix(NA,nrow=5000,ncol=numWrkouts,dimnames=list(time=1:5000,workout=1:numWrkouts))
for (i in 1:numWrkouts){
data <- readLines(files[i])
tabata$dt[i] <- chron(dates.=paste(strsplit(data[2],",")[[1]][c(4,6,2)],collapse="/"),
times.=paste(strsplit(data[2],",")[[1]][c(8,10,12)],collapse=":"),
format=c(dates="m/d/y",times="h:m:s"))
skip <- grep("pwr_torque",data)
dur <- length(data)-skip
workout <- matrix(scan(files[i],skip=skip,sep=",",nlines=dur,quiet=T),nrow=dur,byrow=T)
hr[1:dur,i] <- workout[,10]
}
hr <- hr[apply(hr,1,function(x) !all(is.na(x))),]
hr <- matrix(hr,ncol=numWrkouts)
times <- (1:nrow(hr))/60
plot(x=range(times),y=range(hr,na.rm=T),type="n",xlab="Minutes",ylab="Heart Rate")
for(i in 1:ncol(hr)){
lines(x=times,y=hr[,i],col=c("black","red")[i])
}
hrMean <- apply(hr,1,mean,na.rm=T)
hrSD <- apply(hr,1,sd,na.rm=T)
hrSD[is.na(hrSD)] <- 0
plot(x=times,y=hrMean,type="n",xlab="Minutes",ylab="Average Heart Rate",ylim=c(50,180),main="Tacfit Mission 1 Recruit Heart Rate")
polygon(x=c(times,rev(times)),y=c(hrMean+hrSD,rev(hrMean)-rev(hrSD)),col="lightblue",border=NA)
lines(x=times,y=hrMean)
abline(v=c(6,36),lty=2,lwd=2)
abline(v=seq(11,36,5),lty=3,lwd=1)
text(x=c(3,seq(8.5,33.5,5),39),y=rep(175,8),adj=0.5,label=c("Warmup","Lunge","Plank knee","Sit twist","Push-up","Spinal rock","Tripod","Cool down"),cex=0.7)
cols <- c("black","red","blue","green","orange","purple")
plot(x=tabata$dt-tabata$dt[1],y=seq(min(tabata[,-1]),max(tabata[,-1]),length.out=nrow(tabata)),
type="n",xlab="Day",ylab="Reps",main="Tacfit Mission 1 Recruit Tabata")
lines(y=apply(tabata[,-1],1,mean),x=tabata$dt-tabata$dt[1],col="grey90",lwd=20)
for(j in 2:7){
lines(y=tabata[,j],x=tabata$dt-tabata$dt[1],col=cols[j-1],type="o")
}
legend("topleft",lty=1,lwd=c(rep(1,6),10),col=c(cols,"grey90"),legend=c(names(tabata)[-1],"Mean"),cex=0.7)
plot(x=times,y=hrMean,type="n",xlab="Minutes",ylab="Average Heart Rate",ylim=c(50,220),main="Tacfit Mission 1 Recruit Heart Rate")
polygon(x=c(times,rev(times)),y=c(hrMean+hrSD,rev(hrMean)-rev(hrSD)),col="lightblue",border=NA)
lines(x=times,y=hrMean)
abline(v=c(6,36),lty=2,lwd=2)
abline(v=seq(11,36,5),lty=3,lwd=1)
text(x=c(3,seq(8.5,33.5,5),39),y=rep(175,8),adj=0.5,label=c("Warmup","Lunge","Plank knee","Sit twist","Push-up","Spinal rock","Tripod","Cool down"),cex=0.7)
plot(x=times,y=hrMean,type="n",xlab="Minutes",ylab="Average Heart Rate",ylim=c(50,220),main="Tacfit Mission 1 Recruit Heart Rate")
polygon(x=c(times,rev(times)),y=c(hrMean+hrSD,rev(hrMean)-rev(hrSD)),col="lightblue",border=NA)
lines(x=times,y=hrMean)
abline(v=c(6,36),lty=2,lwd=2)
abline(v=seq(11,36,5),lty=3,lwd=1)
text(x=c(3,seq(8.5,33.5,5),39),y=rep(220,8),adj=0.5,label=c("Warmup","Lunge","Plank knee","Sit twist","Push-up","Spinal rock","Tripod","Cool down"),cex=0.7)
plot.PMfinal
x <- runif(10,0,1)
y <- runif(10,0,1)
plot(y~x)
plot(y~x,xaxt="n",yaxt="n")
pchShow()
colors()
plot(y~x,xaxt="n",yaxt="n",xlab="",ylab="",cex=2,pch=15,bg="red")
plot(y~x,xaxt="n",yaxt="n",xlab="",ylab="",cex=2,pch=15,fill="red")
plot(y~x,xaxt="n",yaxt="n",xlab="",ylab="",cex=2,pch=16,bg="red")
plot(y~x,xaxt="n",yaxt="n",xlab="",ylab="",cex=2,pch=22,bg="red")
plot(y~x,xaxt="n",yaxt="n",xlab="",ylab="",cex=3,pch=22,bg="red")
x2 <- runif(100,0,1)
y2 <- runif(100,0,1)
plot(y2~x2,xaxt="n",yaxt="n",xlab="",ylab="",cex=3,pch=22,bg="lightpink")
colors()
plot(y2~x2,xaxt="n",yaxt="n",xlab="",ylab="",cex=3,pch=22,bg="lightpink4")
plot(y~x,xaxt="n",yaxt="n",xlab="",ylab="",cex=3,pch=22,bg="red3")
plot(y2~x2,xaxt="n",yaxt="n",xlab="",ylab="",cex=3,pch=22,bg="lightpink")
library(MASS)
#plot function
bivnplot <- function(bivn,lims,phi=25){
if(missing(lims)){lims <- c(range(bivn[,1]),range(bivn[,2]))}
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 45,lims=lims)
persp(bivn.kde, phi = phi, theta = 30,xlab="Kel",ylab="Vd",zlab="Probability",shade=0.2,col="gold",d=2,r=5,cex.lab=1.5) -> pmat
return(pmat)
}
bivn <- mvrnorm(1500, mu = c(1, 100), Sigma = matrix(c(0.1, 0, 0, 25), 2))
bivnplot(bivn)
?bibentry
citation(Pmetrics)
citation("Pmetrics")
setwd("~/LAPK/PmetricsSource/Test/SIM")
simdata1 <- SIMparse("simout1.txt")
names(simdata1)
dim(simdata1$obs)
?SIMparse
apply(simdata1$obs[1,,],2,median)
apply(simdata1$obs[1,,],2,quantile,0.25)
setwd("~/LAPK/Pmetrics")
PMtree("Voriconazole")
library(Pmetrics)
readPMdefaults()
PMopt
readPMdefaults
setDefaults(PMreadMatrix,delim=";")
getDefaults()
library(Pmetrics)
setDefaults(PMreadMatrix,delim=";")
PMwriteDefaults
PMwriteDefaults()
?PMwriteDefaults
library(Pmetrics)
getDefaults()
unsetDefaults(PMreadMatrix)
PMwriteDefaults()
library(Pmetrics)
unsetDefaults(PMreadMatrix)
PMwriteDefaults()
remove.packages("Defaults")
library(Pmetrics)
remove.packages("Defaults")
search()
install.packages(file.choose())
library(Pmetrics)
?setDefaults
??Defaults
library(Pmetrics)
remove.packages("Defaults")
search
search()
detach(2)
search()
detach(2)
install.packages(file.choose())
library(Pmetrics)
PMupdate()
library(Pmetric)
library(Pmetrics)
?plot.PMop
library(Pmetrics)
setwd("/Users/neely/LAPK/PmetricsSource/Test/NPAG/out-2012Oct31-1241/outputs")
NPload(1)
setwd("~/LAPK/PmetricsSource/Test/pd")
sub=20
nsub=20
pb <- txtProgressBar(min = 0, max = nsub, style = 3)
for(i in 1:nsub){
setTxtProgressBar(pb, i)
temp <- SIMparse(paste("simout",i,".txt",sep=""),silent=T)
times <- as.numeric(dimnames(temp$obs)$time)
temp <- matrix(temp$obs[outeq,,],nrow=nsim)
temp2 <- data.frame(id=rep(i,nrow(temp)*ncol(temp)),time=rep(times,nsim),simobs=c(t(temp)),simnum=rep(1:nsim,each=dim(temp)[2]))
simdata <- rbind(simdata,temp2)
}
close(pb)
outeq=1
pb <- txtProgressBar(min = 0, max = nsub, style = 3)
for(i in 1:nsub){
setTxtProgressBar(pb, i)
temp <- SIMparse(paste("simout",i,".txt",sep=""),silent=T)
times <- as.numeric(dimnames(temp$obs)$time)
temp <- matrix(temp$obs[outeq,,],nrow=nsim)
temp2 <- data.frame(id=rep(i,nrow(temp)*ncol(temp)),time=rep(times,nsim),simobs=c(t(temp)),simnum=rep(1:nsim,each=dim(temp)[2]))
simdata <- rbind(simdata,temp2)
}
close(pb)
nsim=1000
pb <- txtProgressBar(min = 0, max = nsub, style = 3)
for(i in 1:nsub){
setTxtProgressBar(pb, i)
temp <- SIMparse(paste("simout",i,".txt",sep=""),silent=T)
times <- as.numeric(dimnames(temp$obs)$time)
temp <- matrix(temp$obs[outeq,,],nrow=nsim)
temp2 <- data.frame(id=rep(i,nrow(temp)*ncol(temp)),time=rep(times,nsim),simobs=c(t(temp)),simnum=rep(1:nsim,each=dim(temp)[2]))
simdata <- rbind(simdata,temp2)
}
close(pb)
simdata <- data.frame()
pb <- txtProgressBar(min = 0, max = nsub, style = 3)
for(i in 1:nsub){
setTxtProgressBar(pb, i)
temp <- SIMparse(paste("simout",i,".txt",sep=""),silent=T)
times <- as.numeric(dimnames(temp$obs)$time)
temp <- matrix(temp$obs[outeq,,],nrow=nsim)
temp2 <- data.frame(id=rep(i,nrow(temp)*ncol(temp)),time=rep(times,nsim),simobs=c(t(temp)),simnum=rep(1:nsim,each=dim(temp)[2]))
simdata <- rbind(simdata,temp2)
}
close(pb)
setwd("~/LAPK/PmetricsSource/Test/pd")
file.copy(from=c("../src/model.txt","../src/ex1.csv"),to=getwd(),overwrite=T)
diag <- PMdiag("ex1.csv",poppar=final.1)
plot(diag)
