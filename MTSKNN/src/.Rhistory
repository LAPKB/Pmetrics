?citation
packageDescritption("Pmetrics")
packageDescription("Pmetrics")
?citEntry
?package.skeleton
getwd()
package.skeleton(name="~/Desktop/test",list="NPrun")
package.skeleton(name="Users/neely/Desktop/test",list="NPrun")
package.skeleton(name="test",list="NPrun",path="/Users/neely/Desktop/test")
NPrun
a <- function(x,y) x+y
package.skeleton(name="test",list="a",path="/Users/neely/Desktop/test")
package.skeleton(name="test",list="a",path="/Users/neely/Desktop/")
?writeClipboard
?dnorm
?plot
?plot.default
library(Pmetrics)
?Pmetrics
?NPrun
citation("Pmetrics")
packageDescription("Pmetrics")
?bibentry
library(nlme)
citation("nlme")
?citHeader
meta
meta$Date
names(meta)
vers
meta$Title
as.person("Michael Neely")
Sys.getenv()
?Rversion
??Rversion
?R.Version
R.version
getRversion()
getRversion()>"2.12.0"
citation("Pmetrics")
a <- citation("Pmetrics")
a
names(a)
?NPrun
log.axis
?log.axis
setwd("~/LAPK/R_NPAG/Pmetrics/R")
list.files(pattern="^[^x]")
data=op$post$pred
dat
data
y1
pow
labels
xtra
log.axis
labels
side=1
min(data)
pow
pretty(pow)
y1
pow
labels
data=op$post1
log.axis
data
data=op$post$pred
data
data
y1
installedVersion <- packageVersion("Pmetrics")
installedVersion
currentVersion <- NULL
!is.null(currentVersion) && (currentVersion > installedVersion
)
currentVersion <- 0
installedVersion <- 0
currentVersion > installedVersion
currentVersion <- 0
installedVersion <- 0
currentVersion <- package_version(suppressWarnings(
tryCatch(scan("http://www.lapk.org/PmetricsVersion.txt",what="character",quiet=T),
error = function(e) e <- 0)))
installedVersion <- packageVersion("Pmetrics")
currentVersion
installedVersion
currentVersion > installedVersion
library(MTSKNN)
packages <- packageDescription("Pmetrics")$Suggests
packages
packages <- gsub("\n","",packages)
packages <- unlist(strsplit(packages,","))
packages
?install.packages
?MTSKNN
??MTSKNN
makePmetrics <- function(fortranChange=F,build=T,pdf=F,check=F,buildData=NULL,
ITver,NPver,SIMver){
require(devtools)
OS <- switch(.Platform$OS.type,unix=1,windows=2)
if(OS==1){
#do this only if fortran files have changed
if(fortranChange==T){
system("rm ~/LAPK/PmetricsSource/Pmetrics/inst/code/*.f")
setwd("~/LAPK/PmetricsSource/Source")
system(paste("cat ./IT2B/prep/*.* > ../Pmetrics/inst/code/ITprep_",ITver,".f",sep=""))
system(paste("cat ./IT2B/error/*.* > ../Pmetrics/inst/code/ITerr_",ITver,".f",sep=""))
system(paste("cat ./IT2B/engine/*.* > ../Pmetrics/inst/code/ITeng_",ITver,".f",sep=""))
system(paste("cat ./NPAG/prep/*.* > ../Pmetrics/inst/code/NPprep_",NPver,".f",sep=""))
system(paste("cat ./NPAG/engine/*.* > ../Pmetrics/inst/code/NPeng_",NPver,".f",sep=""))
file.copy(from=paste("./Simulator/engine/MONT",SIMver,".FOR",sep=""),to=paste("../Pmetrics/inst/code/SIMeng_",SIMver,".f",sep=""),overwrite=T)
#remove comment lines and clean up
rmComm <- function(files){
for (i in files){
system(paste("~/LAPK/PmetricsSource/Source/win2mac.sa",i))
file.remove(i)
file.rename("newfile.txt",i)
code <- readLines(i)
commLines <- grep("^C",code,ignore.case=T)
commLines2 <- grep("^\\*",code)
if(length(commLines2)>0) {code <- code[-c(commLines,commLines2)]} else {code <- code[-commLines]}
code <- code[code!=""]
#longlines <- grep(".{61}",code)
#for(j in longlines){
#code[j] <- paste(substring(code[j],1,60),substring(code[j],61),sep="\n     &  ")
#}
writeLines(code,i,sep="\r\n")
}
}
setwd("~/LAPK/PmetricsSource/Pmetrics/inst/code")
rmComm(files=list.files())
setwd("~/LAPK/PmetricsSource/Pmetrics/inst/config")
writeLines("1","newFort.txt")
} else {
setwd("~/LAPK/PmetricsSource/Pmetrics/inst/config")
writeLines("0","newFort.txt")
}
#do this for all changes
setwd("~/LAPK/PmetricsSource")
document("Pmetrics")
if(pdf){
file.remove("./Pmetrics/inst/doc/Pmetrics-manual.pdf")
system("R CMD Rd2pdf --output=./Pmetrics/inst/doc/Pmetrics-manual.pdf --no-preview ./Pmetrics/man")
}
#build example datasets
#NPAG
if(buildData$npag){
setwd("~/LAPK/PmetricsSource/Test/NPAG")
file.copy(from=c("../src/model.txt","../src/ex.csv"),to=getwd(),overwrite=T)
NPrun(data="ex.csv",cycles=100,run=1,overwrite=T,intern=T)
PMload(1)
save(NPdata.1,final.1,cycle.1,op.1,cov.1,pop.1,post.1,mdata.1,file="~/LAPK/PmetricsSource/Pmetrics/data/PMex1.rda")
}
if(buildData$it2b){
#IT2B
setwd("~/LAPK/PmetricsSource/Test/IT2B")
file.copy(from=c("../src/model.txt","../src/ex.csv"),to=getwd(),overwrite=T)
ITrun(data="ex.csv",cycles=100,run=1,overwrite=T,intern=T)
PMload(1)
save(ITdata.1,final.1,cycle.1,op.1,cov.1,mdata.1,file="~/LAPK/PmetricsSource/Pmetrics/data/PMex2.rda")
}
if(buildData$baddata){
setwd("~/LAPK/PmetricsSource/Test")
badData <- PMreadMatrix("src/ex_bad.csv")
save(badData,file="~/LAPK/PmetricsSource/Pmetrics/data/PMex3.rda")
}
setwd("~/LAPK/PmetricsSource")
if(check) check("Pmetrics")
if(build){
build("Pmetrics",binary=T)
build("Pmetrics",binary=F)
}
install("Pmetrics")
} else {  #this is for Windows
#do this for all changes
setwd("C:/LAPK/PmetricsSource")
if(build) build("Pmetrics",binary=T)
}
}
makePmetrics(fortranChange=T,build=T,pdf=F,check=F,
buildData=list(npag=F,it2b=F,baddata=F),
ITver=23,NPver=24,SIMver="108")
??uninstall
remove.packages("MTSKNN")
PMbuild()
install.packages(i, repos = "http://www.lapk.org/software/Pmetrics")
PMbuild()
library(Pmetrics)
PMbuild()
?install.packages
i="MTSKNN"
install.packages(i,contriburl="http://www.lapk.org/software/Pmetrics")
install.packages(i,repos="http://www.lapk.org/software/Pmetrics")
getwd()
setwd("~/LAPK/PmetricsSource/Source")
setwd("~/LAPK/PmetricsSource/MTSKNN/src")
?build
i
install.packages(i,repos="http://www.lapk.org/software/Pmetrics")
install.packages(i,repos="http://www.lapk.org/software/Pmetrics")
install.packages(i,repos="http://www.lapk.org/software/Pmetrics/MTSKNN")
install.packages(i,repos="http://www.lapk.org/software/Pmetrics/MTSKNN")
library(MTSKNN)
remove.packages(MTSKNN)
remove.packages("MTSKNN")
library(MTSKNN)
library(MTSKNN)
remove.packages("MTSKNN")
